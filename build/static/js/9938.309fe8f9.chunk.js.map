{"version":3,"file":"static/js/9938.309fe8f9.chunk.js","mappings":"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","sources":["../node_modules/@noble/hashes/esm/_md.js","../node_modules/@noble/hashes/esm/sha2.js","../node_modules/@noble/hashes/esm/hmac.js","../node_modules/@walletconnect/utils/node_modules/viem/node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@walletconnect/utils/node_modules/viem/node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@walletconnect/utils/node_modules/viem/node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@walletconnect/utils/node_modules/viem/node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@walletconnect/utils/node_modules/viem/node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@walletconnect/utils/node_modules/viem/node_modules/@noble/curves/esm/abstract/hash-to-curve.js","../node_modules/@walletconnect/utils/node_modules/viem/node_modules/@noble/curves/esm/secp256k1.js"],"sourcesContent":["import{Hash,abytes,aexists,aoutput,clean,createView,toBytes}from\"./utils.js\";export function setBigUint64(view,byteOffset,value,isLE){if(\"function\"==typeof view.setBigUint64)return view.setBigUint64(byteOffset,value,isLE);const _32n=BigInt(32),_u32_max=BigInt(4294967295),wh=Number(value>>_32n&_u32_max),wl=Number(value&_u32_max),h=isLE?4:0,l=isLE?0:4;view.setUint32(byteOffset+h,wh,isLE),view.setUint32(byteOffset+l,wl,isLE)}export function Chi(a,b,c){return a&b^~a&c}export function Maj(a,b,c){return a&b^a&c^b&c}export class HashMD extends Hash{constructor(blockLen,outputLen,padOffset,isLE){super(),this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.blockLen=blockLen,this.outputLen=outputLen,this.padOffset=padOffset,this.isLE=isLE,this.buffer=new Uint8Array(blockLen),this.view=createView(this.buffer)}update(data){aexists(this),data=toBytes(data),abytes(data);const{view:view,buffer:buffer,blockLen:blockLen}=this,len=data.length;for(let pos=0;pos<len;){const take=Math.min(blockLen-this.pos,len-pos);if(take===blockLen){const dataView=createView(data);for(;blockLen<=len-pos;pos+=blockLen)this.process(dataView,pos);continue}buffer.set(data.subarray(pos,pos+take),this.pos),this.pos+=take,pos+=take,this.pos===blockLen&&(this.process(view,0),this.pos=0)}return this.length+=data.length,this.roundClean(),this}digestInto(out){aexists(this),aoutput(out,this),this.finished=!0;const{buffer:buffer,view:view,blockLen:blockLen,isLE:isLE}=this;let{pos:pos}=this;buffer[pos++]=128,clean(this.buffer.subarray(pos)),this.padOffset>blockLen-pos&&(this.process(view,0),pos=0);for(let i=pos;i<blockLen;i++)buffer[i]=0;setBigUint64(view,blockLen-8,BigInt(8*this.length),isLE),this.process(view,0);const oview=createView(out),len=this.outputLen;if(len%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");const outLen=len/4,state=this.get();if(outLen>state.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let i=0;i<outLen;i++)oview.setUint32(4*i,state[i],isLE)}digest(){const{buffer:buffer,outputLen:outputLen}=this;this.digestInto(buffer);const res=buffer.slice(0,outputLen);return this.destroy(),res}_cloneInto(to){to||(to=new this.constructor),to.set(...this.get());const{blockLen:blockLen,buffer:buffer,length:length,finished:finished,destroyed:destroyed,pos:pos}=this;return to.destroyed=destroyed,to.finished=finished,to.length=length,to.pos=pos,length%blockLen&&to.buffer.set(buffer),to}clone(){return this._cloneInto()}}export const SHA256_IV=Uint32Array.from([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]);export const SHA224_IV=Uint32Array.from([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]);export const SHA384_IV=Uint32Array.from([3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]);export const SHA512_IV=Uint32Array.from([1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209]);","import{Chi,HashMD,Maj,SHA224_IV,SHA256_IV,SHA384_IV,SHA512_IV}from\"./_md.js\";import*as u64 from\"./_u64.js\";import{clean,createHasher,rotr}from\"./utils.js\";const SHA256_K=Uint32Array.from([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),SHA256_W=new Uint32Array(64);export class SHA256 extends HashMD{constructor(outputLen=32){super(64,outputLen,8,!1),this.A=0|SHA256_IV[0],this.B=0|SHA256_IV[1],this.C=0|SHA256_IV[2],this.D=0|SHA256_IV[3],this.E=0|SHA256_IV[4],this.F=0|SHA256_IV[5],this.G=0|SHA256_IV[6],this.H=0|SHA256_IV[7]}get(){const{A:A,B:B,C:C,D:D,E:E,F:F,G:G,H:H}=this;return[A,B,C,D,E,F,G,H]}set(A,B,C,D,E,F,G,H){this.A=0|A,this.B=0|B,this.C=0|C,this.D=0|D,this.E=0|E,this.F=0|F,this.G=0|G,this.H=0|H}process(view,offset){for(let i=0;i<16;i++,offset+=4)SHA256_W[i]=view.getUint32(offset,!1);for(let i=16;i<64;i++){const W15=SHA256_W[i-15],W2=SHA256_W[i-2],s0=rotr(W15,7)^rotr(W15,18)^W15>>>3,s1=rotr(W2,17)^rotr(W2,19)^W2>>>10;SHA256_W[i]=s1+SHA256_W[i-7]+s0+SHA256_W[i-16]|0}let{A:A,B:B,C:C,D:D,E:E,F:F,G:G,H:H}=this;for(let i=0;i<64;i++){const T1=H+(rotr(E,6)^rotr(E,11)^rotr(E,25))+Chi(E,F,G)+SHA256_K[i]+SHA256_W[i]|0,T2=(rotr(A,2)^rotr(A,13)^rotr(A,22))+Maj(A,B,C)|0;H=G,G=F,F=E,E=D+T1|0,D=C,C=B,B=A,A=T1+T2|0}A=A+this.A|0,B=B+this.B|0,C=C+this.C|0,D=D+this.D|0,E=E+this.E|0,F=F+this.F|0,G=G+this.G|0,H=H+this.H|0,this.set(A,B,C,D,E,F,G,H)}roundClean(){clean(SHA256_W)}destroy(){this.set(0,0,0,0,0,0,0,0),clean(this.buffer)}}export class SHA224 extends SHA256{constructor(){super(28),this.A=0|SHA224_IV[0],this.B=0|SHA224_IV[1],this.C=0|SHA224_IV[2],this.D=0|SHA224_IV[3],this.E=0|SHA224_IV[4],this.F=0|SHA224_IV[5],this.G=0|SHA224_IV[6],this.H=0|SHA224_IV[7]}}const K512=(()=>u64.split([\"0x428a2f98d728ae22\",\"0x7137449123ef65cd\",\"0xb5c0fbcfec4d3b2f\",\"0xe9b5dba58189dbbc\",\"0x3956c25bf348b538\",\"0x59f111f1b605d019\",\"0x923f82a4af194f9b\",\"0xab1c5ed5da6d8118\",\"0xd807aa98a3030242\",\"0x12835b0145706fbe\",\"0x243185be4ee4b28c\",\"0x550c7dc3d5ffb4e2\",\"0x72be5d74f27b896f\",\"0x80deb1fe3b1696b1\",\"0x9bdc06a725c71235\",\"0xc19bf174cf692694\",\"0xe49b69c19ef14ad2\",\"0xefbe4786384f25e3\",\"0x0fc19dc68b8cd5b5\",\"0x240ca1cc77ac9c65\",\"0x2de92c6f592b0275\",\"0x4a7484aa6ea6e483\",\"0x5cb0a9dcbd41fbd4\",\"0x76f988da831153b5\",\"0x983e5152ee66dfab\",\"0xa831c66d2db43210\",\"0xb00327c898fb213f\",\"0xbf597fc7beef0ee4\",\"0xc6e00bf33da88fc2\",\"0xd5a79147930aa725\",\"0x06ca6351e003826f\",\"0x142929670a0e6e70\",\"0x27b70a8546d22ffc\",\"0x2e1b21385c26c926\",\"0x4d2c6dfc5ac42aed\",\"0x53380d139d95b3df\",\"0x650a73548baf63de\",\"0x766a0abb3c77b2a8\",\"0x81c2c92e47edaee6\",\"0x92722c851482353b\",\"0xa2bfe8a14cf10364\",\"0xa81a664bbc423001\",\"0xc24b8b70d0f89791\",\"0xc76c51a30654be30\",\"0xd192e819d6ef5218\",\"0xd69906245565a910\",\"0xf40e35855771202a\",\"0x106aa07032bbd1b8\",\"0x19a4c116b8d2d0c8\",\"0x1e376c085141ab53\",\"0x2748774cdf8eeb99\",\"0x34b0bcb5e19b48a8\",\"0x391c0cb3c5c95a63\",\"0x4ed8aa4ae3418acb\",\"0x5b9cca4f7763e373\",\"0x682e6ff3d6b2b8a3\",\"0x748f82ee5defb2fc\",\"0x78a5636f43172f60\",\"0x84c87814a1f0ab72\",\"0x8cc702081a6439ec\",\"0x90befffa23631e28\",\"0xa4506cebde82bde9\",\"0xbef9a3f7b2c67915\",\"0xc67178f2e372532b\",\"0xca273eceea26619c\",\"0xd186b8c721c0c207\",\"0xeada7dd6cde0eb1e\",\"0xf57d4f7fee6ed178\",\"0x06f067aa72176fba\",\"0x0a637dc5a2c898a6\",\"0x113f9804bef90dae\",\"0x1b710b35131c471b\",\"0x28db77f523047d84\",\"0x32caab7b40c72493\",\"0x3c9ebe0a15c9bebc\",\"0x431d67c49c100d4c\",\"0x4cc5d4becb3e42b6\",\"0x597f299cfc657e2a\",\"0x5fcb6fab3ad6faec\",\"0x6c44198c4a475817\"].map(n=>BigInt(n))))(),SHA512_Kh=(()=>K512[0])(),SHA512_Kl=(()=>K512[1])(),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);export class SHA512 extends HashMD{constructor(outputLen=64){super(128,outputLen,16,!1),this.Ah=0|SHA512_IV[0],this.Al=0|SHA512_IV[1],this.Bh=0|SHA512_IV[2],this.Bl=0|SHA512_IV[3],this.Ch=0|SHA512_IV[4],this.Cl=0|SHA512_IV[5],this.Dh=0|SHA512_IV[6],this.Dl=0|SHA512_IV[7],this.Eh=0|SHA512_IV[8],this.El=0|SHA512_IV[9],this.Fh=0|SHA512_IV[10],this.Fl=0|SHA512_IV[11],this.Gh=0|SHA512_IV[12],this.Gl=0|SHA512_IV[13],this.Hh=0|SHA512_IV[14],this.Hl=0|SHA512_IV[15]}get(){const{Ah:Ah,Al:Al,Bh:Bh,Bl:Bl,Ch:Ch,Cl:Cl,Dh:Dh,Dl:Dl,Eh:Eh,El:El,Fh:Fh,Fl:Fl,Gh:Gh,Gl:Gl,Hh:Hh,Hl:Hl}=this;return[Ah,Al,Bh,Bl,Ch,Cl,Dh,Dl,Eh,El,Fh,Fl,Gh,Gl,Hh,Hl]}set(Ah,Al,Bh,Bl,Ch,Cl,Dh,Dl,Eh,El,Fh,Fl,Gh,Gl,Hh,Hl){this.Ah=0|Ah,this.Al=0|Al,this.Bh=0|Bh,this.Bl=0|Bl,this.Ch=0|Ch,this.Cl=0|Cl,this.Dh=0|Dh,this.Dl=0|Dl,this.Eh=0|Eh,this.El=0|El,this.Fh=0|Fh,this.Fl=0|Fl,this.Gh=0|Gh,this.Gl=0|Gl,this.Hh=0|Hh,this.Hl=0|Hl}process(view,offset){for(let i=0;i<16;i++,offset+=4)SHA512_W_H[i]=view.getUint32(offset),SHA512_W_L[i]=view.getUint32(offset+=4);for(let i=16;i<80;i++){const W15h=0|SHA512_W_H[i-15],W15l=0|SHA512_W_L[i-15],s0h=u64.rotrSH(W15h,W15l,1)^u64.rotrSH(W15h,W15l,8)^u64.shrSH(W15h,W15l,7),s0l=u64.rotrSL(W15h,W15l,1)^u64.rotrSL(W15h,W15l,8)^u64.shrSL(W15h,W15l,7),W2h=0|SHA512_W_H[i-2],W2l=0|SHA512_W_L[i-2],s1h=u64.rotrSH(W2h,W2l,19)^u64.rotrBH(W2h,W2l,61)^u64.shrSH(W2h,W2l,6),s1l=u64.rotrSL(W2h,W2l,19)^u64.rotrBL(W2h,W2l,61)^u64.shrSL(W2h,W2l,6),SUMl=u64.add4L(s0l,s1l,SHA512_W_L[i-7],SHA512_W_L[i-16]),SUMh=u64.add4H(SUMl,s0h,s1h,SHA512_W_H[i-7],SHA512_W_H[i-16]);SHA512_W_H[i]=0|SUMh,SHA512_W_L[i]=0|SUMl}let{Ah:Ah,Al:Al,Bh:Bh,Bl:Bl,Ch:Ch,Cl:Cl,Dh:Dh,Dl:Dl,Eh:Eh,El:El,Fh:Fh,Fl:Fl,Gh:Gh,Gl:Gl,Hh:Hh,Hl:Hl}=this;for(let i=0;i<80;i++){const sigma1h=u64.rotrSH(Eh,El,14)^u64.rotrSH(Eh,El,18)^u64.rotrBH(Eh,El,41),sigma1l=u64.rotrSL(Eh,El,14)^u64.rotrSL(Eh,El,18)^u64.rotrBL(Eh,El,41),CHIh=Eh&Fh^~Eh&Gh,CHIl=El&Fl^~El&Gl,T1ll=u64.add5L(Hl,sigma1l,CHIl,SHA512_Kl[i],SHA512_W_L[i]),T1h=u64.add5H(T1ll,Hh,sigma1h,CHIh,SHA512_Kh[i],SHA512_W_H[i]),T1l=0|T1ll,sigma0h=u64.rotrSH(Ah,Al,28)^u64.rotrBH(Ah,Al,34)^u64.rotrBH(Ah,Al,39),sigma0l=u64.rotrSL(Ah,Al,28)^u64.rotrBL(Ah,Al,34)^u64.rotrBL(Ah,Al,39),MAJh=Ah&Bh^Ah&Ch^Bh&Ch,MAJl=Al&Bl^Al&Cl^Bl&Cl;Hh=0|Gh,Hl=0|Gl,Gh=0|Fh,Gl=0|Fl,Fh=0|Eh,Fl=0|El,({h:Eh,l:El}=u64.add(0|Dh,0|Dl,0|T1h,0|T1l)),Dh=0|Ch,Dl=0|Cl,Ch=0|Bh,Cl=0|Bl,Bh=0|Ah,Bl=0|Al;const All=u64.add3L(T1l,sigma0l,MAJl);Ah=u64.add3H(All,T1h,sigma0h,MAJh),Al=0|All}({h:Ah,l:Al}=u64.add(0|this.Ah,0|this.Al,0|Ah,0|Al)),({h:Bh,l:Bl}=u64.add(0|this.Bh,0|this.Bl,0|Bh,0|Bl)),({h:Ch,l:Cl}=u64.add(0|this.Ch,0|this.Cl,0|Ch,0|Cl)),({h:Dh,l:Dl}=u64.add(0|this.Dh,0|this.Dl,0|Dh,0|Dl)),({h:Eh,l:El}=u64.add(0|this.Eh,0|this.El,0|Eh,0|El)),({h:Fh,l:Fl}=u64.add(0|this.Fh,0|this.Fl,0|Fh,0|Fl)),({h:Gh,l:Gl}=u64.add(0|this.Gh,0|this.Gl,0|Gh,0|Gl)),({h:Hh,l:Hl}=u64.add(0|this.Hh,0|this.Hl,0|Hh,0|Hl)),this.set(Ah,Al,Bh,Bl,Ch,Cl,Dh,Dl,Eh,El,Fh,Fl,Gh,Gl,Hh,Hl)}roundClean(){clean(SHA512_W_H,SHA512_W_L)}destroy(){clean(this.buffer),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}export class SHA384 extends SHA512{constructor(){super(48),this.Ah=0|SHA384_IV[0],this.Al=0|SHA384_IV[1],this.Bh=0|SHA384_IV[2],this.Bl=0|SHA384_IV[3],this.Ch=0|SHA384_IV[4],this.Cl=0|SHA384_IV[5],this.Dh=0|SHA384_IV[6],this.Dl=0|SHA384_IV[7],this.Eh=0|SHA384_IV[8],this.El=0|SHA384_IV[9],this.Fh=0|SHA384_IV[10],this.Fl=0|SHA384_IV[11],this.Gh=0|SHA384_IV[12],this.Gl=0|SHA384_IV[13],this.Hh=0|SHA384_IV[14],this.Hl=0|SHA384_IV[15]}}const T224_IV=Uint32Array.from([2352822216,424955298,1944164710,2312950998,502970286,855612546,1738396948,1479516111,258812777,2077511080,2011393907,79989058,1067287976,1780299464,286451373,2446758561]),T256_IV=Uint32Array.from([573645204,4230739756,2673172387,3360449730,596883563,1867755857,2520282905,1497426621,2519219938,2827943907,3193839141,1401305490,721525244,746961066,246885852,2177182882]);export class SHA512_224 extends SHA512{constructor(){super(28),this.Ah=0|T224_IV[0],this.Al=0|T224_IV[1],this.Bh=0|T224_IV[2],this.Bl=0|T224_IV[3],this.Ch=0|T224_IV[4],this.Cl=0|T224_IV[5],this.Dh=0|T224_IV[6],this.Dl=0|T224_IV[7],this.Eh=0|T224_IV[8],this.El=0|T224_IV[9],this.Fh=0|T224_IV[10],this.Fl=0|T224_IV[11],this.Gh=0|T224_IV[12],this.Gl=0|T224_IV[13],this.Hh=0|T224_IV[14],this.Hl=0|T224_IV[15]}}export class SHA512_256 extends SHA512{constructor(){super(32),this.Ah=0|T256_IV[0],this.Al=0|T256_IV[1],this.Bh=0|T256_IV[2],this.Bl=0|T256_IV[3],this.Ch=0|T256_IV[4],this.Cl=0|T256_IV[5],this.Dh=0|T256_IV[6],this.Dl=0|T256_IV[7],this.Eh=0|T256_IV[8],this.El=0|T256_IV[9],this.Fh=0|T256_IV[10],this.Fl=0|T256_IV[11],this.Gh=0|T256_IV[12],this.Gl=0|T256_IV[13],this.Hh=0|T256_IV[14],this.Hl=0|T256_IV[15]}}export const sha256=createHasher(()=>new SHA256);export const sha224=createHasher(()=>new SHA224);export const sha512=createHasher(()=>new SHA512);export const sha384=createHasher(()=>new SHA384);export const sha512_256=createHasher(()=>new SHA512_256);export const sha512_224=createHasher(()=>new SHA512_224);","import{abytes,aexists,ahash,clean,Hash,toBytes}from\"./utils.js\";export class HMAC extends Hash{constructor(hash,_key){super(),this.finished=!1,this.destroyed=!1,ahash(hash);const key=toBytes(_key);if(this.iHash=hash.create(),\"function\"!=typeof this.iHash.update)throw new Error(\"Expected instance of class which extends utils.Hash\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const blockLen=this.blockLen,pad=new Uint8Array(blockLen);pad.set(key.length>blockLen?hash.create().update(key).digest():key);for(let i=0;i<pad.length;i++)pad[i]^=54;this.iHash.update(pad),this.oHash=hash.create();for(let i=0;i<pad.length;i++)pad[i]^=106;this.oHash.update(pad),clean(pad)}update(buf){return aexists(this),this.iHash.update(buf),this}digestInto(out){aexists(this),abytes(out,this.outputLen),this.finished=!0,this.iHash.digestInto(out),this.oHash.update(out),this.oHash.digestInto(out),this.destroy()}digest(){const out=new Uint8Array(this.oHash.outputLen);return this.digestInto(out),out}_cloneInto(to){to||(to=Object.create(Object.getPrototypeOf(this),{}));const{oHash:oHash,iHash:iHash,finished:finished,destroyed:destroyed,blockLen:blockLen,outputLen:outputLen}=this;return to.finished=finished,to.destroyed=destroyed,to.blockLen=blockLen,to.outputLen=outputLen,to.oHash=oHash._cloneInto(to.oHash),to.iHash=iHash._cloneInto(to.iHash),to}clone(){return this._cloneInto()}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}export const hmac=(hash,key,message)=>new HMAC(hash,key).update(message).digest();hmac.create=(hash,key)=>new HMAC(hash,key);","const _0n=BigInt(0),_1n=BigInt(1);export function isBytes(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&\"Uint8Array\"===a.constructor.name}export function abytes(item){if(!isBytes(item))throw new Error(\"Uint8Array expected\")}export function abool(title,value){if(\"boolean\"!=typeof value)throw new Error(title+\" boolean expected, got \"+value)}export function numberToHexUnpadded(num){const hex=num.toString(16);return 1&hex.length?\"0\"+hex:hex}export function hexToNumber(hex){if(\"string\"!=typeof hex)throw new Error(\"hex string expected, got \"+typeof hex);return\"\"===hex?_0n:BigInt(\"0x\"+hex)}const hasHexBuiltin=\"function\"==typeof Uint8Array.from([]).toHex&&\"function\"==typeof Uint8Array.fromHex,hexes=Array.from({length:256},(_,i)=>i.toString(16).padStart(2,\"0\"));export function bytesToHex(bytes){if(abytes(bytes),hasHexBuiltin)return bytes.toHex();let hex=\"\";for(let i=0;i<bytes.length;i++)hex+=hexes[bytes[i]];return hex}const asciis={_0:48,_9:57,A:65,F:70,a:97,f:102};function asciiToBase16(ch){return ch>=asciis._0&&ch<=asciis._9?ch-asciis._0:ch>=asciis.A&&ch<=asciis.F?ch-(asciis.A-10):ch>=asciis.a&&ch<=asciis.f?ch-(asciis.a-10):void 0}export function hexToBytes(hex){if(\"string\"!=typeof hex)throw new Error(\"hex string expected, got \"+typeof hex);if(hasHexBuiltin)return Uint8Array.fromHex(hex);const hl=hex.length,al=hl/2;if(hl%2)throw new Error(\"hex string expected, got unpadded hex of length \"+hl);const array=new Uint8Array(al);for(let ai=0,hi=0;ai<al;ai++,hi+=2){const n1=asciiToBase16(hex.charCodeAt(hi)),n2=asciiToBase16(hex.charCodeAt(hi+1));if(void 0===n1||void 0===n2){const char=hex[hi]+hex[hi+1];throw new Error('hex string expected, got non-hex character \"'+char+'\" at index '+hi)}array[ai]=16*n1+n2}return array}export function bytesToNumberBE(bytes){return hexToNumber(bytesToHex(bytes))}export function bytesToNumberLE(bytes){return abytes(bytes),hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()))}export function numberToBytesBE(n,len){return hexToBytes(n.toString(16).padStart(2*len,\"0\"))}export function numberToBytesLE(n,len){return numberToBytesBE(n,len).reverse()}export function numberToVarBytesBE(n){return hexToBytes(numberToHexUnpadded(n))}export function ensureBytes(title,hex,expectedLength){let res;if(\"string\"==typeof hex)try{res=hexToBytes(hex)}catch(e){throw new Error(title+\" must be hex string or Uint8Array, cause: \"+e)}else{if(!isBytes(hex))throw new Error(title+\" must be hex string or Uint8Array\");res=Uint8Array.from(hex)}const len=res.length;if(\"number\"==typeof expectedLength&&len!==expectedLength)throw new Error(title+\" of length \"+expectedLength+\" expected, got \"+len);return res}export function concatBytes(...arrays){let sum=0;for(let i=0;i<arrays.length;i++){const a=arrays[i];abytes(a),sum+=a.length}const res=new Uint8Array(sum);for(let i=0,pad=0;i<arrays.length;i++){const a=arrays[i];res.set(a,pad),pad+=a.length}return res}export function equalBytes(a,b){if(a.length!==b.length)return!1;let diff=0;for(let i=0;i<a.length;i++)diff|=a[i]^b[i];return 0===diff}export function utf8ToBytes(str){if(\"string\"!=typeof str)throw new Error(\"string expected\");return new Uint8Array((new TextEncoder).encode(str))}const isPosBig=n=>\"bigint\"==typeof n&&_0n<=n;export function inRange(n,min,max){return isPosBig(n)&&isPosBig(min)&&isPosBig(max)&&min<=n&&n<max}export function aInRange(title,n,min,max){if(!inRange(n,min,max))throw new Error(\"expected valid \"+title+\": \"+min+\" <= n < \"+max+\", got \"+n)}export function bitLen(n){let len;for(len=0;n>_0n;n>>=_1n,len+=1);return len}export function bitGet(n,pos){return n>>BigInt(pos)&_1n}export function bitSet(n,pos,value){return n|(value?_1n:_0n)<<BigInt(pos)}export const bitMask=n=>(_1n<<BigInt(n))-_1n;const u8n=len=>new Uint8Array(len),u8fr=arr=>Uint8Array.from(arr);export function createHmacDrbg(hashLen,qByteLen,hmacFn){if(\"number\"!=typeof hashLen||hashLen<2)throw new Error(\"hashLen must be a number\");if(\"number\"!=typeof qByteLen||qByteLen<2)throw new Error(\"qByteLen must be a number\");if(\"function\"!=typeof hmacFn)throw new Error(\"hmacFn must be a function\");let v=u8n(hashLen),k=u8n(hashLen),i=0;const reset=()=>{v.fill(1),k.fill(0),i=0},h=(...b)=>hmacFn(k,v,...b),reseed=(seed=u8n(0))=>{k=h(u8fr([0]),seed),v=h(),0!==seed.length&&(k=h(u8fr([1]),seed),v=h())},gen=()=>{if(i++>=1e3)throw new Error(\"drbg: tried 1000 values\");let len=0;const out=[];for(;len<qByteLen;){v=h();const sl=v.slice();out.push(sl),len+=v.length}return concatBytes(...out)};return(seed,pred)=>{let res;for(reset(),reseed(seed);!(res=pred(gen()));)reseed();return reset(),res}}const validatorFns={bigint:val=>\"bigint\"==typeof val,function:val=>\"function\"==typeof val,boolean:val=>\"boolean\"==typeof val,string:val=>\"string\"==typeof val,stringOrUint8Array:val=>\"string\"==typeof val||isBytes(val),isSafeInteger:val=>Number.isSafeInteger(val),array:val=>Array.isArray(val),field:(val,object)=>object.Fp.isValid(val),hash:val=>\"function\"==typeof val&&Number.isSafeInteger(val.outputLen)};export function validateObject(object,validators,optValidators={}){const checkField=(fieldName,type,isOptional)=>{const checkVal=validatorFns[type];if(\"function\"!=typeof checkVal)throw new Error(\"invalid validator function\");const val=object[fieldName];if(!(isOptional&&void 0===val||checkVal(val,object)))throw new Error(\"param \"+String(fieldName)+\" is invalid. Expected \"+type+\", got \"+val)};for(const[fieldName,type]of Object.entries(validators))checkField(fieldName,type,!1);for(const[fieldName,type]of Object.entries(optValidators))checkField(fieldName,type,!0);return object}export const notImplemented=()=>{throw new Error(\"not implemented\")};export function memoized(fn){const map=new WeakMap;return(arg,...args)=>{const val=map.get(arg);if(void 0!==val)return val;const computed=fn(arg,...args);return map.set(arg,computed),computed}}","import{anumber}from\"@noble/hashes/utils\";import{bitMask,bytesToNumberBE,bytesToNumberLE,ensureBytes,numberToBytesBE,numberToBytesLE,validateObject}from\"./utils.js\";const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_3n=BigInt(3),_4n=BigInt(4),_5n=BigInt(5),_8n=BigInt(8);export function mod(a,b){const result=a%b;return result>=_0n?result:b+result}export function pow(num,power,modulo){return FpPow(Field(modulo),num,power)}export function pow2(x,power,modulo){let res=x;for(;power-- >_0n;)res*=res,res%=modulo;return res}export function invert(number,modulo){if(number===_0n)throw new Error(\"invert: expected non-zero number\");if(modulo<=_0n)throw new Error(\"invert: expected positive modulus, got \"+modulo);let a=mod(number,modulo),b=modulo,x=_0n,y=_1n,u=_1n,v=_0n;for(;a!==_0n;){const q=b/a,r=b%a,m=x-u*q,n=y-v*q;b=a,a=r,x=u,y=v,u=m,v=n}if(b!==_1n)throw new Error(\"invert: does not exist\");return mod(x,modulo)}function sqrt3mod4(Fp,n){const p1div4=(Fp.ORDER+_1n)/_4n,root=Fp.pow(n,p1div4);if(!Fp.eql(Fp.sqr(root),n))throw new Error(\"Cannot find square root\");return root}function sqrt5mod8(Fp,n){const p5div8=(Fp.ORDER-_5n)/_8n,n2=Fp.mul(n,_2n),v=Fp.pow(n2,p5div8),nv=Fp.mul(n,v),i=Fp.mul(Fp.mul(nv,_2n),v),root=Fp.mul(nv,Fp.sub(i,Fp.ONE));if(!Fp.eql(Fp.sqr(root),n))throw new Error(\"Cannot find square root\");return root}export function tonelliShanks(P){if(P<BigInt(3))throw new Error(\"sqrt is not defined for small field\");let Q=P-_1n,S=0;for(;Q%_2n===_0n;)Q/=_2n,S++;let Z=_2n;const _Fp=Field(P);for(;1===FpLegendre(_Fp,Z);)if(Z++>1e3)throw new Error(\"Cannot find square root: probably non-prime P\");if(1===S)return sqrt3mod4;let cc=_Fp.pow(Z,Q);const Q1div2=(Q+_1n)/_2n;return function(Fp,n){if(Fp.is0(n))return n;if(1!==FpLegendre(Fp,n))throw new Error(\"Cannot find square root\");let M=S,c=Fp.mul(Fp.ONE,cc),t=Fp.pow(n,Q),R=Fp.pow(n,Q1div2);for(;!Fp.eql(t,Fp.ONE);){if(Fp.is0(t))return Fp.ZERO;let i=1,t_tmp=Fp.sqr(t);for(;!Fp.eql(t_tmp,Fp.ONE);)if(i++,t_tmp=Fp.sqr(t_tmp),i===M)throw new Error(\"Cannot find square root\");const exponent=_1n<<BigInt(M-i-1),b=Fp.pow(c,exponent);M=i,c=Fp.sqr(b),t=Fp.mul(t,c),R=Fp.mul(R,b)}return R}}export function FpSqrt(P){return P%_4n===_3n?sqrt3mod4:P%_8n===_5n?sqrt5mod8:tonelliShanks(P)}export const isNegativeLE=(num,modulo)=>(mod(num,modulo)&_1n)===_1n;const FIELD_FIELDS=[\"create\",\"isValid\",\"is0\",\"neg\",\"inv\",\"sqrt\",\"sqr\",\"eql\",\"add\",\"sub\",\"mul\",\"pow\",\"div\",\"addN\",\"subN\",\"mulN\",\"sqrN\"];export function validateField(field){const opts=FIELD_FIELDS.reduce((map,val)=>(map[val]=\"function\",map),{ORDER:\"bigint\",MASK:\"bigint\",BYTES:\"isSafeInteger\",BITS:\"isSafeInteger\"});return validateObject(field,opts)}export function FpPow(Fp,num,power){if(power<_0n)throw new Error(\"invalid exponent, negatives unsupported\");if(power===_0n)return Fp.ONE;if(power===_1n)return num;let p=Fp.ONE,d=num;for(;power>_0n;)power&_1n&&(p=Fp.mul(p,d)),d=Fp.sqr(d),power>>=_1n;return p}export function FpInvertBatch(Fp,nums,passZero=!1){const inverted=new Array(nums.length).fill(passZero?Fp.ZERO:void 0),multipliedAcc=nums.reduce((acc,num,i)=>Fp.is0(num)?acc:(inverted[i]=acc,Fp.mul(acc,num)),Fp.ONE),invertedAcc=Fp.inv(multipliedAcc);return nums.reduceRight((acc,num,i)=>Fp.is0(num)?acc:(inverted[i]=Fp.mul(acc,inverted[i]),Fp.mul(acc,num)),invertedAcc),inverted}export function FpDiv(Fp,lhs,rhs){return Fp.mul(lhs,\"bigint\"==typeof rhs?invert(rhs,Fp.ORDER):Fp.inv(rhs))}export function FpLegendre(Fp,n){const p1mod2=(Fp.ORDER-_1n)/_2n,powered=Fp.pow(n,p1mod2),yes=Fp.eql(powered,Fp.ONE),zero=Fp.eql(powered,Fp.ZERO),no=Fp.eql(powered,Fp.neg(Fp.ONE));if(!yes&&!zero&&!no)throw new Error(\"invalid Legendre symbol result\");return yes?1:zero?0:-1}export function FpIsSquare(Fp,n){return 1===FpLegendre(Fp,n)}export function nLength(n,nBitLength){void 0!==nBitLength&&anumber(nBitLength);const _nBitLength=void 0!==nBitLength?nBitLength:n.toString(2).length;return{nBitLength:_nBitLength,nByteLength:Math.ceil(_nBitLength/8)}}export function Field(ORDER,bitLen,isLE=!1,redef={}){if(ORDER<=_0n)throw new Error(\"invalid field: expected ORDER > 0, got \"+ORDER);const{nBitLength:BITS,nByteLength:BYTES}=nLength(ORDER,bitLen);if(BYTES>2048)throw new Error(\"invalid field: expected ORDER of <= 2048 bytes\");let sqrtP;const f=Object.freeze({ORDER:ORDER,isLE:isLE,BITS:BITS,BYTES:BYTES,MASK:bitMask(BITS),ZERO:_0n,ONE:_1n,create:num=>mod(num,ORDER),isValid:num=>{if(\"bigint\"!=typeof num)throw new Error(\"invalid field element: expected bigint, got \"+typeof num);return _0n<=num&&num<ORDER},is0:num=>num===_0n,isOdd:num=>(num&_1n)===_1n,neg:num=>mod(-num,ORDER),eql:(lhs,rhs)=>lhs===rhs,sqr:num=>mod(num*num,ORDER),add:(lhs,rhs)=>mod(lhs+rhs,ORDER),sub:(lhs,rhs)=>mod(lhs-rhs,ORDER),mul:(lhs,rhs)=>mod(lhs*rhs,ORDER),pow:(num,power)=>FpPow(f,num,power),div:(lhs,rhs)=>mod(lhs*invert(rhs,ORDER),ORDER),sqrN:num=>num*num,addN:(lhs,rhs)=>lhs+rhs,subN:(lhs,rhs)=>lhs-rhs,mulN:(lhs,rhs)=>lhs*rhs,inv:num=>invert(num,ORDER),sqrt:redef.sqrt||(n=>(sqrtP||(sqrtP=FpSqrt(ORDER)),sqrtP(f,n))),toBytes:num=>isLE?numberToBytesLE(num,BYTES):numberToBytesBE(num,BYTES),fromBytes:bytes=>{if(bytes.length!==BYTES)throw new Error(\"Field.fromBytes: expected \"+BYTES+\" bytes, got \"+bytes.length);return isLE?bytesToNumberLE(bytes):bytesToNumberBE(bytes)},invertBatch:lst=>FpInvertBatch(f,lst),cmov:(a,b,c)=>c?b:a});return Object.freeze(f)}export function FpSqrtOdd(Fp,elm){if(!Fp.isOdd)throw new Error(\"Field doesn't have isOdd\");const root=Fp.sqrt(elm);return Fp.isOdd(root)?root:Fp.neg(root)}export function FpSqrtEven(Fp,elm){if(!Fp.isOdd)throw new Error(\"Field doesn't have isOdd\");const root=Fp.sqrt(elm);return Fp.isOdd(root)?Fp.neg(root):root}export function hashToPrivateScalar(hash,groupOrder,isLE=!1){const hashLen=(hash=ensureBytes(\"privateHash\",hash)).length,minLen=nLength(groupOrder).nByteLength+8;if(minLen<24||hashLen<minLen||hashLen>1024)throw new Error(\"hashToPrivateScalar: expected \"+minLen+\"-1024 bytes of input, got \"+hashLen);return mod(isLE?bytesToNumberLE(hash):bytesToNumberBE(hash),groupOrder-_1n)+_1n}export function getFieldBytesLength(fieldOrder){if(\"bigint\"!=typeof fieldOrder)throw new Error(\"field order must be bigint\");const bitLength=fieldOrder.toString(2).length;return Math.ceil(bitLength/8)}export function getMinHashLength(fieldOrder){const length=getFieldBytesLength(fieldOrder);return length+Math.ceil(length/2)}export function mapHashToField(key,fieldOrder,isLE=!1){const len=key.length,fieldLen=getFieldBytesLength(fieldOrder),minLen=getMinHashLength(fieldOrder);if(len<16||len<minLen||len>1024)throw new Error(\"expected \"+minLen+\"-1024 bytes of input, got \"+len);const reduced=mod(isLE?bytesToNumberLE(key):bytesToNumberBE(key),fieldOrder-_1n)+_1n;return isLE?numberToBytesLE(reduced,fieldLen):numberToBytesBE(reduced,fieldLen)}","import{nLength,validateField}from\"./modular.js\";import{bitLen,bitMask,validateObject}from\"./utils.js\";const _0n=BigInt(0),_1n=BigInt(1);function constTimeNegate(condition,item){const neg=item.negate();return condition?neg:item}function validateW(W,bits){if(!Number.isSafeInteger(W)||W<=0||W>bits)throw new Error(\"invalid window size, expected [1..\"+bits+\"], got W=\"+W)}function calcWOpts(W,scalarBits){validateW(W,scalarBits);const maxNumber=2**W;return{windows:Math.ceil(scalarBits/W)+1,windowSize:2**(W-1),mask:bitMask(W),maxNumber:maxNumber,shiftBy:BigInt(W)}}function calcOffsets(n,window,wOpts){const{windowSize:windowSize,mask:mask,maxNumber:maxNumber,shiftBy:shiftBy}=wOpts;let wbits=Number(n&mask),nextN=n>>shiftBy;wbits>windowSize&&(wbits-=maxNumber,nextN+=_1n);const offsetStart=window*windowSize;return{nextN:nextN,offset:offsetStart+Math.abs(wbits)-1,isZero:0===wbits,isNeg:wbits<0,isNegF:window%2!=0,offsetF:offsetStart}}function validateMSMPoints(points,c){if(!Array.isArray(points))throw new Error(\"array expected\");points.forEach((p,i)=>{if(!(p instanceof c))throw new Error(\"invalid point at index \"+i)})}function validateMSMScalars(scalars,field){if(!Array.isArray(scalars))throw new Error(\"array of scalars expected\");scalars.forEach((s,i)=>{if(!field.isValid(s))throw new Error(\"invalid scalar at index \"+i)})}const pointPrecomputes=new WeakMap,pointWindowSizes=new WeakMap;function getW(P){return pointWindowSizes.get(P)||1}export function wNAF(c,bits){return{constTimeNegate:constTimeNegate,hasPrecomputes:elm=>1!==getW(elm),unsafeLadder(elm,n,p=c.ZERO){let d=elm;for(;n>_0n;)n&_1n&&(p=p.add(d)),d=d.double(),n>>=_1n;return p},precomputeWindow(elm,W){const{windows:windows,windowSize:windowSize}=calcWOpts(W,bits),points=[];let p=elm,base=p;for(let window=0;window<windows;window++){base=p,points.push(base);for(let i=1;i<windowSize;i++)base=base.add(p),points.push(base);p=base.double()}return points},wNAF(W,precomputes,n){let p=c.ZERO,f=c.BASE;const wo=calcWOpts(W,bits);for(let window=0;window<wo.windows;window++){const{nextN:nextN,offset:offset,isZero:isZero,isNeg:isNeg,isNegF:isNegF,offsetF:offsetF}=calcOffsets(n,window,wo);n=nextN,isZero?f=f.add(constTimeNegate(isNegF,precomputes[offsetF])):p=p.add(constTimeNegate(isNeg,precomputes[offset]))}return{p:p,f:f}},wNAFUnsafe(W,precomputes,n,acc=c.ZERO){const wo=calcWOpts(W,bits);for(let window=0;window<wo.windows&&n!==_0n;window++){const{nextN:nextN,offset:offset,isZero:isZero,isNeg:isNeg}=calcOffsets(n,window,wo);if(n=nextN,!isZero){const item=precomputes[offset];acc=acc.add(isNeg?item.negate():item)}}return acc},getPrecomputes(W,P,transform){let comp=pointPrecomputes.get(P);return comp||(comp=this.precomputeWindow(P,W),1!==W&&pointPrecomputes.set(P,transform(comp))),comp},wNAFCached(P,n,transform){const W=getW(P);return this.wNAF(W,this.getPrecomputes(W,P,transform),n)},wNAFCachedUnsafe(P,n,transform,prev){const W=getW(P);return 1===W?this.unsafeLadder(P,n,prev):this.wNAFUnsafe(W,this.getPrecomputes(W,P,transform),n,prev)},setWindowSize(P,W){validateW(W,bits),pointWindowSizes.set(P,W),pointPrecomputes.delete(P)}}}export function pippenger(c,fieldN,points,scalars){validateMSMPoints(points,c),validateMSMScalars(scalars,fieldN);const plength=points.length,slength=scalars.length;if(plength!==slength)throw new Error(\"arrays of points and scalars must have equal length\");const zero=c.ZERO,wbits=bitLen(BigInt(plength));let windowSize=1;wbits>12?windowSize=wbits-3:wbits>4?windowSize=wbits-2:wbits>0&&(windowSize=2);const MASK=bitMask(windowSize),buckets=new Array(Number(MASK)+1).fill(zero);let sum=zero;for(let i=Math.floor((fieldN.BITS-1)/windowSize)*windowSize;i>=0;i-=windowSize){buckets.fill(zero);for(let j=0;j<slength;j++){const scalar=scalars[j],wbits=Number(scalar>>BigInt(i)&MASK);buckets[wbits]=buckets[wbits].add(points[j])}let resI=zero;for(let j=buckets.length-1,sumI=zero;j>0;j--)sumI=sumI.add(buckets[j]),resI=resI.add(sumI);if(sum=sum.add(resI),0!==i)for(let j=0;j<windowSize;j++)sum=sum.double()}return sum}export function precomputeMSMUnsafe(c,fieldN,points,windowSize){validateW(windowSize,fieldN.BITS),validateMSMPoints(points,c);const zero=c.ZERO,tableSize=2**windowSize-1,chunks=Math.ceil(fieldN.BITS/windowSize),MASK=bitMask(windowSize),tables=points.map(p=>{const res=[];for(let i=0,acc=p;i<tableSize;i++)res.push(acc),acc=acc.add(p);return res});return scalars=>{if(validateMSMScalars(scalars,fieldN),scalars.length>points.length)throw new Error(\"array of scalars must be smaller than array of points\");let res=zero;for(let i=0;i<chunks;i++){if(res!==zero)for(let j=0;j<windowSize;j++)res=res.double();const shiftBy=BigInt(chunks*windowSize-(i+1)*windowSize);for(let j=0;j<scalars.length;j++){const n=scalars[j],curr=Number(n>>shiftBy&MASK);curr&&(res=res.add(tables[j][curr-1]))}}return res}}export function validateBasic(curve){return validateField(curve.Fp),validateObject(curve,{n:\"bigint\",h:\"bigint\",Gx:\"field\",Gy:\"field\"},{nBitLength:\"isSafeInteger\",nByteLength:\"isSafeInteger\"}),Object.freeze({...nLength(curve.n,curve.nBitLength),...curve,p:curve.Fp.ORDER})}","import{pippenger,validateBasic,wNAF}from\"./curve.js\";import{Field,FpInvertBatch,getMinHashLength,invert,mapHashToField,mod,validateField}from\"./modular.js\";import{aInRange,abool,bitMask,bytesToHex,bytesToNumberBE,concatBytes,createHmacDrbg,ensureBytes,hexToBytes,inRange,isBytes,memoized,numberToBytesBE,numberToHexUnpadded,validateObject}from\"./utils.js\";function validateSigVerOpts(opts){void 0!==opts.lowS&&abool(\"lowS\",opts.lowS),void 0!==opts.prehash&&abool(\"prehash\",opts.prehash)}function validatePointOpts(curve){const opts=validateBasic(curve);validateObject(opts,{a:\"field\",b:\"field\"},{allowInfinityPoint:\"boolean\",allowedPrivateKeyLengths:\"array\",clearCofactor:\"function\",fromBytes:\"function\",isTorsionFree:\"function\",toBytes:\"function\",wrapPrivateKey:\"boolean\"});const{endo:endo,Fp:Fp,a:a}=opts;if(endo){if(!Fp.eql(a,Fp.ZERO))throw new Error(\"invalid endo: CURVE.a must be 0\");if(\"object\"!=typeof endo||\"bigint\"!=typeof endo.beta||\"function\"!=typeof endo.splitScalar)throw new Error('invalid endo: expected \"beta\": bigint and \"splitScalar\": function')}return Object.freeze({...opts})}export class DERErr extends Error{constructor(m=\"\"){super(m)}}export const DER={Err:DERErr,_tlv:{encode:(tag,data)=>{const{Err:E}=DER;if(tag<0||tag>256)throw new E(\"tlv.encode: wrong tag\");if(1&data.length)throw new E(\"tlv.encode: unpadded data\");const dataLen=data.length/2,len=numberToHexUnpadded(dataLen);if(len.length/2&128)throw new E(\"tlv.encode: long form length too big\");const lenLen=dataLen>127?numberToHexUnpadded(len.length/2|128):\"\";return numberToHexUnpadded(tag)+lenLen+len+data},decode(tag,data){const{Err:E}=DER;let pos=0;if(tag<0||tag>256)throw new E(\"tlv.encode: wrong tag\");if(data.length<2||data[pos++]!==tag)throw new E(\"tlv.decode: wrong tlv\");const first=data[pos++];let length=0;if(!!(128&first)){const lenLen=127&first;if(!lenLen)throw new E(\"tlv.decode(long): indefinite length not supported\");if(lenLen>4)throw new E(\"tlv.decode(long): byte length is too big\");const lengthBytes=data.subarray(pos,pos+lenLen);if(lengthBytes.length!==lenLen)throw new E(\"tlv.decode: length bytes not complete\");if(0===lengthBytes[0])throw new E(\"tlv.decode(long): zero leftmost byte\");for(const b of lengthBytes)length=length<<8|b;if(pos+=lenLen,length<128)throw new E(\"tlv.decode(long): not minimal encoding\")}else length=first;const v=data.subarray(pos,pos+length);if(v.length!==length)throw new E(\"tlv.decode: wrong value length\");return{v:v,l:data.subarray(pos+length)}}},_int:{encode(num){const{Err:E}=DER;if(num<_0n)throw new E(\"integer: negative integers are not allowed\");let hex=numberToHexUnpadded(num);if(8&Number.parseInt(hex[0],16)&&(hex=\"00\"+hex),1&hex.length)throw new E(\"unexpected DER parsing assertion: unpadded hex\");return hex},decode(data){const{Err:E}=DER;if(128&data[0])throw new E(\"invalid signature integer: negative\");if(0===data[0]&&!(128&data[1]))throw new E(\"invalid signature integer: unnecessary leading zero\");return bytesToNumberBE(data)}},toSig(hex){const{Err:E,_int:int,_tlv:tlv}=DER,data=ensureBytes(\"signature\",hex),{v:seqBytes,l:seqLeftBytes}=tlv.decode(48,data);if(seqLeftBytes.length)throw new E(\"invalid signature: left bytes after parsing\");const{v:rBytes,l:rLeftBytes}=tlv.decode(2,seqBytes),{v:sBytes,l:sLeftBytes}=tlv.decode(2,rLeftBytes);if(sLeftBytes.length)throw new E(\"invalid signature: left bytes after parsing\");return{r:int.decode(rBytes),s:int.decode(sBytes)}},hexFromSig(sig){const{_tlv:tlv,_int:int}=DER,seq=tlv.encode(2,int.encode(sig.r))+tlv.encode(2,int.encode(sig.s));return tlv.encode(48,seq)}};function numToSizedHex(num,size){return bytesToHex(numberToBytesBE(num,size))}const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_3n=BigInt(3),_4n=BigInt(4);export function weierstrassPoints(opts){const CURVE=validatePointOpts(opts),{Fp:Fp}=CURVE,Fn=Field(CURVE.n,CURVE.nBitLength),toBytes=CURVE.toBytes||((_c,point,_isCompressed)=>{const a=point.toAffine();return concatBytes(Uint8Array.from([4]),Fp.toBytes(a.x),Fp.toBytes(a.y))}),fromBytes=CURVE.fromBytes||(bytes=>{const tail=bytes.subarray(1);return{x:Fp.fromBytes(tail.subarray(0,Fp.BYTES)),y:Fp.fromBytes(tail.subarray(Fp.BYTES,2*Fp.BYTES))}});function weierstrassEquation(x){const{a:a,b:b}=CURVE,x2=Fp.sqr(x),x3=Fp.mul(x2,x);return Fp.add(Fp.add(x3,Fp.mul(x,a)),b)}function isValidXY(x,y){const left=Fp.sqr(y),right=weierstrassEquation(x);return Fp.eql(left,right)}if(!isValidXY(CURVE.Gx,CURVE.Gy))throw new Error(\"bad curve params: generator point\");const _4a3=Fp.mul(Fp.pow(CURVE.a,_3n),_4n),_27b2=Fp.mul(Fp.sqr(CURVE.b),BigInt(27));if(Fp.is0(Fp.add(_4a3,_27b2)))throw new Error(\"bad curve params: a or b\");function normPrivateKeyToScalar(key){const{allowedPrivateKeyLengths:lengths,nByteLength:nByteLength,wrapPrivateKey:wrapPrivateKey,n:N}=CURVE;if(lengths&&\"bigint\"!=typeof key){if(isBytes(key)&&(key=bytesToHex(key)),\"string\"!=typeof key||!lengths.includes(key.length))throw new Error(\"invalid private key\");key=key.padStart(2*nByteLength,\"0\")}let num;try{num=\"bigint\"==typeof key?key:bytesToNumberBE(ensureBytes(\"private key\",key,nByteLength))}catch(error){throw new Error(\"invalid private key, expected hex or \"+nByteLength+\" bytes, got \"+typeof key)}return wrapPrivateKey&&(num=mod(num,N)),aInRange(\"private key\",num,_1n,N),num}function aprjpoint(other){if(!(other instanceof Point))throw new Error(\"ProjectivePoint expected\")}const toAffineMemo=memoized((p,iz)=>{const{px:x,py:y,pz:z}=p;if(Fp.eql(z,Fp.ONE))return{x:x,y:y};const is0=p.is0();null==iz&&(iz=is0?Fp.ONE:Fp.inv(z));const ax=Fp.mul(x,iz),ay=Fp.mul(y,iz),zz=Fp.mul(z,iz);if(is0)return{x:Fp.ZERO,y:Fp.ZERO};if(!Fp.eql(zz,Fp.ONE))throw new Error(\"invZ was invalid\");return{x:ax,y:ay}}),assertValidMemo=memoized(p=>{if(p.is0()){if(CURVE.allowInfinityPoint&&!Fp.is0(p.py))return;throw new Error(\"bad point: ZERO\")}const{x:x,y:y}=p.toAffine();if(!Fp.isValid(x)||!Fp.isValid(y))throw new Error(\"bad point: x or y not FE\");if(!isValidXY(x,y))throw new Error(\"bad point: equation left != right\");if(!p.isTorsionFree())throw new Error(\"bad point: not in prime-order subgroup\");return!0});class Point{constructor(px,py,pz){if(null==px||!Fp.isValid(px))throw new Error(\"x required\");if(null==py||!Fp.isValid(py)||Fp.is0(py))throw new Error(\"y required\");if(null==pz||!Fp.isValid(pz))throw new Error(\"z required\");this.px=px,this.py=py,this.pz=pz,Object.freeze(this)}static fromAffine(p){const{x:x,y:y}=p||{};if(!p||!Fp.isValid(x)||!Fp.isValid(y))throw new Error(\"invalid affine point\");if(p instanceof Point)throw new Error(\"projective point not allowed\");const is0=i=>Fp.eql(i,Fp.ZERO);return is0(x)&&is0(y)?Point.ZERO:new Point(x,y,Fp.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(points){const toInv=FpInvertBatch(Fp,points.map(p=>p.pz));return points.map((p,i)=>p.toAffine(toInv[i])).map(Point.fromAffine)}static fromHex(hex){const P=Point.fromAffine(fromBytes(ensureBytes(\"pointHex\",hex)));return P.assertValidity(),P}static fromPrivateKey(privateKey){return Point.BASE.multiply(normPrivateKeyToScalar(privateKey))}static msm(points,scalars){return pippenger(Point,Fn,points,scalars)}_setWindowSize(windowSize){wnaf.setWindowSize(this,windowSize)}assertValidity(){assertValidMemo(this)}hasEvenY(){const{y:y}=this.toAffine();if(Fp.isOdd)return!Fp.isOdd(y);throw new Error(\"Field doesn't support isOdd\")}equals(other){aprjpoint(other);const{px:X1,py:Y1,pz:Z1}=this,{px:X2,py:Y2,pz:Z2}=other,U1=Fp.eql(Fp.mul(X1,Z2),Fp.mul(X2,Z1)),U2=Fp.eql(Fp.mul(Y1,Z2),Fp.mul(Y2,Z1));return U1&&U2}negate(){return new Point(this.px,Fp.neg(this.py),this.pz)}double(){const{a:a,b:b}=CURVE,b3=Fp.mul(b,_3n),{px:X1,py:Y1,pz:Z1}=this;let X3=Fp.ZERO,Y3=Fp.ZERO,Z3=Fp.ZERO,t0=Fp.mul(X1,X1),t1=Fp.mul(Y1,Y1),t2=Fp.mul(Z1,Z1),t3=Fp.mul(X1,Y1);return t3=Fp.add(t3,t3),Z3=Fp.mul(X1,Z1),Z3=Fp.add(Z3,Z3),X3=Fp.mul(a,Z3),Y3=Fp.mul(b3,t2),Y3=Fp.add(X3,Y3),X3=Fp.sub(t1,Y3),Y3=Fp.add(t1,Y3),Y3=Fp.mul(X3,Y3),X3=Fp.mul(t3,X3),Z3=Fp.mul(b3,Z3),t2=Fp.mul(a,t2),t3=Fp.sub(t0,t2),t3=Fp.mul(a,t3),t3=Fp.add(t3,Z3),Z3=Fp.add(t0,t0),t0=Fp.add(Z3,t0),t0=Fp.add(t0,t2),t0=Fp.mul(t0,t3),Y3=Fp.add(Y3,t0),t2=Fp.mul(Y1,Z1),t2=Fp.add(t2,t2),t0=Fp.mul(t2,t3),X3=Fp.sub(X3,t0),Z3=Fp.mul(t2,t1),Z3=Fp.add(Z3,Z3),Z3=Fp.add(Z3,Z3),new Point(X3,Y3,Z3)}add(other){aprjpoint(other);const{px:X1,py:Y1,pz:Z1}=this,{px:X2,py:Y2,pz:Z2}=other;let X3=Fp.ZERO,Y3=Fp.ZERO,Z3=Fp.ZERO;const a=CURVE.a,b3=Fp.mul(CURVE.b,_3n);let t0=Fp.mul(X1,X2),t1=Fp.mul(Y1,Y2),t2=Fp.mul(Z1,Z2),t3=Fp.add(X1,Y1),t4=Fp.add(X2,Y2);t3=Fp.mul(t3,t4),t4=Fp.add(t0,t1),t3=Fp.sub(t3,t4),t4=Fp.add(X1,Z1);let t5=Fp.add(X2,Z2);return t4=Fp.mul(t4,t5),t5=Fp.add(t0,t2),t4=Fp.sub(t4,t5),t5=Fp.add(Y1,Z1),X3=Fp.add(Y2,Z2),t5=Fp.mul(t5,X3),X3=Fp.add(t1,t2),t5=Fp.sub(t5,X3),Z3=Fp.mul(a,t4),X3=Fp.mul(b3,t2),Z3=Fp.add(X3,Z3),X3=Fp.sub(t1,Z3),Z3=Fp.add(t1,Z3),Y3=Fp.mul(X3,Z3),t1=Fp.add(t0,t0),t1=Fp.add(t1,t0),t2=Fp.mul(a,t2),t4=Fp.mul(b3,t4),t1=Fp.add(t1,t2),t2=Fp.sub(t0,t2),t2=Fp.mul(a,t2),t4=Fp.add(t4,t2),t0=Fp.mul(t1,t4),Y3=Fp.add(Y3,t0),t0=Fp.mul(t5,t4),X3=Fp.mul(t3,X3),X3=Fp.sub(X3,t0),t0=Fp.mul(t3,t1),Z3=Fp.mul(t5,Z3),Z3=Fp.add(Z3,t0),new Point(X3,Y3,Z3)}subtract(other){return this.add(other.negate())}is0(){return this.equals(Point.ZERO)}wNAF(n){return wnaf.wNAFCached(this,n,Point.normalizeZ)}multiplyUnsafe(sc){const{endo:endo,n:N}=CURVE;aInRange(\"scalar\",sc,_0n,N);const I=Point.ZERO;if(sc===_0n)return I;if(this.is0()||sc===_1n)return this;if(!endo||wnaf.hasPrecomputes(this))return wnaf.wNAFCachedUnsafe(this,sc,Point.normalizeZ);let{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}=endo.splitScalar(sc),k1p=I,k2p=I,d=this;for(;k1>_0n||k2>_0n;)k1&_1n&&(k1p=k1p.add(d)),k2&_1n&&(k2p=k2p.add(d)),d=d.double(),k1>>=_1n,k2>>=_1n;return k1neg&&(k1p=k1p.negate()),k2neg&&(k2p=k2p.negate()),k2p=new Point(Fp.mul(k2p.px,endo.beta),k2p.py,k2p.pz),k1p.add(k2p)}multiply(scalar){const{endo:endo,n:N}=CURVE;let point,fake;if(aInRange(\"scalar\",scalar,_1n,N),endo){const{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}=endo.splitScalar(scalar);let{p:k1p,f:f1p}=this.wNAF(k1),{p:k2p,f:f2p}=this.wNAF(k2);k1p=wnaf.constTimeNegate(k1neg,k1p),k2p=wnaf.constTimeNegate(k2neg,k2p),k2p=new Point(Fp.mul(k2p.px,endo.beta),k2p.py,k2p.pz),point=k1p.add(k2p),fake=f1p.add(f2p)}else{const{p:p,f:f}=this.wNAF(scalar);point=p,fake=f}return Point.normalizeZ([point,fake])[0]}multiplyAndAddUnsafe(Q,a,b){const G=Point.BASE,mul=(P,a)=>a!==_0n&&a!==_1n&&P.equals(G)?P.multiply(a):P.multiplyUnsafe(a),sum=mul(this,a).add(mul(Q,b));return sum.is0()?void 0:sum}toAffine(iz){return toAffineMemo(this,iz)}isTorsionFree(){const{h:cofactor,isTorsionFree:isTorsionFree}=CURVE;if(cofactor===_1n)return!0;if(isTorsionFree)return isTorsionFree(Point,this);throw new Error(\"isTorsionFree() has not been declared for the elliptic curve\")}clearCofactor(){const{h:cofactor,clearCofactor:clearCofactor}=CURVE;return cofactor===_1n?this:clearCofactor?clearCofactor(Point,this):this.multiplyUnsafe(CURVE.h)}toRawBytes(isCompressed=!0){return abool(\"isCompressed\",isCompressed),this.assertValidity(),toBytes(Point,this,isCompressed)}toHex(isCompressed=!0){return abool(\"isCompressed\",isCompressed),bytesToHex(this.toRawBytes(isCompressed))}}Point.BASE=new Point(CURVE.Gx,CURVE.Gy,Fp.ONE),Point.ZERO=new Point(Fp.ZERO,Fp.ONE,Fp.ZERO);const{endo:endo,nBitLength:nBitLength}=CURVE,wnaf=wNAF(Point,endo?Math.ceil(nBitLength/2):nBitLength);return{CURVE:CURVE,ProjectivePoint:Point,normPrivateKeyToScalar:normPrivateKeyToScalar,weierstrassEquation:weierstrassEquation,isWithinCurveOrder:function(num){return inRange(num,_1n,CURVE.n)}}}function validateOpts(curve){const opts=validateBasic(curve);return validateObject(opts,{hash:\"hash\",hmac:\"function\",randomBytes:\"function\"},{bits2int:\"function\",bits2int_modN:\"function\",lowS:\"boolean\"}),Object.freeze({lowS:!0,...opts})}export function weierstrass(curveDef){const CURVE=validateOpts(curveDef),{Fp:Fp,n:CURVE_ORDER,nByteLength:nByteLength,nBitLength:nBitLength}=CURVE,compressedLen=Fp.BYTES+1,uncompressedLen=2*Fp.BYTES+1;function modN(a){return mod(a,CURVE_ORDER)}function invN(a){return invert(a,CURVE_ORDER)}const{ProjectivePoint:Point,normPrivateKeyToScalar:normPrivateKeyToScalar,weierstrassEquation:weierstrassEquation,isWithinCurveOrder:isWithinCurveOrder}=weierstrassPoints({...CURVE,toBytes(_c,point,isCompressed){const a=point.toAffine(),x=Fp.toBytes(a.x),cat=concatBytes;return abool(\"isCompressed\",isCompressed),isCompressed?cat(Uint8Array.from([point.hasEvenY()?2:3]),x):cat(Uint8Array.from([4]),x,Fp.toBytes(a.y))},fromBytes(bytes){const len=bytes.length,head=bytes[0],tail=bytes.subarray(1);if(len!==compressedLen||2!==head&&3!==head){if(len===uncompressedLen&&4===head){return{x:Fp.fromBytes(tail.subarray(0,Fp.BYTES)),y:Fp.fromBytes(tail.subarray(Fp.BYTES,2*Fp.BYTES))}}throw new Error(\"invalid Point, expected length of \"+compressedLen+\", or uncompressed \"+uncompressedLen+\", got \"+len)}{const x=bytesToNumberBE(tail);if(!inRange(x,_1n,Fp.ORDER))throw new Error(\"Point is not on curve\");const y2=weierstrassEquation(x);let y;try{y=Fp.sqrt(y2)}catch(sqrtError){const suffix=sqrtError instanceof Error?\": \"+sqrtError.message:\"\";throw new Error(\"Point is not on curve\"+suffix)}return!(1&~head)!==((y&_1n)===_1n)&&(y=Fp.neg(y)),{x:x,y:y}}}});function isBiggerThanHalfOrder(number){return number>CURVE_ORDER>>_1n}const slcNum=(b,from,to)=>bytesToNumberBE(b.slice(from,to));class Signature{constructor(r,s,recovery){aInRange(\"r\",r,_1n,CURVE_ORDER),aInRange(\"s\",s,_1n,CURVE_ORDER),this.r=r,this.s=s,null!=recovery&&(this.recovery=recovery),Object.freeze(this)}static fromCompact(hex){const l=nByteLength;return hex=ensureBytes(\"compactSignature\",hex,2*l),new Signature(slcNum(hex,0,l),slcNum(hex,l,2*l))}static fromDER(hex){const{r:r,s:s}=DER.toSig(ensureBytes(\"DER\",hex));return new Signature(r,s)}assertValidity(){}addRecoveryBit(recovery){return new Signature(this.r,this.s,recovery)}recoverPublicKey(msgHash){const{r:r,s:s,recovery:rec}=this,h=bits2int_modN(ensureBytes(\"msgHash\",msgHash));if(null==rec||![0,1,2,3].includes(rec))throw new Error(\"recovery id invalid\");const radj=2===rec||3===rec?r+CURVE.n:r;if(radj>=Fp.ORDER)throw new Error(\"recovery id 2 or 3 invalid\");const prefix=1&rec?\"03\":\"02\",R=Point.fromHex(prefix+numToSizedHex(radj,Fp.BYTES)),ir=invN(radj),u1=modN(-h*ir),u2=modN(s*ir),Q=Point.BASE.multiplyAndAddUnsafe(R,u1,u2);if(!Q)throw new Error(\"point at infinify\");return Q.assertValidity(),Q}hasHighS(){return isBiggerThanHalfOrder(this.s)}normalizeS(){return this.hasHighS()?new Signature(this.r,modN(-this.s),this.recovery):this}toDERRawBytes(){return hexToBytes(this.toDERHex())}toDERHex(){return DER.hexFromSig(this)}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){const l=nByteLength;return numToSizedHex(this.r,l)+numToSizedHex(this.s,l)}}const utils={isValidPrivateKey(privateKey){try{return normPrivateKeyToScalar(privateKey),!0}catch(error){return!1}},normPrivateKeyToScalar:normPrivateKeyToScalar,randomPrivateKey:()=>{const length=getMinHashLength(CURVE.n);return mapHashToField(CURVE.randomBytes(length),CURVE.n)},precompute:(windowSize=8,point=Point.BASE)=>(point._setWindowSize(windowSize),point.multiply(BigInt(3)),point)};function isProbPub(item){if(\"bigint\"==typeof item)return!1;if(item instanceof Point)return!0;const len=ensureBytes(\"key\",item).length,fpl=Fp.BYTES,compLen=fpl+1,uncompLen=2*fpl+1;return CURVE.allowedPrivateKeyLengths||nByteLength===compLen?void 0:len===compLen||len===uncompLen}const bits2int=CURVE.bits2int||function(bytes){if(bytes.length>8192)throw new Error(\"input is too large\");const num=bytesToNumberBE(bytes),delta=8*bytes.length-nBitLength;return delta>0?num>>BigInt(delta):num},bits2int_modN=CURVE.bits2int_modN||function(bytes){return modN(bits2int(bytes))},ORDER_MASK=bitMask(nBitLength);function int2octets(num){return aInRange(\"num < 2^\"+nBitLength,num,_0n,ORDER_MASK),numberToBytesBE(num,nByteLength)}function prepSig(msgHash,privateKey,opts=defaultSigOpts){if([\"recovered\",\"canonical\"].some(k=>k in opts))throw new Error(\"sign() legacy options not supported\");const{hash:hash,randomBytes:randomBytes}=CURVE;let{lowS:lowS,prehash:prehash,extraEntropy:ent}=opts;null==lowS&&(lowS=!0),msgHash=ensureBytes(\"msgHash\",msgHash),validateSigVerOpts(opts),prehash&&(msgHash=ensureBytes(\"prehashed msgHash\",hash(msgHash)));const h1int=bits2int_modN(msgHash),d=normPrivateKeyToScalar(privateKey),seedArgs=[int2octets(d),int2octets(h1int)];if(null!=ent&&!1!==ent){const e=!0===ent?randomBytes(Fp.BYTES):ent;seedArgs.push(ensureBytes(\"extraEntropy\",e))}const seed=concatBytes(...seedArgs),m=h1int;return{seed:seed,k2sig:function(kBytes){const k=bits2int(kBytes);if(!isWithinCurveOrder(k))return;const ik=invN(k),q=Point.BASE.multiply(k).toAffine(),r=modN(q.x);if(r===_0n)return;const s=modN(ik*modN(m+r*d));if(s===_0n)return;let recovery=(q.x===r?0:2)|Number(q.y&_1n),normS=s;return lowS&&isBiggerThanHalfOrder(s)&&(normS=function(s){return isBiggerThanHalfOrder(s)?modN(-s):s}(s),recovery^=1),new Signature(r,normS,recovery)}}}const defaultSigOpts={lowS:CURVE.lowS,prehash:!1},defaultVerOpts={lowS:CURVE.lowS,prehash:!1};return Point.BASE._setWindowSize(8),{CURVE:CURVE,getPublicKey:function(privateKey,isCompressed=!0){return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed)},getSharedSecret:function(privateA,publicB,isCompressed=!0){if(!0===isProbPub(privateA))throw new Error(\"first arg must be private key\");if(!1===isProbPub(publicB))throw new Error(\"second arg must be public key\");return Point.fromHex(publicB).multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed)},sign:function(msgHash,privKey,opts=defaultSigOpts){const{seed:seed,k2sig:k2sig}=prepSig(msgHash,privKey,opts),C=CURVE;return createHmacDrbg(C.hash.outputLen,C.nByteLength,C.hmac)(seed,k2sig)},verify:function(signature,msgHash,publicKey,opts=defaultVerOpts){const sg=signature;msgHash=ensureBytes(\"msgHash\",msgHash),publicKey=ensureBytes(\"publicKey\",publicKey);const{lowS:lowS,prehash:prehash,format:format}=opts;if(validateSigVerOpts(opts),\"strict\"in opts)throw new Error(\"options.strict was renamed to lowS\");if(void 0!==format&&\"compact\"!==format&&\"der\"!==format)throw new Error(\"format must be compact or der\");const isHex=\"string\"==typeof sg||isBytes(sg),isObj=!isHex&&!format&&\"object\"==typeof sg&&null!==sg&&\"bigint\"==typeof sg.r&&\"bigint\"==typeof sg.s;if(!isHex&&!isObj)throw new Error(\"invalid signature, expected Uint8Array, hex string or Signature instance\");let _sig,P;try{if(isObj&&(_sig=new Signature(sg.r,sg.s)),isHex){try{\"compact\"!==format&&(_sig=Signature.fromDER(sg))}catch(derError){if(!(derError instanceof DER.Err))throw derError}_sig||\"der\"===format||(_sig=Signature.fromCompact(sg))}P=Point.fromHex(publicKey)}catch(error){return!1}if(!_sig)return!1;if(lowS&&_sig.hasHighS())return!1;prehash&&(msgHash=CURVE.hash(msgHash));const{r:r,s:s}=_sig,h=bits2int_modN(msgHash),is=invN(s),u1=modN(h*is),u2=modN(r*is),R=Point.BASE.multiplyAndAddUnsafe(P,u1,u2)?.toAffine();return!!R&&modN(R.x)===r},ProjectivePoint:Point,Signature:Signature,utils:utils}}export function SWUFpSqrtRatio(Fp,Z){const q=Fp.ORDER;let l=_0n;for(let o=q-_1n;o%_2n===_0n;o/=_2n)l+=_1n;const c1=l,_2n_pow_c1_1=_2n<<c1-_1n-_1n,_2n_pow_c1=_2n_pow_c1_1*_2n,c2=(q-_1n)/_2n_pow_c1,c3=(c2-_1n)/_2n,c4=_2n_pow_c1-_1n,c5=_2n_pow_c1_1,c6=Fp.pow(Z,c2),c7=Fp.pow(Z,(c2+_1n)/_2n);let sqrtRatio=(u,v)=>{let tv1=c6,tv2=Fp.pow(v,c4),tv3=Fp.sqr(tv2);tv3=Fp.mul(tv3,v);let tv5=Fp.mul(u,tv3);tv5=Fp.pow(tv5,c3),tv5=Fp.mul(tv5,tv2),tv2=Fp.mul(tv5,v),tv3=Fp.mul(tv5,u);let tv4=Fp.mul(tv3,tv2);tv5=Fp.pow(tv4,c5);let isQR=Fp.eql(tv5,Fp.ONE);tv2=Fp.mul(tv3,c7),tv5=Fp.mul(tv4,tv1),tv3=Fp.cmov(tv2,tv3,isQR),tv4=Fp.cmov(tv5,tv4,isQR);for(let i=c1;i>_1n;i--){let tv5=i-_2n;tv5=_2n<<tv5-_1n;let tvv5=Fp.pow(tv4,tv5);const e1=Fp.eql(tvv5,Fp.ONE);tv2=Fp.mul(tv3,tv1),tv1=Fp.mul(tv1,tv1),tvv5=Fp.mul(tv4,tv1),tv3=Fp.cmov(tv2,tv3,e1),tv4=Fp.cmov(tvv5,tv4,e1)}return{isValid:isQR,value:tv3}};if(Fp.ORDER%_4n===_3n){const c1=(Fp.ORDER-_3n)/_4n,c2=Fp.sqrt(Fp.neg(Z));sqrtRatio=(u,v)=>{let tv1=Fp.sqr(v);const tv2=Fp.mul(u,v);tv1=Fp.mul(tv1,tv2);let y1=Fp.pow(tv1,c1);y1=Fp.mul(y1,tv2);const y2=Fp.mul(y1,c2),tv3=Fp.mul(Fp.sqr(y1),v),isQR=Fp.eql(tv3,u);return{isValid:isQR,value:Fp.cmov(y2,y1,isQR)}}}return sqrtRatio}export function mapToCurveSimpleSWU(Fp,opts){if(validateField(Fp),!Fp.isValid(opts.A)||!Fp.isValid(opts.B)||!Fp.isValid(opts.Z))throw new Error(\"mapToCurveSimpleSWU: invalid opts\");const sqrtRatio=SWUFpSqrtRatio(Fp,opts.Z);if(!Fp.isOdd)throw new Error(\"Fp.isOdd is not implemented!\");return u=>{let tv1,tv2,tv3,tv4,tv5,tv6,x,y;tv1=Fp.sqr(u),tv1=Fp.mul(tv1,opts.Z),tv2=Fp.sqr(tv1),tv2=Fp.add(tv2,tv1),tv3=Fp.add(tv2,Fp.ONE),tv3=Fp.mul(tv3,opts.B),tv4=Fp.cmov(opts.Z,Fp.neg(tv2),!Fp.eql(tv2,Fp.ZERO)),tv4=Fp.mul(tv4,opts.A),tv2=Fp.sqr(tv3),tv6=Fp.sqr(tv4),tv5=Fp.mul(tv6,opts.A),tv2=Fp.add(tv2,tv5),tv2=Fp.mul(tv2,tv3),tv6=Fp.mul(tv6,tv4),tv5=Fp.mul(tv6,opts.B),tv2=Fp.add(tv2,tv5),x=Fp.mul(tv1,tv3);const{isValid:isValid,value:value}=sqrtRatio(tv2,tv6);y=Fp.mul(tv1,u),y=Fp.mul(y,value),x=Fp.cmov(x,tv3,isValid),y=Fp.cmov(y,value,isValid);const e1=Fp.isOdd(u)===Fp.isOdd(y);y=Fp.cmov(Fp.neg(y),y,e1);const tv4_inv=FpInvertBatch(Fp,[tv4],!0)[0];return x=Fp.mul(x,tv4_inv),{x:x,y:y}}}","import{hmac}from\"@noble/hashes/hmac\";import{concatBytes,randomBytes}from\"@noble/hashes/utils\";import{weierstrass}from\"./abstract/weierstrass.js\";export function getHash(hash){return{hash:hash,hmac:(key,...msgs)=>hmac(hash,key,concatBytes(...msgs)),randomBytes:randomBytes}}export function createCurve(curveDef,defHash){const create=hash=>weierstrass({...curveDef,...getHash(hash)});return{...create(defHash),create:create}}","import{FpInvertBatch,mod}from\"./modular.js\";import{abytes,bytesToNumberBE,concatBytes,utf8ToBytes,validateObject}from\"./utils.js\";const os2ip=bytesToNumberBE;function i2osp(value,length){if(anum(value),anum(length),value<0||value>=1<<8*length)throw new Error(\"invalid I2OSP input: \"+value);const res=Array.from({length:length}).fill(0);for(let i=length-1;i>=0;i--)res[i]=255&value,value>>>=8;return new Uint8Array(res)}function strxor(a,b){const arr=new Uint8Array(a.length);for(let i=0;i<a.length;i++)arr[i]=a[i]^b[i];return arr}function anum(item){if(!Number.isSafeInteger(item))throw new Error(\"number expected\")}export function expand_message_xmd(msg,DST,lenInBytes,H){abytes(msg),abytes(DST),anum(lenInBytes),DST.length>255&&(DST=H(concatBytes(utf8ToBytes(\"H2C-OVERSIZE-DST-\"),DST)));const{outputLen:b_in_bytes,blockLen:r_in_bytes}=H,ell=Math.ceil(lenInBytes/b_in_bytes);if(lenInBytes>65535||ell>255)throw new Error(\"expand_message_xmd: invalid lenInBytes\");const DST_prime=concatBytes(DST,i2osp(DST.length,1)),Z_pad=i2osp(0,r_in_bytes),l_i_b_str=i2osp(lenInBytes,2),b=new Array(ell),b_0=H(concatBytes(Z_pad,msg,l_i_b_str,i2osp(0,1),DST_prime));b[0]=H(concatBytes(b_0,i2osp(1,1),DST_prime));for(let i=1;i<=ell;i++){const args=[strxor(b_0,b[i-1]),i2osp(i+1,1),DST_prime];b[i]=H(concatBytes(...args))}return concatBytes(...b).slice(0,lenInBytes)}export function expand_message_xof(msg,DST,lenInBytes,k,H){if(abytes(msg),abytes(DST),anum(lenInBytes),DST.length>255){const dkLen=Math.ceil(2*k/8);DST=H.create({dkLen:dkLen}).update(utf8ToBytes(\"H2C-OVERSIZE-DST-\")).update(DST).digest()}if(lenInBytes>65535||DST.length>255)throw new Error(\"expand_message_xof: invalid lenInBytes\");return H.create({dkLen:lenInBytes}).update(msg).update(i2osp(lenInBytes,2)).update(DST).update(i2osp(DST.length,1)).digest()}export function hash_to_field(msg,count,options){validateObject(options,{DST:\"stringOrUint8Array\",p:\"bigint\",m:\"isSafeInteger\",k:\"isSafeInteger\",hash:\"hash\"});const{p:p,k:k,m:m,hash:hash,expand:expand,DST:_DST}=options;abytes(msg),anum(count);const DST=\"string\"==typeof _DST?utf8ToBytes(_DST):_DST,log2p=p.toString(2).length,L=Math.ceil((log2p+k)/8),len_in_bytes=count*m*L;let prb;if(\"xmd\"===expand)prb=expand_message_xmd(msg,DST,len_in_bytes,hash);else if(\"xof\"===expand)prb=expand_message_xof(msg,DST,len_in_bytes,k,hash);else{if(\"_internal_pass\"!==expand)throw new Error('expand must be \"xmd\" or \"xof\"');prb=msg}const u=new Array(count);for(let i=0;i<count;i++){const e=new Array(m);for(let j=0;j<m;j++){const elm_offset=L*(j+i*m),tv=prb.subarray(elm_offset,elm_offset+L);e[j]=mod(os2ip(tv),p)}u[i]=e}return u}export function isogenyMap(field,map){const coeff=map.map(i=>Array.from(i).reverse());return(x,y)=>{const[xn,xd,yn,yd]=coeff.map(val=>val.reduce((acc,i)=>field.add(field.mul(acc,x),i))),[xd_inv,yd_inv]=FpInvertBatch(field,[xd,yd],!0);return x=field.mul(xn,xd_inv),y=field.mul(y,field.mul(yn,yd_inv)),{x:x,y:y}}}export function createHasher(Point,mapToCurve,defaults){if(\"function\"!=typeof mapToCurve)throw new Error(\"mapToCurve() must be defined\");function map(num){return Point.fromAffine(mapToCurve(num))}function clear(initial){const P=initial.clearCofactor();return P.equals(Point.ZERO)?Point.ZERO:(P.assertValidity(),P)}return{defaults:defaults,hashToCurve(msg,options){const u=hash_to_field(msg,2,{...defaults,DST:defaults.DST,...options}),u0=map(u[0]),u1=map(u[1]);return clear(u0.add(u1))},encodeToCurve:(msg,options)=>clear(map(hash_to_field(msg,1,{...defaults,DST:defaults.encodeDST,...options})[0])),mapToCurve(scalars){if(!Array.isArray(scalars))throw new Error(\"expected array of bigints\");for(const i of scalars)if(\"bigint\"!=typeof i)throw new Error(\"expected array of bigints\");return clear(map(scalars))}}}","import{sha256}from\"@noble/hashes/sha2\";import{randomBytes}from\"@noble/hashes/utils\";import{createCurve}from\"./_shortw_utils.js\";import{createHasher,isogenyMap}from\"./abstract/hash-to-curve.js\";import{Field,mod,pow2}from\"./abstract/modular.js\";import{aInRange,bytesToNumberBE,concatBytes,ensureBytes,inRange,numberToBytesBE}from\"./abstract/utils.js\";import{mapToCurveSimpleSWU}from\"./abstract/weierstrass.js\";const secp256k1P=BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\"),secp256k1N=BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"),_0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),divNearest=(a,b)=>(a+b/_2n)/b;function sqrtMod(y){const P=secp256k1P,_3n=BigInt(3),_6n=BigInt(6),_11n=BigInt(11),_22n=BigInt(22),_23n=BigInt(23),_44n=BigInt(44),_88n=BigInt(88),b2=y*y*y%P,b3=b2*b2*y%P,b6=pow2(b3,_3n,P)*b3%P,b9=pow2(b6,_3n,P)*b3%P,b11=pow2(b9,_2n,P)*b2%P,b22=pow2(b11,_11n,P)*b11%P,b44=pow2(b22,_22n,P)*b22%P,b88=pow2(b44,_44n,P)*b44%P,b176=pow2(b88,_88n,P)*b88%P,b220=pow2(b176,_44n,P)*b44%P,b223=pow2(b220,_3n,P)*b3%P,t1=pow2(b223,_23n,P)*b22%P,t2=pow2(t1,_6n,P)*b2%P,root=pow2(t2,_2n,P);if(!Fpk1.eql(Fpk1.sqr(root),y))throw new Error(\"Cannot find square root\");return root}const Fpk1=Field(secp256k1P,void 0,void 0,{sqrt:sqrtMod});export const secp256k1=createCurve({a:_0n,b:BigInt(7),Fp:Fpk1,n:secp256k1N,Gx:BigInt(\"55066263022277343669578718895168534326250603453777594175500187360389116729240\"),Gy:BigInt(\"32670510020758816978083085130507043184471273380659243275938904335757337482424\"),h:BigInt(1),lowS:!0,endo:{beta:BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\"),splitScalar:k=>{const n=secp256k1N,a1=BigInt(\"0x3086d221a7d46bcde86c90e49284eb15\"),b1=-_1n*BigInt(\"0xe4437ed6010e88286f547fa90abfe4c3\"),a2=BigInt(\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\"),b2=a1,POW_2_128=BigInt(\"0x100000000000000000000000000000000\"),c1=divNearest(b2*k,n),c2=divNearest(-b1*k,n);let k1=mod(k-c1*a1-c2*a2,n),k2=mod(-c1*b1-c2*b2,n);const k1neg=k1>POW_2_128,k2neg=k2>POW_2_128;if(k1neg&&(k1=n-k1),k2neg&&(k2=n-k2),k1>POW_2_128||k2>POW_2_128)throw new Error(\"splitScalar: Endomorphism failed, k=\"+k);return{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}}}},sha256);const TAGGED_HASH_PREFIXES={};function taggedHash(tag,...messages){let tagP=TAGGED_HASH_PREFIXES[tag];if(void 0===tagP){const tagH=sha256(Uint8Array.from(tag,c=>c.charCodeAt(0)));tagP=concatBytes(tagH,tagH),TAGGED_HASH_PREFIXES[tag]=tagP}return sha256(concatBytes(tagP,...messages))}const pointToBytes=point=>point.toRawBytes(!0).slice(1),numTo32b=n=>numberToBytesBE(n,32),modP=x=>mod(x,secp256k1P),modN=x=>mod(x,secp256k1N),Point=(()=>secp256k1.ProjectivePoint)(),GmulAdd=(Q,a,b)=>Point.BASE.multiplyAndAddUnsafe(Q,a,b);function schnorrGetExtPubKey(priv){let d_=secp256k1.utils.normPrivateKeyToScalar(priv),p=Point.fromPrivateKey(d_);return{scalar:p.hasEvenY()?d_:modN(-d_),bytes:pointToBytes(p)}}function lift_x(x){aInRange(\"x\",x,_1n,secp256k1P);const xx=modP(x*x);let y=sqrtMod(modP(xx*x+BigInt(7)));y%_2n!==_0n&&(y=modP(-y));const p=new Point(x,y,_1n);return p.assertValidity(),p}const num=bytesToNumberBE;function challenge(...args){return modN(num(taggedHash(\"BIP0340/challenge\",...args)))}function schnorrGetPublicKey(privateKey){return schnorrGetExtPubKey(privateKey).bytes}function schnorrSign(message,privateKey,auxRand=randomBytes(32)){const m=ensureBytes(\"message\",message),{bytes:px,scalar:d}=schnorrGetExtPubKey(privateKey),a=ensureBytes(\"auxRand\",auxRand,32),t=numTo32b(d^num(taggedHash(\"BIP0340/aux\",a))),rand=taggedHash(\"BIP0340/nonce\",t,px,m),k_=modN(num(rand));if(k_===_0n)throw new Error(\"sign failed: k is zero\");const{bytes:rx,scalar:k}=schnorrGetExtPubKey(k_),e=challenge(rx,px,m),sig=new Uint8Array(64);if(sig.set(rx,0),sig.set(numTo32b(modN(k+e*d)),32),!schnorrVerify(sig,m,px))throw new Error(\"sign: Invalid signature produced\");return sig}function schnorrVerify(signature,message,publicKey){const sig=ensureBytes(\"signature\",signature,64),m=ensureBytes(\"message\",message),pub=ensureBytes(\"publicKey\",publicKey,32);try{const P=lift_x(num(pub)),r=num(sig.subarray(0,32));if(!inRange(r,_1n,secp256k1P))return!1;const s=num(sig.subarray(32,64));if(!inRange(s,_1n,secp256k1N))return!1;const e=challenge(numTo32b(r),pointToBytes(P),m),R=GmulAdd(P,s,modN(-e));return!(!R||!R.hasEvenY()||R.toAffine().x!==r)}catch(error){return!1}}export const schnorr=(()=>({getPublicKey:schnorrGetPublicKey,sign:schnorrSign,verify:schnorrVerify,utils:{randomPrivateKey:secp256k1.utils.randomPrivateKey,lift_x:lift_x,pointToBytes:pointToBytes,numberToBytesBE:numberToBytesBE,bytesToNumberBE:bytesToNumberBE,taggedHash:taggedHash,mod:mod}}))();const isoMap=(()=>isogenyMap(Fpk1,[[\"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7\",\"0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581\",\"0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262\",\"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c\"],[\"0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b\",\"0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],[\"0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c\",\"0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3\",\"0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931\",\"0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84\"],[\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b\",\"0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573\",\"0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"]].map(i=>i.map(j=>BigInt(j)))))(),mapSWU=(()=>mapToCurveSimpleSWU(Fpk1,{A:BigInt(\"0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533\"),B:BigInt(\"1771\"),Z:Fpk1.create(BigInt(\"-11\"))}))();export const secp256k1_hasher=(()=>createHasher(secp256k1.ProjectivePoint,scalars=>{const{x:x,y:y}=mapSWU(Fpk1.create(scalars[0]));return isoMap(x,y)},{DST:\"secp256k1_XMD:SHA-256_SSWU_RO_\",encodeDST:\"secp256k1_XMD:SHA-256_SSWU_NU_\",p:Fpk1.ORDER,m:1,k:128,expand:\"xmd\",hash:sha256}))();export const hashToCurve=(()=>secp256k1_hasher.hashToCurve)();export const encodeToCurve=(()=>secp256k1_hasher.encodeToCurve)();"],"names":["Chi","a","b","c","Maj","HashMD","constructor","blockLen","outputLen","padOffset","isLE","super","this","finished","length","pos","destroyed","buffer","Uint8Array","view","update","data","len","take","Math","min","dataView","process","set","subarray","roundClean","digestInto","out","i","byteOffset","value","setBigUint64","_32n","BigInt","_u32_max","wh","Number","wl","h","l","setUint32","oview","Error","outLen","state","get","digest","res","slice","destroy","_cloneInto","to","clone","SHA256_IV","Uint32Array","from","SHA224_IV","SHA384_IV","SHA512_IV","SHA256_K","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","SHA224","K512","map","n","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","SHA384","T224_IV","T256_IV","SHA512_224","SHA512_256","sha256","HMAC","hash","_key","key","iHash","create","pad","oHash","buf","Object","getPrototypeOf","hmac","message","_0n","_1n","isBytes","ArrayBuffer","isView","name","abytes","item","abool","title","numberToHexUnpadded","num","hex","toString","hexToNumber","hasHexBuiltin","toHex","fromHex","hexes","Array","_","padStart","bytesToHex","bytes","asciis","asciiToBase16","ch","hexToBytes","hl","al","array","ai","hi","n1","charCodeAt","n2","char","reverse","numberToBytesBE","numberToBytesLE","expectedLength","e","concatBytes","arrays","sum","utf8ToBytes","str","TextEncoder","encode","isPosBig","inRange","max","aInRange","u8n","u8fr","arr","validatorFns","bigint","val","function","boolean","string","stringOrUint8Array","isSafeInteger","isArray","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","String","entries","memoized","fn","WeakMap","arg","args","computed","_2n","_3n","_4n","_5n","_8n","mod","result","pow2","x","power","modulo","invert","number","y","u","v","q","r","m","sqrt3mod4","p1div4","ORDER","root","pow","eql","sqr","sqrt5mod8","p5div8","mul","nv","sub","ONE","FpSqrt","P","Q","S","Z","_Fp","Field","FpLegendre","cc","Q1div2","is0","M","t","R","ZERO","t_tmp","exponent","tonelliShanks","FIELD_FIELDS","validateField","reduce","MASK","BYTES","BITS","FpPow","p","d","FpInvertBatch","nums","passZero","inverted","fill","multipliedAcc","acc","invertedAcc","inv","reduceRight","p1mod2","powered","yes","zero","no","neg","nLength","nBitLength","_nBitLength","nByteLength","ceil","bitLen","redef","sqrtP","f","freeze","isOdd","lhs","rhs","add","div","sqrN","addN","subN","mulN","sqrt","toBytes","fromBytes","invertBatch","lst","cmov","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","constTimeNegate","condition","negate","validateW","W","bits","calcWOpts","scalarBits","maxNumber","windows","windowSize","mask","shiftBy","calcOffsets","window","wOpts","wbits","nextN","offsetStart","abs","isZero","isNeg","isNegF","offsetF","validateMSMPoints","points","forEach","validateMSMScalars","scalars","s","pointPrecomputes","pointWindowSizes","getW","pippenger","fieldN","plength","slength","buckets","floor","j","scalar","resI","sumI","double","validateBasic","curve","Gx","Gy","validateSigVerOpts","opts","lowS","prehash","DERErr","DER","Err","_tlv","tag","dataLen","lenLen","decode","first","lengthBytes","_int","parseInt","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","sig","seq","numToSizedHex","size","weierstrassPoints","CURVE","allowInfinityPoint","allowedPrivateKeyLengths","clearCofactor","isTorsionFree","wrapPrivateKey","endo","beta","splitScalar","validatePointOpts","Fn","_c","point","_isCompressed","toAffine","tail","weierstrassEquation","x2","x3","isValidXY","left","right","_4a3","_27b2","normPrivateKeyToScalar","lengths","N","includes","error","aprjpoint","other","Point","toAffineMemo","iz","px","py","pz","z","ax","ay","zz","assertValidMemo","fromAffine","normalizeZ","toInv","assertValidity","fromPrivateKey","privateKey","BASE","multiply","msm","_setWindowSize","wnaf","setWindowSize","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t2","t3","t4","t5","subtract","wNAF","wNAFCached","multiplyUnsafe","sc","I","hasPrecomputes","wNAFCachedUnsafe","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","cofactor","toRawBytes","isCompressed","elm","unsafeLadder","precomputeWindow","base","push","precomputes","wo","wNAFUnsafe","getPrecomputes","transform","comp","prev","delete","ProjectivePoint","isWithinCurveOrder","weierstrass","curveDef","randomBytes","bits2int","bits2int_modN","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","y2","sqrtError","suffix","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","mapHashToField","precompute","isProbPub","fpl","compLen","uncompLen","delta","ORDER_MASK","int2octets","defaultSigOpts","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","seed","k2sig","some","k","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","hashLen","qByteLen","hmacFn","reset","reseed","gen","sl","pred","createHmacDrbg","verify","signature","publicKey","sg","format","isHex","isObj","_sig","derError","is","mapToCurveSimpleSWU","sqrtRatio","o","c1","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","SWUFpSqrtRatio","tv6","tv4_inv","getHash","msgs","os2ip","i2osp","anum","strxor","hash_to_field","msg","count","options","DST","expand","_DST","log2p","L","len_in_bytes","prb","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xmd","dkLen","expand_message_xof","elm_offset","tv","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","Fpk1","secp256k1","defHash","createCurve","a1","b1","a2","POW_2_128","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","pointToBytes","numTo32b","modP","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","rand","k_","rx","schnorrVerify","pub","isoMap","coeff","xn","xd","yn","yd","xd_inv","yd_inv","isogenyMap","mapSWU","secp256k1_hasher","mapToCurve","defaults","clear","initial","hashToCurve","u0","encodeToCurve","encodeDST","createHasher"],"sourceRoot":""}