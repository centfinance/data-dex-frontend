{"version":3,"file":"static/js/604.8814a64d.chunk.js","mappings":"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","sources":["components/earn/styled.tsx","components/addLiquidity/OwnershipWarning.tsx","utils/addressesAreEquivalent.ts","components/PositionPreview/index.tsx","components/RangeSelector/PresetsButtons.tsx","utils/approveAmountCalldata.ts","pages/AddLiquidity/Review.tsx","pages/AddLiquidity/index.tsx","hooks/useDerivedPositionInfo.ts","hooks/useArgentWalletContract.ts","components/swap/UnsupportedCurrencyFooter.tsx","components/NavigationTabs/index.tsx","components/CurrencyInputPanel/index.tsx"],"sourcesContent":["import styled from 'styled-components'\n\nimport uImage from '../../assets/images/big_unicorn.png'\nimport noise from '../../assets/images/noise.png'\nimport { AutoColumn } from '../Column'\n\nexport const DataCard = styled(AutoColumn)<{ disabled?: boolean }>`\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #000000 0%, #2172e5 100%);\n  border-radius: 12px;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const CardBGImage = styled.span<{ desaturate?: boolean }>`\n  background: url(${uImage});\n  width: 1000px;\n  height: 600px;\n  position: absolute;\n  border-radius: 12px;\n  opacity: 0.4;\n  top: -100px;\n  left: -100px;\n  transform: rotate(-15deg);\n  user-select: none;\n  ${({ desaturate }) => desaturate && `filter: saturate(0)`}\n`\n\nexport const CardNoise = styled.span`\n  background: url(${noise});\n  background-size: cover;\n  mix-blend-mode: overlay;\n  border-radius: 12px;\n  width: 100%;\n  height: 100%;\n  opacity: 0.15;\n  position: absolute;\n  top: 0;\n  left: 0;\n  user-select: none;\n`\n\nexport const CardSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  padding: 1rem;\n  z-index: 1;\n  opacity: ${({ disabled }) => disabled && '0.4'};\n`\n\nexport const Break = styled.div`\n  width: 100%;\n  background-color: rgba(255, 255, 255, 0.2);\n  height: 1px;\n`\n","import { Trans } from '@lingui/macro'\nimport { AlertTriangle } from 'react-feather'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst ExplainerText = styled.div`\n  color: ${({ theme }) => theme.neutral2};\n`\nconst TitleRow = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  color: ${({ theme }) => theme.deprecated_accentWarning};\n  margin-bottom: 8px;\n`\nconst Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.deprecated_accentWarningSoft};\n  border-radius: 16px;\n  margin-top: 12px;\n  max-width: 480px;\n  padding: 12px 20px;\n  width: 100%;\n`\n\ninterface OwnershipWarningProps {\n  ownerAddress: string\n}\n\nconst OwnershipWarning = ({ ownerAddress }: OwnershipWarningProps) => (\n  <Wrapper>\n    <TitleRow>\n      <AlertTriangle style={{ marginRight: '8px' }} />\n      <ThemedText.SubHeader color=\"deprecated_accentWarning\">\n        <Trans>Warning</Trans>\n      </ThemedText.SubHeader>\n    </TitleRow>\n    <ExplainerText>\n      <Trans>\n        You are not the owner of this LP position. You will not be able to withdraw the liquidity from this position\n        unless you own the following address: {ownerAddress}\n      </Trans>\n    </ExplainerText>\n  </Wrapper>\n)\n\nexport default OwnershipWarning\n","export function addressesAreEquivalent(a: string | null | undefined, b: string | null | undefined) {\n  if (!a || !b) return false\n  return a === b || a.toLowerCase() === b.toLowerCase()\n}\n","import { Trans } from '@lingui/macro'\nimport { Position } from '@uniswap/v3-sdk'\nimport { Currency } from '@vanadex/sdk-core'\nimport RangeBadge from 'components/Badge/RangeBadge'\nimport { LightCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport DoubleCurrencyLogo from 'components/DoubleLogo'\nimport { Break } from 'components/earn/styled'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport RateToggle from 'components/RateToggle'\nimport { RowBetween, RowFixed } from 'components/Row'\nimport JSBI from 'jsbi'\nimport { ReactNode, useCallback, useState } from 'react'\nimport { Bound } from 'state/mint/v3/actions'\nimport { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { useFormatter } from 'utils/formatNumbers'\nimport { unwrappedToken } from 'utils/unwrappedToken'\n\nexport const PositionPreview = ({\n  position,\n  title,\n  inRange,\n  baseCurrencyDefault,\n  ticksAtLimit,\n}: {\n  position: Position\n  title?: ReactNode\n  inRange: boolean\n  baseCurrencyDefault?: Currency\n  ticksAtLimit: { [bound: string]: boolean | undefined }\n}) => {\n  const theme = useTheme()\n  const { formatTickPrice } = useFormatter()\n\n  const currency0 = unwrappedToken(position.pool.token0)\n  const currency1 = unwrappedToken(position.pool.token1)\n\n  // track which currency should be base\n  const [baseCurrency, setBaseCurrency] = useState(\n    baseCurrencyDefault\n      ? baseCurrencyDefault === currency0\n        ? currency0\n        : baseCurrencyDefault === currency1\n        ? currency1\n        : currency0\n      : currency0\n  )\n\n  const sorted = baseCurrency === currency0\n  const quoteCurrency = sorted ? currency1 : currency0\n\n  const price = sorted ? position.pool.priceOf(position.pool.token0) : position.pool.priceOf(position.pool.token1)\n\n  const priceLower = sorted ? position.token0PriceLower : position.token0PriceUpper.invert()\n  const priceUpper = sorted ? position.token0PriceUpper : position.token0PriceLower.invert()\n\n  const handleRateChange = useCallback(() => {\n    setBaseCurrency(quoteCurrency)\n  }, [quoteCurrency])\n\n  const removed = position?.liquidity && JSBI.equal(position?.liquidity, JSBI.BigInt(0))\n\n  return (\n    <AutoColumn gap=\"md\" style={{ marginTop: '0.5rem' }}>\n      <RowBetween style={{ marginBottom: '0.5rem' }}>\n        <RowFixed>\n          <DoubleCurrencyLogo\n            currency0={currency0 ?? undefined}\n            currency1={currency1 ?? undefined}\n            size={24}\n            margin={true}\n          />\n          <ThemedText.DeprecatedLabel ml=\"10px\" fontSize=\"24px\">\n            {currency0?.symbol} / {currency1?.symbol}\n          </ThemedText.DeprecatedLabel>\n        </RowFixed>\n        <RangeBadge removed={removed} inRange={inRange} />\n      </RowBetween>\n\n      <LightCard>\n        <AutoColumn gap=\"md\">\n          <RowBetween>\n            <RowFixed>\n              <CurrencyLogo currency={currency0} />\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency0?.symbol}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n            <RowFixed>\n              <ThemedText.DeprecatedLabel mr=\"8px\">{position.amount0.toSignificant(4)}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <CurrencyLogo currency={currency1} />\n              <ThemedText.DeprecatedLabel ml=\"8px\">{currency1?.symbol}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n            <RowFixed>\n              <ThemedText.DeprecatedLabel mr=\"8px\">{position.amount1.toSignificant(4)}</ThemedText.DeprecatedLabel>\n            </RowFixed>\n          </RowBetween>\n          <Break />\n          <RowBetween>\n            <ThemedText.DeprecatedLabel>\n              <Trans>Fee tier</Trans>\n            </ThemedText.DeprecatedLabel>\n            <ThemedText.DeprecatedLabel>\n              <Trans>{position?.pool?.fee / 10000}%</Trans>\n            </ThemedText.DeprecatedLabel>\n          </RowBetween>\n        </AutoColumn>\n      </LightCard>\n\n      <AutoColumn gap=\"md\">\n        <RowBetween>\n          {title ? <ThemedText.DeprecatedMain>{title}</ThemedText.DeprecatedMain> : <div />}\n          <RateToggle\n            currencyA={sorted ? currency0 : currency1}\n            currencyB={sorted ? currency1 : currency0}\n            handleRateToggle={handleRateChange}\n          />\n        </RowBetween>\n\n        <RowBetween>\n          <LightCard width=\"48%\" padding=\"8px\">\n            <AutoColumn gap=\"4px\" justify=\"center\">\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\n                <Trans>Min price</Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                {formatTickPrice({\n                  price: priceLower,\n                  atLimit: ticksAtLimit,\n                  direction: Bound.LOWER,\n                })}\n              </ThemedText.DeprecatedMediumHeader>\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n                <Trans>\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\n                </Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\n                <Trans>Your position will be 100% composed of {baseCurrency?.symbol} at this price</Trans>\n              </ThemedText.DeprecatedSmall>\n            </AutoColumn>\n          </LightCard>\n\n          <LightCard width=\"48%\" padding=\"8px\">\n            <AutoColumn gap=\"4px\" justify=\"center\">\n              <ThemedText.DeprecatedMain fontSize=\"12px\">\n                <Trans>Max price</Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedMediumHeader textAlign=\"center\">\n                {formatTickPrice({\n                  price: priceUpper,\n                  atLimit: ticksAtLimit,\n                  direction: Bound.UPPER,\n                })}\n              </ThemedText.DeprecatedMediumHeader>\n              <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n                <Trans>\n                  {quoteCurrency.symbol} per {baseCurrency.symbol}\n                </Trans>\n              </ThemedText.DeprecatedMain>\n              <ThemedText.DeprecatedSmall textAlign=\"center\" color={theme.neutral3} style={{ marginTop: '4px' }}>\n                <Trans>Your position will be 100% composed of {quoteCurrency?.symbol} at this price</Trans>\n              </ThemedText.DeprecatedSmall>\n            </AutoColumn>\n          </LightCard>\n        </RowBetween>\n        <LightCard padding=\"12px \">\n          <AutoColumn gap=\"4px\" justify=\"center\">\n            <ThemedText.DeprecatedMain fontSize=\"12px\">\n              <Trans>Current price</Trans>\n            </ThemedText.DeprecatedMain>\n            <ThemedText.DeprecatedMediumHeader>{`${price.toSignificant(5)} `}</ThemedText.DeprecatedMediumHeader>\n            <ThemedText.DeprecatedMain textAlign=\"center\" fontSize=\"12px\">\n              <Trans>\n                {quoteCurrency.symbol} per {baseCurrency.symbol}\n              </Trans>\n            </ThemedText.DeprecatedMain>\n          </AutoColumn>\n        </LightCard>\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { ButtonOutlined } from 'components/Button'\nimport { AutoRow } from 'components/Row'\nimport styled from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nconst Button = styled(ButtonOutlined).attrs(() => ({\n  padding: '6px',\n  $borderRadius: '8px',\n}))`\n  color: ${({ theme }) => theme.neutral1};\n  flex: 1;\n`\n\ninterface PresetsButtonsProps {\n  onSetFullRange: () => void\n}\n\nexport default function PresetsButtons({ onSetFullRange }: PresetsButtonsProps) {\n  return (\n    <AutoRow gap=\"4px\" width=\"auto\">\n      <Button data-testid=\"set-full-range\" onClick={onSetFullRange}>\n        <ThemedText.DeprecatedBody fontSize={12}>\n          <Trans>Full range</Trans>\n        </ThemedText.DeprecatedBody>\n      </Button>\n    </AutoRow>\n  )\n}\n","import { Interface } from '@ethersproject/abi'\nimport { toHex } from '@uniswap/v3-sdk'\nimport { Currency, CurrencyAmount } from '@vanadex/sdk-core'\n\nimport { Erc20Interface } from '../abis/types/Erc20'\n\nconst ERC20_INTERFACE = new Interface([\n  {\n    constant: false,\n    inputs: [\n      { name: '_spender', type: 'address' },\n      { name: '_value', type: 'uint256' },\n    ],\n    name: 'approve',\n    outputs: [{ name: '', type: 'bool' }],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function',\n  },\n]) as Erc20Interface\n\nexport default function approveAmountCalldata(\n  amount: CurrencyAmount<Currency>,\n  spender: string\n): { to: string; data: string; value: '0x0' } {\n  if (!amount.currency.isToken) throw new Error('Must call with an amount of token')\n  const approveData = ERC20_INTERFACE.encodeFunctionData('approve', [spender, toHex(amount.quotient)])\n  return {\n    to: amount.currency.address,\n    data: approveData,\n    value: '0x0',\n  }\n}\n","import { Position } from '@uniswap/v3-sdk'\nimport { Currency, CurrencyAmount, Price } from '@vanadex/sdk-core'\nimport { AutoColumn } from 'components/Column'\nimport { PositionPreview } from 'components/PositionPreview'\nimport styled from 'styled-components'\n\nimport { Bound, Field } from '../../state/mint/v3/actions'\n\nconst Wrapper = styled.div`\n  padding-top: 12px;\n`\n\nexport function Review({\n  position,\n  outOfRange,\n  ticksAtLimit,\n}: {\n  position?: Position\n  existingPosition?: Position\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  priceLower?: Price<Currency, Currency>\n  priceUpper?: Price<Currency, Currency>\n  outOfRange: boolean\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n}) {\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"lg\">\n        {position ? (\n          <PositionPreview\n            position={position}\n            inRange={!outOfRange}\n            ticksAtLimit={ticksAtLimit}\n            title=\"Selected Range\"\n          />\n        ) : null}\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { FeeAmount, NonfungiblePositionManager } from '@uniswap/v3-sdk'\nimport { Currency, CurrencyAmount, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES, Percent } from '@vanadex/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useToggleAccountDrawer } from 'components/AccountDrawer'\nimport OwnershipWarning from 'components/addLiquidity/OwnershipWarning'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { isSupportedChain } from 'constants/chains'\nimport usePrevious from 'hooks/usePrevious'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { BodyWrapper } from 'pages/AppBody'\nimport { PositionPageUnsupportedContent } from 'pages/Pool/PositionPage'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useNavigate, useParams, useSearchParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport {\n  useRangeHopCallbacks,\n  useV3DerivedMintInfo,\n  useV3MintActionHandlers,\n  useV3MintState,\n} from 'state/mint/v3/hooks'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { addressesAreEquivalent } from 'utils/addressesAreEquivalent'\nimport { WrongChainError } from 'utils/errors'\n\nimport { ButtonError, ButtonLight, ButtonPrimary, ButtonText } from '../../components/Button'\nimport { BlueCard, OutlineCard, YellowCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport HoverInlineText from '../../components/HoverInlineText'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { PositionPreview } from '../../components/PositionPreview'\nimport RangeSelector from '../../components/RangeSelector'\nimport PresetsButtons from '../../components/RangeSelector/PresetsButtons'\nimport RateToggle from '../../components/RateToggle'\nimport Row, { RowBetween, RowFixed } from '../../components/Row'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useArgentWalletContract } from '../../hooks/useArgentWalletContract'\nimport { useV3NFTPositionManagerContract } from '../../hooks/useContract'\nimport { useDerivedPositionInfo } from '../../hooks/useDerivedPositionInfo'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport { useStablecoinValue } from '../../hooks/useStablecoinPrice'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { useV3PositionFromTokenId } from '../../hooks/useV3Positions'\nimport { Bound, Field } from '../../state/mint/v3/actions'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionInfo, TransactionType } from '../../state/transactions/types'\nimport { useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport approveAmountCalldata from '../../utils/approveAmountCalldata'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { Dots } from '../Pool/styled'\nimport { Review } from './Review'\nimport { DynamicSection, MediumOnly, ResponsiveTwoColumns, ScrollablePage, StyledInput, Wrapper } from './styled'\n\nconst DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nconst StyledBodyWrapper = styled(BodyWrapper)<{ $hasExistingPosition: boolean }>`\n  padding: ${({ $hasExistingPosition }) => ($hasExistingPosition ? '10px' : 0)};\n  max-width: 640px;\n`\n\nexport default function AddLiquidityWrapper() {\n  const { chainId } = useWeb3React()\n  if (isSupportedChain(chainId)) {\n    return <AddLiquidity />\n  } else {\n    return <PositionPageUnsupportedContent />\n  }\n}\n\nfunction AddLiquidity() {\n  const navigate = useNavigate()\n  const {\n    currencyIdA,\n    currencyIdB,\n    feeAmount: feeAmountFromUrl,\n    tokenId,\n  } = useParams<{\n    currencyIdA?: string\n    currencyIdB?: string\n    feeAmount?: string\n    tokenId?: string\n  }>()\n  const { account, chainId, provider } = useWeb3React()\n  const theme = useTheme()\n\n  const toggleWalletDrawer = useToggleAccountDrawer() // toggle wallet when disconnected\n  const addTransaction = useTransactionAdder()\n  const positionManager = useV3NFTPositionManagerContract()\n\n  // check for existing position if tokenId in url\n  const { position: existingPositionDetails, loading: positionLoading } = useV3PositionFromTokenId(\n    tokenId ? BigNumber.from(tokenId) : undefined\n  )\n  const hasExistingPosition = !!existingPositionDetails && !positionLoading\n  const { position: existingPosition } = useDerivedPositionInfo(existingPositionDetails)\n\n  // fee selection from url\n  const feeAmount: FeeAmount | undefined =\n    feeAmountFromUrl && Object.values(FeeAmount).includes(parseFloat(feeAmountFromUrl))\n      ? parseFloat(feeAmountFromUrl)\n      : undefined\n\n  const baseCurrency = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n  // prevent an error if they input ETH/WETH\n  const quoteCurrency =\n    baseCurrency && currencyB && baseCurrency.wrapped.equals(currencyB.wrapped) ? undefined : currencyB\n\n  // mint state\n  const { independentField, typedValue, startPriceTypedValue } = useV3MintState()\n\n  const {\n    pool,\n    ticks,\n    dependentField,\n    price,\n    pricesAtTicks,\n    pricesAtLimit,\n    parsedAmounts,\n    currencyBalances,\n    position,\n    noLiquidity,\n    currencies,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n  } = useV3DerivedMintInfo(\n    baseCurrency ?? undefined,\n    quoteCurrency ?? undefined,\n    feeAmount,\n    baseCurrency ?? undefined,\n    existingPosition\n  )\n\n  const { onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput, onStartPriceInput } =\n    useV3MintActionHandlers(noLiquidity)\n\n  const isValid = !errorMessage && !invalidRange\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const usdcValues = {\n    [Field.CURRENCY_A]: useStablecoinValue(parsedAmounts[Field.CURRENCY_A]),\n    [Field.CURRENCY_B]: useStablecoinValue(parsedAmounts[Field.CURRENCY_B]),\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const argentWalletContract = useArgentWalletContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_A],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n  const [approvalB, approveBCallback] = useApproveCallback(\n    argentWalletContract ? undefined : parsedAmounts[Field.CURRENCY_B],\n    chainId ? NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId] : undefined\n  )\n\n  const allowedSlippage = useUserSlippageToleranceWithDefault(\n    outOfRange ? ZERO_PERCENT : DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE\n  )\n\n  // Modify the error message logic to only check for native token requirement\n  // const customErrorMessage = useMemo(() => {\n  //   if (!account) {\n  //     return <Trans>Connect Wallet</Trans>\n  //   }\n  //   if (!baseCurrency || !quoteCurrency) {\n  //     return <Trans>Select a token pair</Trans>\n  //   }\n  //   if (!baseCurrency.isNative && !quoteCurrency.isNative) {\n  //     return <Trans>One token must be the native token</Trans>\n  //   }\n  //   if (invalidRange) {\n  //     return <Trans>Invalid price range</Trans>\n  //   }\n  //   if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n  //     return <Trans>Enter an amount</Trans>\n  //   }\n  //   return null\n  // }, [account, baseCurrency, quoteCurrency, invalidRange, parsedAmounts])\n\n  // Modify onAdd to allow pool creation but keep the native token requirement\n  async function onAdd() {\n    if (!chainId || !provider || !account) return\n    if (!positionManager || !baseCurrency || !quoteCurrency) return\n\n    if (position && account && deadline) {\n      const useNative = baseCurrency.isNative ? baseCurrency : quoteCurrency.isNative ? quoteCurrency : undefined\n\n      const { calldata, value } =\n        hasExistingPosition && tokenId\n          ? NonfungiblePositionManager.addCallParameters(position, {\n              tokenId,\n              slippageTolerance: allowedSlippage,\n              deadline: deadline.toString(),\n              useNative,\n            })\n          : NonfungiblePositionManager.addCallParameters(position, {\n              slippageTolerance: allowedSlippage,\n              recipient: account,\n              deadline: deadline.toString(),\n              useNative,\n              createPool: noLiquidity,\n            })\n\n      let txn: { to: string; data: string; value: string } = {\n        to: NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId],\n        data: calldata,\n        value,\n      }\n\n      if (argentWalletContract) {\n        const amountA = parsedAmounts[Field.CURRENCY_A]\n        const amountB = parsedAmounts[Field.CURRENCY_B]\n        const batch = [\n          ...(amountA && amountA.currency.isToken\n            ? [approveAmountCalldata(amountA, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          ...(amountB && amountB.currency.isToken\n            ? [approveAmountCalldata(amountB, NONFUNGIBLE_POSITION_MANAGER_ADDRESSES[chainId])]\n            : []),\n          {\n            to: txn.to,\n            data: txn.data,\n            value: txn.value,\n          },\n        ]\n        const data = argentWalletContract.interface.encodeFunctionData('wc_multiCall', [batch])\n        txn = {\n          to: argentWalletContract.address,\n          data,\n          value: '0x0',\n        }\n      }\n\n      const connectedChainId = await provider.getSigner().getChainId()\n      if (chainId !== connectedChainId) throw new WrongChainError()\n\n      setAttemptingTxn(true)\n\n      provider\n        .getSigner()\n        .estimateGas(txn)\n        .then((estimate) => {\n          const newTxn = {\n            ...txn,\n            gasLimit: calculateGasMargin(estimate),\n          }\n\n          return provider\n            .getSigner()\n            .sendTransaction(newTxn)\n            .then((response: TransactionResponse) => {\n              setAttemptingTxn(false)\n              const transactionInfo: TransactionInfo = {\n                type: TransactionType.ADD_LIQUIDITY_V3_POOL,\n                baseCurrencyId: currencyId(baseCurrency),\n                quoteCurrencyId: currencyId(quoteCurrency),\n                createPool: Boolean(noLiquidity),\n                expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient?.toString() ?? '0',\n                expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient?.toString() ?? '0',\n                feeAmount: position.pool.fee,\n              }\n              addTransaction(response, transactionInfo)\n              setTxHash(response.hash)\n            })\n        })\n        .catch((error) => {\n          console.error('Failed to send transaction', error)\n          setAttemptingTxn(false)\n          // we only care if the error is something _other_ than the user rejected the tx\n          if (error?.code !== 4001) {\n            console.error(error)\n          }\n        })\n    } else {\n      return\n    }\n  }\n\n  const handleCurrencySelect = useCallback(\n    (currencyNew: Currency, currencyIdOther?: string): (string | undefined)[] => {\n      const currencyIdNew = currencyId(currencyNew)\n\n      if (currencyIdNew === currencyIdOther) {\n        // not ideal, but for now clobber the other if the currency ids are equal\n        return [currencyIdNew, undefined]\n      } else {\n        // prevent weth + eth\n        const isETHOrWETHNew =\n          currencyIdNew === 'ETH' ||\n          (chainId !== undefined && currencyIdNew === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n        const isETHOrWETHOther =\n          currencyIdOther !== undefined &&\n          (currencyIdOther === 'ETH' ||\n            (chainId !== undefined && currencyIdOther === WRAPPED_NATIVE_CURRENCY[chainId]?.address))\n\n        if (isETHOrWETHNew && isETHOrWETHOther) {\n          return [currencyIdNew, undefined]\n        } else {\n          return [currencyIdNew, currencyIdOther]\n        }\n      }\n    },\n    [chainId]\n  )\n\n  // Modify handleCurrencyASelect to only allow native token\n  const handleCurrencyASelect = useCallback(\n    (currencyANew: Currency) => {\n      // // Only allow native token for currency A\n      // if (!currencyANew.isNative) return\n\n      const [idA, idB] = handleCurrencySelect(currencyANew, currencyIdB)\n      if (idB === undefined) {\n        navigate(`/add/${idA}`)\n      } else {\n        navigate(`/add/${idA}/${idB}/3000`)\n      }\n    },\n    [handleCurrencySelect, currencyIdB, navigate]\n  )\n\n  // Modify handleCurrencyBSelect to restrict native token\n  const handleCurrencyBSelect = useCallback(\n    (currencyBNew: Currency) => {\n      // Don't allow native token for currency B\n      // if (currencyBNew.isNative) return\n\n      const [idB, idA] = handleCurrencySelect(currencyBNew, currencyIdA)\n      if (idA === undefined) {\n        navigate(`/add/${idB}`)\n      } else {\n        navigate(`/add/${idA}/${idB}/3000`)\n      }\n    },\n    [handleCurrencySelect, currencyIdA, navigate]\n  )\n\n  // Remove fee selector callback since we're forcing 0.3%\n  // const handleFeePoolSelect = useCallback((newFeeAmount: FeeAmount) => {\n  //   // No-op - fees are locked to 0.3%\n  // }, [])\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n      // dont jump to pool page if creating\n      navigate('/pools')\n    }\n    setTxHash('')\n  }, [navigate, onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const clearAll = useCallback(() => {\n    onFieldAInput('')\n    onFieldBInput('')\n    onLeftRangeInput('')\n    onRightRangeInput('')\n    navigate(`/add`)\n  }, [navigate, onFieldAInput, onFieldBInput, onLeftRangeInput, onRightRangeInput])\n\n  // get value and prices at ticks\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks\n  const { [Bound.LOWER]: priceLower, [Bound.UPPER]: priceUpper } = pricesAtTicks\n\n  const { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange } =\n    useRangeHopCallbacks(baseCurrency ?? undefined, quoteCurrency ?? undefined, feeAmount, tickLower, tickUpper, pool)\n\n  // we need an existence check on parsed amounts for single-asset deposits\n  const showApprovalA =\n    !argentWalletContract && approvalA !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_A]\n  const showApprovalB =\n    !argentWalletContract && approvalB !== ApprovalState.APPROVED && !!parsedAmounts[Field.CURRENCY_B]\n\n  const pendingText = `Supplying ${!depositADisabled ? parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) : ''} ${\n    !depositADisabled ? currencies[Field.CURRENCY_A]?.symbol : ''\n  } ${!outOfRange ? 'and' : ''} ${!depositBDisabled ? parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) : ''} ${\n    !depositBDisabled ? currencies[Field.CURRENCY_B]?.symbol : ''\n  }`\n\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const handleSetFullRange = useCallback(() => {\n    getSetFullRange()\n\n    const minPrice = pricesAtLimit[Bound.LOWER]\n    if (minPrice) searchParams.set('minPrice', minPrice.toSignificant(5))\n    const maxPrice = pricesAtLimit[Bound.UPPER]\n    if (maxPrice) searchParams.set('maxPrice', maxPrice.toSignificant(5))\n    setSearchParams(searchParams)\n  }, [getSetFullRange, pricesAtLimit, searchParams, setSearchParams])\n\n  // START: sync values with query string\n  const oldSearchParams = usePrevious(searchParams)\n  // use query string as an input to onInput handlers\n  useEffect(() => {\n    const minPrice = searchParams.get('minPrice')\n    const oldMinPrice = oldSearchParams?.get('minPrice')\n    if (\n      minPrice &&\n      typeof minPrice === 'string' &&\n      !isNaN(minPrice as any) &&\n      (!oldMinPrice || oldMinPrice !== minPrice)\n    ) {\n      onLeftRangeInput(minPrice)\n    }\n    // disable eslint rule because this hook only cares about the url->input state data flow\n    // input state -> url updates are handled in the input handlers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n  useEffect(() => {\n    const maxPrice = searchParams.get('maxPrice')\n    const oldMaxPrice = oldSearchParams?.get('maxPrice')\n    if (\n      maxPrice &&\n      typeof maxPrice === 'string' &&\n      !isNaN(maxPrice as any) &&\n      (!oldMaxPrice || oldMaxPrice !== maxPrice)\n    ) {\n      onRightRangeInput(maxPrice)\n    }\n    // disable eslint rule because this hook only cares about the url->input state data flow\n    // input state -> url updates are handled in the input handlers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchParams])\n  // END: sync values with query string\n\n  const Buttons = () =>\n    addIsUnsupported ? (\n      <ButtonPrimary disabled={true} $borderRadius=\"12px\" padding=\"12px\">\n        <ThemedText.DeprecatedMain mb=\"4px\">\n          <Trans>Unsupported Asset</Trans>\n        </ThemedText.DeprecatedMain>\n      </ButtonPrimary>\n    ) : !account ? (\n      <ButtonLight onClick={toggleWalletDrawer} $borderRadius=\"12px\" padding=\"12px\">\n        <Trans>Connect wallet</Trans>\n      </ButtonLight>\n    ) : (\n      <AutoColumn gap=\"md\">\n        {(approvalA === ApprovalState.NOT_APPROVED ||\n          approvalA === ApprovalState.PENDING ||\n          approvalB === ApprovalState.NOT_APPROVED ||\n          approvalB === ApprovalState.PENDING) &&\n          isValid && (\n            <RowBetween>\n              {showApprovalA && (\n                <ButtonPrimary\n                  onClick={approveACallback}\n                  disabled={approvalA === ApprovalState.PENDING}\n                  width={showApprovalB ? '48%' : '100%'}\n                >\n                  {approvalA === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n              {showApprovalB && (\n                <ButtonPrimary\n                  onClick={approveBCallback}\n                  disabled={approvalB === ApprovalState.PENDING}\n                  width={showApprovalA ? '48%' : '100%'}\n                >\n                  {approvalB === ApprovalState.PENDING ? (\n                    <Dots>\n                      <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                    </Dots>\n                  ) : (\n                    <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                  )}\n                </ButtonPrimary>\n              )}\n            </RowBetween>\n          )}\n        <ButtonError\n          onClick={() => {\n            setShowConfirm(true)\n          }}\n          disabled={\n            !isValid ||\n            (!argentWalletContract && approvalA !== ApprovalState.APPROVED && !depositADisabled) ||\n            (!argentWalletContract && approvalB !== ApprovalState.APPROVED && !depositBDisabled) ||\n            priceLower === undefined ||\n            priceUpper === undefined\n          }\n          error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n        >\n          <Text fontWeight={535}>{errorMessage ? errorMessage : <Trans>Preview</Trans>}</Text>\n        </ButtonError>\n      </AutoColumn>\n    )\n\n  const usdcValueCurrencyA = usdcValues[Field.CURRENCY_A]\n  const usdcValueCurrencyB = usdcValues[Field.CURRENCY_B]\n  const currencyAFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyA ? parseFloat(usdcValueCurrencyA.toSignificant()) : undefined,\n      isLoading: false,\n    }),\n    [usdcValueCurrencyA]\n  )\n  const currencyBFiat = useMemo(\n    () => ({\n      data: usdcValueCurrencyB ? parseFloat(usdcValueCurrencyB.toSignificant()) : undefined,\n      isLoading: false,\n    }),\n    [usdcValueCurrencyB]\n  )\n\n  const owner = useSingleCallResult(tokenId ? positionManager : null, 'ownerOf', [tokenId]).result?.[0]\n  const ownsNFT =\n    addressesAreEquivalent(owner, account) || addressesAreEquivalent(existingPositionDetails?.operator, account)\n  const showOwnershipWarning = Boolean(hasExistingPosition && account && !ownsNFT)\n\n  return (\n    <>\n      <ScrollablePage>\n        <TransactionConfirmationModal\n          isOpen={showConfirm}\n          onDismiss={handleDismissConfirmation}\n          attemptingTxn={attemptingTxn}\n          hash={txHash}\n          reviewContent={() => (\n            <ConfirmationModalContent\n              title={<Trans>Add Liquidity</Trans>}\n              onDismiss={handleDismissConfirmation}\n              topContent={() => (\n                <Review\n                  parsedAmounts={parsedAmounts}\n                  position={position}\n                  existingPosition={existingPosition}\n                  priceLower={priceLower}\n                  priceUpper={priceUpper}\n                  outOfRange={outOfRange}\n                  ticksAtLimit={ticksAtLimit}\n                />\n              )}\n              bottomContent={() => (\n                <ButtonPrimary style={{ marginTop: '1rem' }} onClick={onAdd}>\n                  <Text fontWeight={535} fontSize={20}>\n                    <Trans>Add</Trans>\n                  </Text>\n                </ButtonPrimary>\n              )}\n            />\n          )}\n          pendingText={pendingText}\n        />\n        <StyledBodyWrapper $hasExistingPosition={hasExistingPosition}>\n          <AddRemoveTabs\n            creating={false}\n            adding={true}\n            positionID={tokenId}\n            autoSlippage={DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE}\n            showBackLink={!hasExistingPosition}\n          >\n            {!hasExistingPosition && (\n              <Row justifyContent=\"flex-end\" style={{ width: 'fit-content', minWidth: 'fit-content' }}>\n                <MediumOnly>\n                  <ButtonText onClick={clearAll}>\n                    <ThemedText.DeprecatedBlue fontSize=\"12px\">\n                      <Trans>Clear all</Trans>\n                    </ThemedText.DeprecatedBlue>\n                  </ButtonText>\n                </MediumOnly>\n              </Row>\n            )}\n          </AddRemoveTabs>\n          <Wrapper>\n            <ResponsiveTwoColumns wide={!hasExistingPosition}>\n              <AutoColumn gap=\"lg\">\n                {!hasExistingPosition && (\n                  <>\n                    <AutoColumn gap=\"md\">\n                      <RowBetween paddingBottom=\"20px\">\n                        <ThemedText.DeprecatedLabel>\n                          <Trans>Select pair</Trans>\n                        </ThemedText.DeprecatedLabel>\n                      </RowBetween>\n                      <RowBetween gap=\"md\">\n                        <CurrencyInputPanel\n                          value={formattedAmounts[Field.CURRENCY_A]}\n                          onUserInput={onFieldAInput}\n                          hideInput\n                          onMax={() => {\n                            onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                          }}\n                          onCurrencySelect={handleCurrencyASelect}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                          currency={currencies[Field.CURRENCY_A] ?? null}\n                          id=\"add-liquidity-input-tokena\"\n                          showCommonBases\n                        />\n\n                        <CurrencyInputPanel\n                          value={formattedAmounts[Field.CURRENCY_B]}\n                          hideInput\n                          onUserInput={onFieldBInput}\n                          onCurrencySelect={handleCurrencyBSelect}\n                          onMax={() => {\n                            onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                          }}\n                          showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                          currency={currencies[Field.CURRENCY_B] ?? null}\n                          id=\"add-liquidity-input-tokenb\"\n                          showCommonBases\n                        />\n                      </RowBetween>\n                    </AutoColumn>{' '}\n                  </>\n                )}\n                {hasExistingPosition && existingPosition && (\n                  <PositionPreview\n                    position={existingPosition}\n                    title={<Trans>Selected range</Trans>}\n                    inRange={!outOfRange}\n                    ticksAtLimit={ticksAtLimit}\n                  />\n                )}\n              </AutoColumn>\n\n              {!hasExistingPosition && (\n                <>\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                    <RowBetween>\n                      <ThemedText.DeprecatedLabel>\n                        <Trans>Set price range</Trans>\n                      </ThemedText.DeprecatedLabel>\n\n                      {Boolean(baseCurrency && quoteCurrency) && (\n                        <RowFixed gap=\"8px\">\n                          <PresetsButtons onSetFullRange={handleSetFullRange} />\n                          <RateToggle\n                            currencyA={baseCurrency as Currency}\n                            currencyB={quoteCurrency as Currency}\n                            handleRateToggle={() => {\n                              if (!ticksAtLimit[Bound.LOWER] && !ticksAtLimit[Bound.UPPER]) {\n                                onLeftRangeInput(\n                                  (invertPrice ? priceLower : priceUpper?.invert())?.toSignificant(6) ?? ''\n                                )\n                                onRightRangeInput(\n                                  (invertPrice ? priceUpper : priceLower?.invert())?.toSignificant(6) ?? ''\n                                )\n                                onFieldAInput(formattedAmounts[Field.CURRENCY_B] ?? '')\n                              }\n                              navigate(\n                                `/add/${currencyIdB as string}/${currencyIdA as string}${\n                                  feeAmount ? '/' + feeAmount : ''\n                                }`\n                              )\n                            }}\n                          />\n                        </RowFixed>\n                      )}\n                    </RowBetween>\n\n                    <RangeSelector\n                      priceLower={priceLower}\n                      priceUpper={priceUpper}\n                      getDecrementLower={getDecrementLower}\n                      getIncrementLower={getIncrementLower}\n                      getDecrementUpper={getDecrementUpper}\n                      getIncrementUpper={getIncrementUpper}\n                      onLeftRangeInput={onLeftRangeInput}\n                      onRightRangeInput={onRightRangeInput}\n                      currencyA={baseCurrency}\n                      currencyB={quoteCurrency}\n                      feeAmount={feeAmount}\n                      ticksAtLimit={ticksAtLimit}\n                    />\n\n                    {outOfRange && (\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                        <RowBetween>\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                            <Trans>\n                              Your position will not earn fees or be used in trades until the market price moves into\n                              your range.\n                            </Trans>\n                          </ThemedText.DeprecatedYellow>\n                        </RowBetween>\n                      </YellowCard>\n                    )}\n\n                    {invalidRange && (\n                      <YellowCard padding=\"8px 12px\" $borderRadius=\"12px\">\n                        <RowBetween>\n                          <AlertTriangle stroke={theme.deprecated_yellow3} size=\"16px\" />\n                          <ThemedText.DeprecatedYellow ml=\"12px\" fontSize=\"12px\">\n                            <Trans>Invalid range selected. The min price must be lower than the max price.</Trans>\n                          </ThemedText.DeprecatedYellow>\n                        </RowBetween>\n                      </YellowCard>\n                    )}\n                  </DynamicSection>\n\n                  <DynamicSection gap=\"md\" disabled={!feeAmount || invalidPool}>\n                    {!noLiquidity ? (\n                      <>\n                        {Boolean(price && baseCurrency && quoteCurrency && !noLiquidity) && (\n                          <AutoColumn gap=\"2px\" style={{ marginTop: '0.5rem' }}>\n                            <Trans>\n                              <ThemedText.DeprecatedMain fontWeight={535} fontSize={12} color=\"text1\">\n                                Current price:\n                              </ThemedText.DeprecatedMain>\n                              <ThemedText.DeprecatedBody fontWeight={535} fontSize={20} color=\"text1\">\n                                {price && (\n                                  <HoverInlineText\n                                    maxCharacters={20}\n                                    text={invertPrice ? price.invert().toSignificant(6) : price.toSignificant(6)}\n                                  />\n                                )}\n                              </ThemedText.DeprecatedBody>\n                              {baseCurrency && (\n                                <ThemedText.DeprecatedBody color=\"text2\" fontSize={12}>\n                                  {quoteCurrency?.symbol} per {baseCurrency.symbol}\n                                </ThemedText.DeprecatedBody>\n                              )}\n                            </Trans>\n                          </AutoColumn>\n                        )}\n                      </>\n                    ) : (\n                      <AutoColumn gap=\"md\">\n                        {noLiquidity && (\n                          <BlueCard\n                            style={{\n                              display: 'flex',\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                              padding: '1rem 1rem',\n                            }}\n                          >\n                            <ThemedText.DeprecatedBody\n                              fontSize={14}\n                              style={{ fontWeight: 535 }}\n                              textAlign=\"left\"\n                              color={theme.accent1}\n                            >\n                              <Trans>\n                                This pool must be initialized before you can add liquidity. To initialize, select a\n                                starting price for the pool. Then, enter your liquidity price range and deposit amount.\n                                Gas fees will be higher than usual due to the initialization transaction.\n                              </Trans>\n                            </ThemedText.DeprecatedBody>\n                          </BlueCard>\n                        )}\n                        <OutlineCard padding=\"12px\">\n                          <StyledInput\n                            className=\"start-price-input\"\n                            value={startPriceTypedValue}\n                            onUserInput={onStartPriceInput}\n                          />\n                        </OutlineCard>\n                        <RowBetween\n                          style={{\n                            backgroundColor: theme.surface1,\n                            padding: '12px',\n                            borderRadius: '12px',\n                          }}\n                        >\n                          <ThemedText.DeprecatedMain>\n                            <Trans>Starting {baseCurrency?.symbol} Price:</Trans>\n                          </ThemedText.DeprecatedMain>\n                          <ThemedText.DeprecatedMain>\n                            {price ? (\n                              <ThemedText.DeprecatedMain>\n                                <RowFixed>\n                                  <HoverInlineText\n                                    maxCharacters={20}\n                                    text={invertPrice ? price?.invert()?.toSignificant(8) : price?.toSignificant(8)}\n                                  />{' '}\n                                  <span style={{ marginLeft: '4px' }}>\n                                    {quoteCurrency?.symbol} per {baseCurrency?.symbol}\n                                  </span>\n                                </RowFixed>\n                              </ThemedText.DeprecatedMain>\n                            ) : (\n                              '-'\n                            )}\n                          </ThemedText.DeprecatedMain>\n                        </RowBetween>\n                      </AutoColumn>\n                    )}\n                  </DynamicSection>\n                </>\n              )}\n              <div>\n                <DynamicSection disabled={invalidPool || invalidRange || (noLiquidity && !startPriceTypedValue)}>\n                  <AutoColumn gap=\"md\">\n                    <ThemedText.DeprecatedLabel>\n                      {hasExistingPosition ? <Trans>Add more liquidity</Trans> : <Trans>Deposit amounts</Trans>}\n                    </ThemedText.DeprecatedLabel>\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_A]}\n                      onUserInput={onFieldAInput}\n                      onMax={() => {\n                        onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n                      currency={currencies[Field.CURRENCY_A] ?? null}\n                      id=\"add-liquidity-input-tokena\"\n                      fiatValue={currencyAFiat}\n                      showCommonBases\n                      locked={depositADisabled}\n                    />\n\n                    <CurrencyInputPanel\n                      value={formattedAmounts[Field.CURRENCY_B]}\n                      onUserInput={onFieldBInput}\n                      onMax={() => {\n                        onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n                      }}\n                      showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n                      fiatValue={currencyBFiat}\n                      currency={currencies[Field.CURRENCY_B] ?? null}\n                      id=\"add-liquidity-input-tokenb\"\n                      showCommonBases\n                      locked={depositBDisabled}\n                    />\n                  </AutoColumn>\n                </DynamicSection>\n              </div>\n              <Buttons />\n            </ResponsiveTwoColumns>\n          </Wrapper>\n        </StyledBodyWrapper>\n        {showOwnershipWarning && <OwnershipWarning ownerAddress={owner} />}\n        {addIsUnsupported && (\n          <UnsupportedCurrencyFooter\n            show={addIsUnsupported}\n            currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n          />\n        )}\n      </ScrollablePage>\n      <SwitchLocaleLink />\n    </>\n  )\n}\n","import { Pool, Position } from '@uniswap/v3-sdk'\nimport { usePool } from 'hooks/usePools'\nimport { PositionDetails } from 'types/position'\n\nimport { useCurrency } from './Tokens'\n\nexport function useDerivedPositionInfo(positionDetails: PositionDetails | undefined): {\n  position?: Position\n  pool?: Pool\n} {\n  const currency0 = useCurrency(positionDetails?.token0)\n  const currency1 = useCurrency(positionDetails?.token1)\n\n  // construct pool data\n  const [, pool] = usePool(currency0 ?? undefined, currency1 ?? undefined, positionDetails?.fee)\n\n  let position = undefined\n  if (pool && positionDetails) {\n    position = new Position({\n      pool,\n      liquidity: positionDetails.liquidity.toString(),\n      tickLower: positionDetails.tickLower,\n      tickUpper: positionDetails.tickUpper,\n    })\n  }\n\n  return {\n    position,\n    pool: pool ?? undefined,\n  }\n}\n","import { useWeb3React } from '@web3-react/core'\n\nimport ArgentWalletContractABI from '../abis/argent-wallet-contract.json'\nimport { ArgentWalletContract } from '../abis/types'\nimport { useContract } from './useContract'\nimport useIsArgentWallet from './useIsArgentWallet'\n\nexport function useArgentWalletContract(): ArgentWalletContract | null {\n  const { account } = useWeb3React()\n  const isArgentWallet = useIsArgentWallet()\n  return useContract(\n    isArgentWallet ? account ?? undefined : undefined,\n    ArgentWalletContractABI,\n    true\n  ) as ArgentWalletContract\n}\n","import { Trans } from '@lingui/macro'\nimport { Currency } from '@vanadex/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { ButtonEmpty } from 'components/Button'\nimport Card, { OutlineCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport Modal from 'components/Modal'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport { useState } from 'react'\nimport styled from 'styled-components'\nimport { CloseIcon, ExternalLink, ThemedText } from 'theme/components'\nimport { Z_INDEX } from 'theme/zIndex'\n\nimport { useUnsupportedTokens } from '../../hooks/Tokens'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\n\nconst DetailsFooter = styled.div<{ show: boolean }>`\n  padding-top: calc(16px + 2rem);\n  padding-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: -2rem;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.neutral2};\n  background-color: ${({ theme }) => theme.surface2};\n  z-index: ${Z_INDEX.deprecated_zero};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n  text-align: center;\n`\n\nconst StyledButtonEmpty = styled(ButtonEmpty)`\n  text-decoration: none;\n`\n\nconst AddressText = styled(ThemedText.DeprecatedBlue)`\n  font-size: 12px;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 10px;\n`}\n`\n\nexport default function UnsupportedCurrencyFooter({\n  show,\n  currencies,\n}: {\n  show: boolean\n  currencies: (Currency | undefined | null)[]\n}) {\n  const { chainId } = useWeb3React()\n  const [showDetails, setShowDetails] = useState(false)\n\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return currency?.wrapped\n        })\n      : []\n\n  const unsupportedTokens = useUnsupportedTokens()\n\n  return (\n    <DetailsFooter show={show}>\n      <Modal isOpen={showDetails} onDismiss={() => setShowDetails(false)}>\n        <Card padding=\"2rem\">\n          <AutoColumn gap=\"lg\">\n            <RowBetween>\n              <ThemedText.DeprecatedMediumHeader>\n                <Trans>Unsupported assets</Trans>\n              </ThemedText.DeprecatedMediumHeader>\n              <CloseIcon onClick={() => setShowDetails(false)} data-testid=\"close-icon\" />\n            </RowBetween>\n            {tokens.map((token) => {\n              return (\n                token &&\n                unsupportedTokens &&\n                Object.keys(unsupportedTokens).includes(token.address) && (\n                  <OutlineCard key={token.address?.concat('not-supported')} data-testid=\"unsupported-token-card\">\n                    <AutoColumn gap=\"10px\">\n                      <AutoRow gap=\"5px\" align=\"center\">\n                        <CurrencyLogo currency={token} size=\"24px\" />\n                        <ThemedText.DeprecatedBody fontWeight={535}>{token.symbol}</ThemedText.DeprecatedBody>\n                      </AutoRow>\n                      {chainId && (\n                        <ExternalLink href={getExplorerLink(chainId, token.address, ExplorerDataType.ADDRESS)}>\n                          <AddressText>{token.address}</AddressText>\n                        </ExternalLink>\n                      )}\n                    </AutoColumn>\n                  </OutlineCard>\n                )\n              )\n            })}\n            <AutoColumn gap=\"lg\">\n              <ThemedText.DeprecatedBody fontWeight={535}>\n                <Trans>\n                  Some assets are not available through this interface because they may not work well with the smart\n                  contracts or we are unable to allow trading for legal reasons.\n                </Trans>\n              </ThemedText.DeprecatedBody>\n            </AutoColumn>\n          </AutoColumn>\n        </Card>\n      </Modal>\n      <StyledButtonEmpty padding=\"0\" onClick={() => setShowDetails(true)} data-testid=\"read-more-button\">\n        <ThemedText.DeprecatedBlue>\n          <Trans>Read more about unsupported assets</Trans>\n        </ThemedText.DeprecatedBlue>\n      </StyledButtonEmpty>\n    </DetailsFooter>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Percent } from '@vanadex/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport SettingsTab from 'components/Settings'\nimport { ReactNode } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport { useAppDispatch } from 'state/hooks'\nimport { resetMintState } from 'state/mint/actions'\nimport { resetMintState as resetMintV3State } from 'state/mint/v3/actions'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { flexRowNoWrap } from 'theme/styles'\n\nimport { RowBetween } from '../Row'\n\nconst Tabs = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  border-radius: 3rem;\n  justify-content: space-evenly;\n`\n\nconst StyledLink = styled(Link)<{ flex?: string }>`\n  flex: ${({ flex }) => flex ?? 'none'};\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    flex: none;\n    margin-right: 10px;\n  `};\n`\n\nconst FindPoolTabsText = styled(ThemedText.SubHeaderLarge)`\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`\n\nconst StyledArrowLeft = styled(ArrowLeft)`\n  color: ${({ theme }) => theme.neutral1};\n`\n\nexport function FindPoolTabs({ origin }: { origin: string }) {\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem', position: 'relative' }}>\n        <Link to={origin}>\n          <StyledArrowLeft />\n        </Link>\n        <FindPoolTabsText>\n          <Trans>Import V2 pool</Trans>\n        </FindPoolTabsText>\n      </RowBetween>\n    </Tabs>\n  )\n}\n\nconst AddRemoveTitleText = styled(ThemedText.SubHeaderLarge)`\n  flex: 1;\n  margin: auto;\n`\n\nexport function AddRemoveTabs({\n  adding,\n  creating,\n  autoSlippage,\n  positionID,\n  children,\n}: {\n  adding: boolean\n  creating: boolean\n  autoSlippage: Percent\n  positionID?: string\n  showBackLink?: boolean\n  children?: ReactNode\n}) {\n  const { chainId } = useWeb3React()\n  const theme = useTheme()\n  // reset states on back\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n\n  // detect if back should redirect to v3 or v2 pool page\n  const poolLink = location.pathname.includes('add/v2')\n    ? '/pools/v2'\n    : '/pools' + (positionID ? `/${positionID.toString()}` : '')\n\n  return (\n    <Tabs>\n      <RowBetween style={{ padding: '1rem 1rem 0 1rem' }} align=\"center\">\n        <StyledLink\n          to={poolLink}\n          onClick={() => {\n            if (adding) {\n              // not 100% sure both of these are needed\n              dispatch(resetMintState())\n              dispatch(resetMintV3State())\n            }\n          }}\n          flex={children ? '1' : undefined}\n        >\n          <StyledArrowLeft stroke={theme.neutral2} />\n        </StyledLink>\n        <AddRemoveTitleText textAlign={children ? 'start' : 'center'}>\n          {creating ? (\n            <Trans>Create a pair</Trans>\n          ) : adding ? (\n            <Trans>Add liquidity</Trans>\n          ) : (\n            <Trans>Remove liquidity</Trans>\n          )}\n        </AddRemoveTitleText>\n        {children && <Box style={{ marginRight: '.5rem' }}>{children}</Box>}\n        <SettingsTab autoSlippage={autoSlippage} chainId={chainId} />\n      </RowBetween>\n    </Tabs>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { Currency, CurrencyAmount } from '@vanadex/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { LoadingOpacityContainer, loadingOpacityMixin } from 'components/Loader/styled'\nimport { isSupportedChain } from 'constants/chains'\nimport { darken } from 'polished'\nimport { ReactNode, useCallback, useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport { ThemedText } from 'theme/components'\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\nimport { formatCurrencyAmount } from 'utils/formatCurrencyAmount'\n\nimport { ReactComponent as DropDown } from '../../assets/images/dropdown.svg'\nimport { useCurrencyBalance } from '../../state/connection/hooks'\nimport { ButtonGray } from '../Button'\nimport DoubleCurrencyLogo from '../DoubleLogo'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { Input as NumericalInput } from '../NumericalInput'\nimport { RowBetween, RowFixed } from '../Row'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { FiatValue } from './FiatValue'\n\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  ${flexColumnNoWrap};\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n  background-color: ${({ theme, hideInput }) => (hideInput ? 'transparent' : theme.surface2)};\n\n  z-index: 1;\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  transition: height 1s ease;\n  will-change: height;\n`\n\nconst Container = styled.div<{ hideInput: boolean; disabled: boolean }>`\n  border-radius: ${({ hideInput }) => (hideInput ? '16px' : '20px')};\n  border: 1px solid ${({ theme }) => theme.surface3};\n  background-color: ${({ theme }) => theme.surface2};\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  ${({ theme, hideInput, disabled }) =>\n    !disabled &&\n    `\n    :focus,\n    :hover {\n      border: 1px solid ${hideInput ? ' transparent' : theme.surface2};\n    }\n  `}\n`\n\nconst CurrencySelect = styled(ButtonGray)<{\n  visible: boolean\n  selected: boolean\n  hideInput?: boolean\n  disabled?: boolean\n  pointerEvents?: string\n}>`\n  align-items: center;\n  background-color: ${({ selected, theme }) => (selected ? theme.surface1 : theme.accent1)};\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\n  box-shadow: ${({ theme }) => theme.deprecated_shallowShadow};\n  color: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\n  cursor: pointer;\n  border-radius: 16px;\n  outline: none;\n  user-select: none;\n  border: none;\n  font-size: 24px;\n  font-weight: 535;\n  height: ${({ hideInput }) => (hideInput ? '2.8rem' : '2.4rem')};\n  width: ${({ hideInput }) => (hideInput ? '100%' : 'initial')};\n  padding: 0 8px;\n  justify-content: space-between;\n  margin-left: ${({ hideInput }) => (hideInput ? '0' : '12px')};\n  :focus,\n  :hover {\n    background-color: ${({ selected, theme }) => (selected ? theme.surface2 : darken(0.05, theme.accent1))};\n  }\n  visibility: ${({ visible }) => (visible ? 'visible' : 'hidden')};\n  ${({ pointerEvents }) => pointerEvents && `pointer-events: none`}\n`\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  ${flexRowNoWrap};\n  align-items: center;\n  justify-content: space-between;\n  padding: ${({ selected }) => (selected ? ' 1rem 1rem 0.75rem 1rem' : '1rem 1rem 1rem 1rem')};\n`\n\nconst LabelRow = styled.div`\n  ${flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.neutral1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0 1rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.neutral2)};\n  }\n`\n\nconst FiatRow = styled(LabelRow)`\n  justify-content: flex-end;\n  padding: 0px 1rem 0.75rem;\n  height: 32px;\n`\n\n// note the line height 0 ensures even if we change font/font-size it doesn't break centering\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  line-height: 0px;\n`\n\nconst StyledDropDown = styled(DropDown)<{ selected: boolean }>`\n  margin: 0 0.25rem 0 0.35rem;\n  height: 35%;\n\n  path {\n    stroke: ${({ selected, theme }) => (selected ? theme.neutral1 : theme.white)};\n    stroke-width: 1.5px;\n  }\n`\n\nconst StyledTokenName = styled.span<{ active?: boolean }>`\n  ${({ active }) => (active ? '  margin: 0 0.25rem 0 0.25rem;' : '  margin: 0 0.25rem 0 0.25rem;')}\n  font-size: 20px;\n`\n\nconst StyledBalanceMax = styled.button<{ disabled?: boolean }>`\n  background-color: transparent;\n  background-color: ${({ theme }) => theme.accent2};\n  border: none;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.accent1};\n  cursor: pointer;\n  font-size: 11px;\n  font-weight: 535;\n  margin-left: 0.25rem;\n  opacity: ${({ disabled }) => (!disabled ? 1 : 0.4)};\n  padding: 4px 6px;\n  pointer-events: ${({ disabled }) => (!disabled ? 'initial' : 'none')};\n\n  :hover {\n    opacity: ${({ disabled }) => (!disabled ? 0.8 : 0.4)};\n  }\n\n  :focus {\n    outline: none;\n  }\n`\n\nconst StyledNumericalInput = styled(NumericalInput)<{ $loading: boolean }>`\n  ${loadingOpacityMixin};\n  text-align: left;\n`\n\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: ReactNode\n  onCurrencySelect?: (currency: Currency) => void\n  currency?: Currency | null\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  fiatValue?: { data?: number; isLoading: boolean }\n  id: string\n  showCommonBases?: boolean\n  showCurrencyAmount?: boolean\n  disableNonToken?: boolean\n  renderBalance?: (amount: CurrencyAmount<Currency>) => ReactNode\n  locked?: boolean\n  loading?: boolean\n}\n\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  onCurrencySelect,\n  currency,\n  otherCurrency,\n  id,\n  showCommonBases,\n  showCurrencyAmount,\n  disableNonToken,\n  renderBalance,\n  fiatValue,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  locked = false,\n  loading = false,\n  ...rest\n}: CurrencyInputPanelProps) {\n  const [modalOpen, setModalOpen] = useState(false)\n  const { account, chainId } = useWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const theme = useTheme()\n\n  const handleDismissSearch = useCallback(() => {\n    setModalOpen(false)\n  }, [setModalOpen])\n\n  const chainAllowed = isSupportedChain(chainId)\n\n  return (\n    <InputPanel id={id} hideInput={hideInput} {...rest}>\n      {!locked && (\n        <>\n          <Container hideInput={hideInput} disabled={!chainAllowed}>\n            <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={!onCurrencySelect}>\n              {!hideInput && (\n                <StyledNumericalInput\n                  className=\"token-amount-input\"\n                  value={value}\n                  onUserInput={onUserInput}\n                  disabled={!chainAllowed}\n                  $loading={loading}\n                />\n              )}\n\n              <>\n                <CurrencySelect\n                  disabled={!chainAllowed}\n                  visible={currency !== undefined}\n                  selected={!!currency}\n                  hideInput={hideInput}\n                  className=\"open-currency-select-button\"\n                  onClick={() => {\n                    if (onCurrencySelect) {\n                      setModalOpen(true)\n                    }\n                  }}\n                  pointerEvents={!onCurrencySelect ? 'none' : undefined}\n                >\n                  <Aligner>\n                    <RowFixed>\n                      {pair ? (\n                        <span style={{ marginRight: '0.5rem' }}>\n                          <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={24} margin={true} />\n                        </span>\n                      ) : (\n                        currency && <CurrencyLogo style={{ marginRight: '0.5rem' }} currency={currency} size=\"24px\" />\n                      )}\n                      {pair ? (\n                        <StyledTokenName className=\"pair-name-container\">\n                          {pair?.token0.symbol}:{pair?.token1.symbol}\n                        </StyledTokenName>\n                      ) : (\n                        <StyledTokenName\n                          className=\"token-symbol-container\"\n                          active={Boolean(currency && currency.symbol)}\n                        >\n                          {(currency && currency.symbol && currency.symbol.length > 20\n                            ? currency.symbol.slice(0, 4) +\n                              '...' +\n                              currency.symbol.slice(currency.symbol.length - 5, currency.symbol.length)\n                            : currency?.symbol) || <Trans>Select a token</Trans>}\n                        </StyledTokenName>\n                      )}\n                    </RowFixed>\n                    {onCurrencySelect && <StyledDropDown selected={!!currency} />}\n                  </Aligner>\n                </CurrencySelect>\n              </>\n            </InputRow>\n            {Boolean(!hideInput && !hideBalance && currency) && (\n              <FiatRow>\n                <RowBetween>\n                  <LoadingOpacityContainer $loading={loading}>\n                    {fiatValue && <FiatValue fiatValue={fiatValue} />}\n                  </LoadingOpacityContainer>\n                  {account && (\n                    <RowFixed style={{ height: '17px' }}>\n                      <ThemedText.DeprecatedBody\n                        onClick={onMax}\n                        color={theme.neutral3}\n                        fontWeight={535}\n                        fontSize={14}\n                        style={{ display: 'inline', cursor: 'pointer' }}\n                      >\n                        {Boolean(!hideBalance && currency && selectedCurrencyBalance) &&\n                          (renderBalance?.(selectedCurrencyBalance as CurrencyAmount<Currency>) || (\n                            <Trans>Balance: {formatCurrencyAmount(selectedCurrencyBalance, 4)}</Trans>\n                          ))}\n                      </ThemedText.DeprecatedBody>\n                      {Boolean(showMaxButton && selectedCurrencyBalance) && (\n                        <StyledBalanceMax onClick={onMax}>\n                          <Trans>MAX</Trans>\n                        </StyledBalanceMax>\n                      )}\n                    </RowFixed>\n                  )}\n                </RowBetween>\n              </FiatRow>\n            )}\n          </Container>\n        </>\n      )}\n      {onCurrencySelect && (\n        <CurrencySearchModal\n          isOpen={modalOpen}\n          onDismiss={handleDismissSearch}\n          onCurrencySelect={onCurrencySelect}\n          selectedCurrency={currency}\n          otherSelectedCurrency={otherCurrency}\n          showCommonBases={showCommonBases}\n          showCurrencyAmount={showCurrencyAmount}\n          disableNonToken={disableNonToken}\n        />\n      )}\n    </InputPanel>\n  )\n}\n"],"names":["DataCard","styled","AutoColumn","CardBGImage","span","uImage","desaturate","CardNoise","noise","CardSection","disabled","Break","div","ExplainerText","theme","neutral2","TitleRow","deprecated_accentWarning","Wrapper","deprecated_accentWarningSoft","OwnershipWarning","ownerAddress","_jsxs","children","_jsx","AlertTriangle","style","marginRight","ThemedText","SubHeader","color","Trans","id","values","addressesAreEquivalent","a","b","toLowerCase","PositionPreview","position","title","inRange","baseCurrencyDefault","ticksAtLimit","_position$pool","useTheme","formatTickPrice","useFormatter","currency0","unwrappedToken","pool","token0","currency1","token1","baseCurrency","setBaseCurrency","useState","sorted","quoteCurrency","price","priceOf","priceLower","token0PriceLower","token0PriceUpper","invert","priceUpper","handleRateChange","useCallback","removed","liquidity","JSBI","gap","marginTop","RowBetween","marginBottom","RowFixed","DoubleCurrencyLogo","undefined","size","margin","DeprecatedLabel","ml","fontSize","symbol","RangeBadge","LightCard","CurrencyLogo","currency","mr","amount0","toSignificant","amount1","0","fee","DeprecatedMain","RateToggle","currencyA","currencyB","handleRateToggle","width","padding","justify","DeprecatedMediumHeader","textAlign","atLimit","direction","Bound","LOWER","1","DeprecatedSmall","neutral3","UPPER","Button","ButtonOutlined","attrs","$borderRadius","neutral1","PresetsButtons","onSetFullRange","AutoRow","onClick","DeprecatedBody","ERC20_INTERFACE","Interface","constant","inputs","name","type","outputs","payable","stateMutability","approveAmountCalldata","amount","spender","isToken","Error","approveData","encodeFunctionData","toHex","quotient","to","address","data","value","Review","outOfRange","DEFAULT_ADD_IN_RANGE_SLIPPAGE_TOLERANCE","Percent","StyledBodyWrapper","BodyWrapper","$hasExistingPosition","AddLiquidityWrapper","chainId","useWeb3React","isSupportedChain","AddLiquidity","PositionPageUnsupportedContent","_parsedAmounts$depend","_parsedAmounts$depend2","_parsedAmounts$Field$7","_currencies$Field$CUR","_parsedAmounts$Field$8","_currencies$Field$CUR2","_useSingleCallResult$","_currencies$Field$CUR7","_currencies$Field$CUR8","_price$invert","_currencies$Field$CUR9","_currencies$Field$CUR0","navigate","useNavigate","currencyIdA","currencyIdB","feeAmount","feeAmountFromUrl","tokenId","useParams","account","provider","toggleWalletDrawer","useToggleAccountDrawer","addTransaction","useTransactionAdder","positionManager","useV3NFTPositionManagerContract","existingPositionDetails","loading","positionLoading","useV3PositionFromTokenId","BigNumber","from","hasExistingPosition","existingPosition","positionDetails","useCurrency","usePool","Position","toString","tickLower","tickUpper","useDerivedPositionInfo","Object","FeeAmount","includes","parseFloat","wrapped","equals","independentField","typedValue","startPriceTypedValue","useV3MintState","ticks","dependentField","pricesAtTicks","pricesAtLimit","parsedAmounts","currencyBalances","noLiquidity","currencies","errorMessage","invalidPool","invalidRange","depositADisabled","depositBDisabled","invertPrice","useV3DerivedMintInfo","onFieldAInput","onFieldBInput","onLeftRangeInput","onRightRangeInput","onStartPriceInput","useV3MintActionHandlers","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","useTransactionDeadline","txHash","setTxHash","formattedAmounts","usdcValues","Field","CURRENCY_A","useStablecoinValue","CURRENCY_B","maxAmounts","reduce","accumulator","field","maxAmountSpend","atMaxAmounts","_maxAmounts$field","_parsedAmounts$field","equalTo","argentWalletContract","isArgentWallet","useIsArgentWallet","useContract","ArgentWalletContractABI","useArgentWalletContract","approvalA","approveACallback","useApproveCallback","NONFUNGIBLE_POSITION_MANAGER_ADDRESSES","approvalB","approveBCallback","allowedSlippage","useUserSlippageToleranceWithDefault","ZERO_PERCENT","async","onAdd","useNative","isNative","calldata","NonfungiblePositionManager","addCallParameters","slippageTolerance","recipient","createPool","txn","amountA","amountB","batch","interface","connectedChainId","getSigner","getChainId","WrongChainError","estimateGas","then","estimate","newTxn","gasLimit","calculateGasMargin","sendTransaction","response","_parsedAmounts$Field$","_parsedAmounts$Field$2","_parsedAmounts$Field$3","_parsedAmounts$Field$4","_parsedAmounts$Field$5","_parsedAmounts$Field$6","transactionInfo","TransactionType","ADD_LIQUIDITY_V3_POOL","baseCurrencyId","currencyId","quoteCurrencyId","Boolean","expectedAmountBaseRaw","expectedAmountQuoteRaw","hash","catch","error","console","code","handleCurrencySelect","currencyNew","currencyIdOther","currencyIdNew","_WRAPPED_NATIVE_CURRE","_WRAPPED_NATIVE_CURRE2","isETHOrWETHNew","WRAPPED_NATIVE_CURRENCY","isETHOrWETHOther","handleCurrencyASelect","currencyANew","idA","idB","handleCurrencyBSelect","currencyBNew","handleDismissConfirmation","addIsUnsupported","useIsSwapUnsupported","clearAll","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","getSetFullRange","useRangeHopCallbacks","showApprovalA","ApprovalState","APPROVED","showApprovalB","pendingText","searchParams","setSearchParams","useSearchParams","handleSetFullRange","minPrice","set","maxPrice","oldSearchParams","usePrevious","useEffect","get","oldMinPrice","isNaN","oldMaxPrice","Buttons","_currencies$Field$CUR3","_currencies$Field$CUR4","_currencies$Field$CUR5","_currencies$Field$CUR6","ButtonPrimary","mb","NOT_APPROVED","PENDING","Dots","ButtonError","Text","fontWeight","ButtonLight","usdcValueCurrencyA","usdcValueCurrencyB","currencyAFiat","useMemo","isLoading","currencyBFiat","owner","useSingleCallResult","result","ownsNFT","operator","showOwnershipWarning","_Fragment","ScrollablePage","TransactionConfirmationModal","isOpen","onDismiss","reviewContent","ConfirmationModalContent","topContent","bottomContent","AddRemoveTabs","creating","adding","positionID","autoSlippage","showBackLink","Row","justifyContent","minWidth","MediumOnly","ButtonText","DeprecatedBlue","ResponsiveTwoColumns","wide","paddingBottom","CurrencyInputPanel","onUserInput","hideInput","onMax","_maxAmounts$Field$CUR","_maxAmounts$Field$CUR2","toExact","onCurrencySelect","showMaxButton","showCommonBases","_maxAmounts$Field$CUR3","_maxAmounts$Field$CUR4","DynamicSection","_toSignificant","_ref","_toSignificant2","_ref2","_formattedAmounts$Fie","RangeSelector","YellowCard","stroke","deprecated_yellow3","DeprecatedYellow","BlueCard","display","flexDirection","alignItems","accent1","OutlineCard","StyledInput","className","backgroundColor","surface1","borderRadius","HoverInlineText","maxCharacters","text","marginLeft","components","_maxAmounts$Field$CUR5","_maxAmounts$Field$CUR6","fiatValue","locked","_maxAmounts$Field$CUR7","_maxAmounts$Field$CUR8","UnsupportedCurrencyFooter","show","SwitchLocaleLink","DetailsFooter","surface2","Z_INDEX","deprecated_zero","StyledButtonEmpty","ButtonEmpty","AddressText","deprecated_mediaWidth","deprecated_upToSmall","showDetails","setShowDetails","tokens","map","unsupportedTokens","useUnsupportedTokens","Modal","Card","CloseIcon","token","_token$address","keys","align","ExternalLink","href","getExplorerLink","ExplorerDataType","ADDRESS","concat","Tabs","flexRowNoWrap","StyledLink","Link","flex","deprecated_upToMedium","FindPoolTabsText","SubHeaderLarge","StyledArrowLeft","ArrowLeft","FindPoolTabs","origin","AddRemoveTitleText","dispatch","useAppDispatch","poolLink","useLocation","pathname","resetMintState","resetMintV3State","Box","SettingsTab","InputPanel","flexColumnNoWrap","Container","surface3","CurrencySelect","ButtonGray","selected","deprecated_shallowShadow","white","darken","visible","pointerEvents","InputRow","LabelRow","FiatRow","Aligner","StyledDropDown","DropDown","StyledTokenName","active","StyledBalanceMax","button","accent2","StyledNumericalInput","NumericalInput","loadingOpacityMixin","otherCurrency","showCurrencyAmount","disableNonToken","renderBalance","hideBalance","pair","rest","modalOpen","setModalOpen","selectedCurrencyBalance","useCurrencyBalance","handleDismissSearch","chainAllowed","$loading","length","slice","LoadingOpacityContainer","FiatValue","height","cursor","formatCurrencyAmount","CurrencySearchModal","selectedCurrency","otherSelectedCurrency"],"sourceRoot":""}