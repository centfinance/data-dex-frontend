{"version":3,"file":"static/js/2075.d3daa858.chunk.js","mappings":"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","sources":["../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/node_modules/@noble/hashes/esm/_assert.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/node_modules/@noble/hashes/esm/crypto.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/node_modules/@noble/hashes/esm/utils.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/node_modules/@noble/hashes/esm/_md.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/node_modules/@noble/hashes/esm/sha256.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/node_modules/@noble/hashes/esm/hmac.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/esm/abstract/utils.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/esm/abstract/modular.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/esm/abstract/curve.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/esm/abstract/weierstrass.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/esm/_shortw_utils.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/esm/abstract/hash-to-curve.js","../node_modules/@walletconnect/universal-provider/node_modules/@noble/curves/esm/secp256k1.js"],"sourcesContent":["function anumber(n){if(!Number.isSafeInteger(n)||n<0)throw new Error(\"positive integer expected, got \"+n)}function isBytes(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&\"Uint8Array\"===a.constructor.name}function abytes(b,...lengths){if(!isBytes(b))throw new Error(\"Uint8Array expected\");if(lengths.length>0&&!lengths.includes(b.length))throw new Error(\"Uint8Array expected of length \"+lengths+\", got length=\"+b.length)}function ahash(h){if(\"function\"!=typeof h||\"function\"!=typeof h.create)throw new Error(\"Hash should be wrapped by utils.wrapConstructor\");anumber(h.outputLen),anumber(h.blockLen)}function aexists(instance,checkFinished=!0){if(instance.destroyed)throw new Error(\"Hash instance has been destroyed\");if(checkFinished&&instance.finished)throw new Error(\"Hash#digest() has already been called\")}function aoutput(out,instance){abytes(out);const min=instance.outputLen;if(out.length<min)throw new Error(\"digestInto() expects output buffer of length at least \"+min)}export{anumber,abytes,ahash,aexists,aoutput};","export const crypto=\"object\"==typeof globalThis&&\"crypto\"in globalThis?globalThis.crypto:void 0;","import{crypto}from\"@noble/hashes/crypto\";import{abytes}from\"./_assert.js\";export function isBytes(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&\"Uint8Array\"===a.constructor.name}export function u8(arr){return new Uint8Array(arr.buffer,arr.byteOffset,arr.byteLength)}export function u32(arr){return new Uint32Array(arr.buffer,arr.byteOffset,Math.floor(arr.byteLength/4))}export function createView(arr){return new DataView(arr.buffer,arr.byteOffset,arr.byteLength)}export function rotr(word,shift){return word<<32-shift|word>>>shift}export function rotl(word,shift){return word<<shift|word>>>32-shift>>>0}export const isLE=(()=>68===new Uint8Array(new Uint32Array([287454020]).buffer)[0])();export function byteSwap(word){return word<<24&4278190080|word<<8&16711680|word>>>8&65280|word>>>24&255}export const byteSwapIfBE=isLE?n=>n:n=>byteSwap(n);export function byteSwap32(arr){for(let i=0;i<arr.length;i++)arr[i]=byteSwap(arr[i])}const hexes=Array.from({length:256},(_,i)=>i.toString(16).padStart(2,\"0\"));export function bytesToHex(bytes){abytes(bytes);let hex=\"\";for(let i=0;i<bytes.length;i++)hex+=hexes[bytes[i]];return hex}const asciis={_0:48,_9:57,A:65,F:70,a:97,f:102};function asciiToBase16(ch){return ch>=asciis._0&&ch<=asciis._9?ch-asciis._0:ch>=asciis.A&&ch<=asciis.F?ch-(asciis.A-10):ch>=asciis.a&&ch<=asciis.f?ch-(asciis.a-10):void 0}export function hexToBytes(hex){if(\"string\"!=typeof hex)throw new Error(\"hex string expected, got \"+typeof hex);const hl=hex.length,al=hl/2;if(hl%2)throw new Error(\"hex string expected, got unpadded hex of length \"+hl);const array=new Uint8Array(al);for(let ai=0,hi=0;ai<al;ai++,hi+=2){const n1=asciiToBase16(hex.charCodeAt(hi)),n2=asciiToBase16(hex.charCodeAt(hi+1));if(void 0===n1||void 0===n2){const char=hex[hi]+hex[hi+1];throw new Error('hex string expected, got non-hex character \"'+char+'\" at index '+hi)}array[ai]=16*n1+n2}return array}export const nextTick=async()=>{};export async function asyncLoop(iters,tick,cb){let ts=Date.now();for(let i=0;i<iters;i++){cb(i);const diff=Date.now()-ts;diff>=0&&diff<tick||(await nextTick(),ts+=diff)}}export function utf8ToBytes(str){if(\"string\"!=typeof str)throw new Error(\"utf8ToBytes expected string, got \"+typeof str);return new Uint8Array((new TextEncoder).encode(str))}export function toBytes(data){return\"string\"==typeof data&&(data=utf8ToBytes(data)),abytes(data),data}export function concatBytes(...arrays){let sum=0;for(let i=0;i<arrays.length;i++){const a=arrays[i];abytes(a),sum+=a.length}const res=new Uint8Array(sum);for(let i=0,pad=0;i<arrays.length;i++){const a=arrays[i];res.set(a,pad),pad+=a.length}return res}export class Hash{clone(){return this._cloneInto()}}export function checkOpts(defaults,opts){if(void 0!==opts&&\"[object Object]\"!=={}.toString.call(opts))throw new Error(\"Options should be object or undefined\");return Object.assign(defaults,opts)}export function wrapConstructor(hashCons){const hashC=msg=>hashCons().update(toBytes(msg)).digest(),tmp=hashCons();return hashC.outputLen=tmp.outputLen,hashC.blockLen=tmp.blockLen,hashC.create=()=>hashCons(),hashC}export function wrapConstructorWithOpts(hashCons){const hashC=(msg,opts)=>hashCons(opts).update(toBytes(msg)).digest(),tmp=hashCons({});return hashC.outputLen=tmp.outputLen,hashC.blockLen=tmp.blockLen,hashC.create=opts=>hashCons(opts),hashC}export function wrapXOFConstructorWithOpts(hashCons){const hashC=(msg,opts)=>hashCons(opts).update(toBytes(msg)).digest(),tmp=hashCons({});return hashC.outputLen=tmp.outputLen,hashC.blockLen=tmp.blockLen,hashC.create=opts=>hashCons(opts),hashC}export function randomBytes(bytesLength=32){if(crypto&&\"function\"==typeof crypto.getRandomValues)return crypto.getRandomValues(new Uint8Array(bytesLength));if(crypto&&\"function\"==typeof crypto.randomBytes)return crypto.randomBytes(bytesLength);throw new Error(\"crypto.getRandomValues must be defined\")}","import{aexists,aoutput}from\"./_assert.js\";import{Hash,createView,toBytes}from\"./utils.js\";export function setBigUint64(view,byteOffset,value,isLE){if(\"function\"==typeof view.setBigUint64)return view.setBigUint64(byteOffset,value,isLE);const _32n=BigInt(32),_u32_max=BigInt(4294967295),wh=Number(value>>_32n&_u32_max),wl=Number(value&_u32_max),h=isLE?4:0,l=isLE?0:4;view.setUint32(byteOffset+h,wh,isLE),view.setUint32(byteOffset+l,wl,isLE)}export function Chi(a,b,c){return a&b^~a&c}export function Maj(a,b,c){return a&b^a&c^b&c}export class HashMD extends Hash{constructor(blockLen,outputLen,padOffset,isLE){super(),this.blockLen=blockLen,this.outputLen=outputLen,this.padOffset=padOffset,this.isLE=isLE,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(blockLen),this.view=createView(this.buffer)}update(data){aexists(this);const{view:view,buffer:buffer,blockLen:blockLen}=this,len=(data=toBytes(data)).length;for(let pos=0;pos<len;){const take=Math.min(blockLen-this.pos,len-pos);if(take===blockLen){const dataView=createView(data);for(;blockLen<=len-pos;pos+=blockLen)this.process(dataView,pos);continue}buffer.set(data.subarray(pos,pos+take),this.pos),this.pos+=take,pos+=take,this.pos===blockLen&&(this.process(view,0),this.pos=0)}return this.length+=data.length,this.roundClean(),this}digestInto(out){aexists(this),aoutput(out,this),this.finished=!0;const{buffer:buffer,view:view,blockLen:blockLen,isLE:isLE}=this;let{pos:pos}=this;buffer[pos++]=128,this.buffer.subarray(pos).fill(0),this.padOffset>blockLen-pos&&(this.process(view,0),pos=0);for(let i=pos;i<blockLen;i++)buffer[i]=0;setBigUint64(view,blockLen-8,BigInt(8*this.length),isLE),this.process(view,0);const oview=createView(out),len=this.outputLen;if(len%4)throw new Error(\"_sha2: outputLen should be aligned to 32bit\");const outLen=len/4,state=this.get();if(outLen>state.length)throw new Error(\"_sha2: outputLen bigger than state\");for(let i=0;i<outLen;i++)oview.setUint32(4*i,state[i],isLE)}digest(){const{buffer:buffer,outputLen:outputLen}=this;this.digestInto(buffer);const res=buffer.slice(0,outputLen);return this.destroy(),res}_cloneInto(to){to||(to=new this.constructor),to.set(...this.get());const{blockLen:blockLen,buffer:buffer,length:length,finished:finished,destroyed:destroyed,pos:pos}=this;return to.length=length,to.pos=pos,to.finished=finished,to.destroyed=destroyed,length%blockLen&&to.buffer.set(buffer),to}}","import{Chi,HashMD,Maj}from\"./_md.js\";import{rotr,wrapConstructor}from\"./utils.js\";const SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),SHA256_IV=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);export class SHA256 extends HashMD{constructor(){super(64,32,8,!1),this.A=0|SHA256_IV[0],this.B=0|SHA256_IV[1],this.C=0|SHA256_IV[2],this.D=0|SHA256_IV[3],this.E=0|SHA256_IV[4],this.F=0|SHA256_IV[5],this.G=0|SHA256_IV[6],this.H=0|SHA256_IV[7]}get(){const{A:A,B:B,C:C,D:D,E:E,F:F,G:G,H:H}=this;return[A,B,C,D,E,F,G,H]}set(A,B,C,D,E,F,G,H){this.A=0|A,this.B=0|B,this.C=0|C,this.D=0|D,this.E=0|E,this.F=0|F,this.G=0|G,this.H=0|H}process(view,offset){for(let i=0;i<16;i++,offset+=4)SHA256_W[i]=view.getUint32(offset,!1);for(let i=16;i<64;i++){const W15=SHA256_W[i-15],W2=SHA256_W[i-2],s0=rotr(W15,7)^rotr(W15,18)^W15>>>3,s1=rotr(W2,17)^rotr(W2,19)^W2>>>10;SHA256_W[i]=s1+SHA256_W[i-7]+s0+SHA256_W[i-16]|0}let{A:A,B:B,C:C,D:D,E:E,F:F,G:G,H:H}=this;for(let i=0;i<64;i++){const T1=H+(rotr(E,6)^rotr(E,11)^rotr(E,25))+Chi(E,F,G)+SHA256_K[i]+SHA256_W[i]|0,T2=(rotr(A,2)^rotr(A,13)^rotr(A,22))+Maj(A,B,C)|0;H=G,G=F,F=E,E=D+T1|0,D=C,C=B,B=A,A=T1+T2|0}A=A+this.A|0,B=B+this.B|0,C=C+this.C|0,D=D+this.D|0,E=E+this.E|0,F=F+this.F|0,G=G+this.G|0,H=H+this.H|0,this.set(A,B,C,D,E,F,G,H)}roundClean(){SHA256_W.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}class SHA224 extends SHA256{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}}export const sha256=wrapConstructor(()=>new SHA256);export const sha224=wrapConstructor(()=>new SHA224);","import{abytes,aexists,ahash}from\"./_assert.js\";import{Hash,toBytes}from\"./utils.js\";export class HMAC extends Hash{constructor(hash,_key){super(),this.finished=!1,this.destroyed=!1,ahash(hash);const key=toBytes(_key);if(this.iHash=hash.create(),\"function\"!=typeof this.iHash.update)throw new Error(\"Expected instance of class which extends utils.Hash\");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const blockLen=this.blockLen,pad=new Uint8Array(blockLen);pad.set(key.length>blockLen?hash.create().update(key).digest():key);for(let i=0;i<pad.length;i++)pad[i]^=54;this.iHash.update(pad),this.oHash=hash.create();for(let i=0;i<pad.length;i++)pad[i]^=106;this.oHash.update(pad),pad.fill(0)}update(buf){return aexists(this),this.iHash.update(buf),this}digestInto(out){aexists(this),abytes(out,this.outputLen),this.finished=!0,this.iHash.digestInto(out),this.oHash.update(out),this.oHash.digestInto(out),this.destroy()}digest(){const out=new Uint8Array(this.oHash.outputLen);return this.digestInto(out),out}_cloneInto(to){to||(to=Object.create(Object.getPrototypeOf(this),{}));const{oHash:oHash,iHash:iHash,finished:finished,destroyed:destroyed,blockLen:blockLen,outputLen:outputLen}=this;return to.finished=finished,to.destroyed=destroyed,to.blockLen=blockLen,to.outputLen=outputLen,to.oHash=oHash._cloneInto(to.oHash),to.iHash=iHash._cloneInto(to.iHash),to}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}export const hmac=(hash,key,message)=>new HMAC(hash,key).update(message).digest();hmac.create=(hash,key)=>new HMAC(hash,key);","const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2);export function isBytes(a){return a instanceof Uint8Array||ArrayBuffer.isView(a)&&\"Uint8Array\"===a.constructor.name}export function abytes(item){if(!isBytes(item))throw new Error(\"Uint8Array expected\")}export function abool(title,value){if(\"boolean\"!=typeof value)throw new Error(title+\" boolean expected, got \"+value)}const hexes=Array.from({length:256},(_,i)=>i.toString(16).padStart(2,\"0\"));export function bytesToHex(bytes){abytes(bytes);let hex=\"\";for(let i=0;i<bytes.length;i++)hex+=hexes[bytes[i]];return hex}export function numberToHexUnpadded(num){const hex=num.toString(16);return 1&hex.length?\"0\"+hex:hex}export function hexToNumber(hex){if(\"string\"!=typeof hex)throw new Error(\"hex string expected, got \"+typeof hex);return\"\"===hex?_0n:BigInt(\"0x\"+hex)}const asciis={_0:48,_9:57,A:65,F:70,a:97,f:102};function asciiToBase16(ch){return ch>=asciis._0&&ch<=asciis._9?ch-asciis._0:ch>=asciis.A&&ch<=asciis.F?ch-(asciis.A-10):ch>=asciis.a&&ch<=asciis.f?ch-(asciis.a-10):void 0}export function hexToBytes(hex){if(\"string\"!=typeof hex)throw new Error(\"hex string expected, got \"+typeof hex);const hl=hex.length,al=hl/2;if(hl%2)throw new Error(\"hex string expected, got unpadded hex of length \"+hl);const array=new Uint8Array(al);for(let ai=0,hi=0;ai<al;ai++,hi+=2){const n1=asciiToBase16(hex.charCodeAt(hi)),n2=asciiToBase16(hex.charCodeAt(hi+1));if(void 0===n1||void 0===n2){const char=hex[hi]+hex[hi+1];throw new Error('hex string expected, got non-hex character \"'+char+'\" at index '+hi)}array[ai]=16*n1+n2}return array}export function bytesToNumberBE(bytes){return hexToNumber(bytesToHex(bytes))}export function bytesToNumberLE(bytes){return abytes(bytes),hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()))}export function numberToBytesBE(n,len){return hexToBytes(n.toString(16).padStart(2*len,\"0\"))}export function numberToBytesLE(n,len){return numberToBytesBE(n,len).reverse()}export function numberToVarBytesBE(n){return hexToBytes(numberToHexUnpadded(n))}export function ensureBytes(title,hex,expectedLength){let res;if(\"string\"==typeof hex)try{res=hexToBytes(hex)}catch(e){throw new Error(title+\" must be hex string or Uint8Array, cause: \"+e)}else{if(!isBytes(hex))throw new Error(title+\" must be hex string or Uint8Array\");res=Uint8Array.from(hex)}const len=res.length;if(\"number\"==typeof expectedLength&&len!==expectedLength)throw new Error(title+\" of length \"+expectedLength+\" expected, got \"+len);return res}export function concatBytes(...arrays){let sum=0;for(let i=0;i<arrays.length;i++){const a=arrays[i];abytes(a),sum+=a.length}const res=new Uint8Array(sum);for(let i=0,pad=0;i<arrays.length;i++){const a=arrays[i];res.set(a,pad),pad+=a.length}return res}export function equalBytes(a,b){if(a.length!==b.length)return!1;let diff=0;for(let i=0;i<a.length;i++)diff|=a[i]^b[i];return 0===diff}export function utf8ToBytes(str){if(\"string\"!=typeof str)throw new Error(\"string expected\");return new Uint8Array((new TextEncoder).encode(str))}const isPosBig=n=>\"bigint\"==typeof n&&_0n<=n;export function inRange(n,min,max){return isPosBig(n)&&isPosBig(min)&&isPosBig(max)&&min<=n&&n<max}export function aInRange(title,n,min,max){if(!inRange(n,min,max))throw new Error(\"expected valid \"+title+\": \"+min+\" <= n < \"+max+\", got \"+n)}export function bitLen(n){let len;for(len=0;n>_0n;n>>=_1n,len+=1);return len}export function bitGet(n,pos){return n>>BigInt(pos)&_1n}export function bitSet(n,pos,value){return n|(value?_1n:_0n)<<BigInt(pos)}export const bitMask=n=>(_2n<<BigInt(n-1))-_1n;const u8n=data=>new Uint8Array(data),u8fr=arr=>Uint8Array.from(arr);export function createHmacDrbg(hashLen,qByteLen,hmacFn){if(\"number\"!=typeof hashLen||hashLen<2)throw new Error(\"hashLen must be a number\");if(\"number\"!=typeof qByteLen||qByteLen<2)throw new Error(\"qByteLen must be a number\");if(\"function\"!=typeof hmacFn)throw new Error(\"hmacFn must be a function\");let v=u8n(hashLen),k=u8n(hashLen),i=0;const reset=()=>{v.fill(1),k.fill(0),i=0},h=(...b)=>hmacFn(k,v,...b),reseed=(seed=u8n())=>{k=h(u8fr([0]),seed),v=h(),0!==seed.length&&(k=h(u8fr([1]),seed),v=h())},gen=()=>{if(i++>=1e3)throw new Error(\"drbg: tried 1000 values\");let len=0;const out=[];for(;len<qByteLen;){v=h();const sl=v.slice();out.push(sl),len+=v.length}return concatBytes(...out)};return(seed,pred)=>{let res;for(reset(),reseed(seed);!(res=pred(gen()));)reseed();return reset(),res}}const validatorFns={bigint:val=>\"bigint\"==typeof val,function:val=>\"function\"==typeof val,boolean:val=>\"boolean\"==typeof val,string:val=>\"string\"==typeof val,stringOrUint8Array:val=>\"string\"==typeof val||isBytes(val),isSafeInteger:val=>Number.isSafeInteger(val),array:val=>Array.isArray(val),field:(val,object)=>object.Fp.isValid(val),hash:val=>\"function\"==typeof val&&Number.isSafeInteger(val.outputLen)};export function validateObject(object,validators,optValidators={}){const checkField=(fieldName,type,isOptional)=>{const checkVal=validatorFns[type];if(\"function\"!=typeof checkVal)throw new Error(\"invalid validator function\");const val=object[fieldName];if(!(isOptional&&void 0===val||checkVal(val,object)))throw new Error(\"param \"+String(fieldName)+\" is invalid. Expected \"+type+\", got \"+val)};for(const[fieldName,type]of Object.entries(validators))checkField(fieldName,type,!1);for(const[fieldName,type]of Object.entries(optValidators))checkField(fieldName,type,!0);return object}export const notImplemented=()=>{throw new Error(\"not implemented\")};export function memoized(fn){const map=new WeakMap;return(arg,...args)=>{const val=map.get(arg);if(void 0!==val)return val;const computed=fn(arg,...args);return map.set(arg,computed),computed}}","import{bitMask,bytesToNumberBE,bytesToNumberLE,ensureBytes,numberToBytesBE,numberToBytesLE,validateObject}from\"./utils.js\";const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_3n=BigInt(3),_4n=BigInt(4),_5n=BigInt(5),_8n=BigInt(8),_9n=BigInt(9),_16n=BigInt(16);export function mod(a,b){const result=a%b;return result>=_0n?result:b+result}export function pow(num,power,modulo){if(power<_0n)throw new Error(\"invalid exponent, negatives unsupported\");if(modulo<=_0n)throw new Error(\"invalid modulus\");if(modulo===_1n)return _0n;let res=_1n;for(;power>_0n;)power&_1n&&(res=res*num%modulo),num=num*num%modulo,power>>=_1n;return res}export function pow2(x,power,modulo){let res=x;for(;power-- >_0n;)res*=res,res%=modulo;return res}export function invert(number,modulo){if(number===_0n)throw new Error(\"invert: expected non-zero number\");if(modulo<=_0n)throw new Error(\"invert: expected positive modulus, got \"+modulo);let a=mod(number,modulo),b=modulo,x=_0n,y=_1n,u=_1n,v=_0n;for(;a!==_0n;){const q=b/a,r=b%a,m=x-u*q,n=y-v*q;b=a,a=r,x=u,y=v,u=m,v=n}if(b!==_1n)throw new Error(\"invert: does not exist\");return mod(x,modulo)}export function tonelliShanks(P){const legendreC=(P-_1n)/_2n;let Q,S,Z;for(Q=P-_1n,S=0;Q%_2n===_0n;Q/=_2n,S++);for(Z=_2n;Z<P&&pow(Z,legendreC,P)!==P-_1n;Z++)if(Z>1e3)throw new Error(\"Cannot find square root: likely non-prime P\");if(1===S){const p1div4=(P+_1n)/_4n;return function(Fp,n){const root=Fp.pow(n,p1div4);if(!Fp.eql(Fp.sqr(root),n))throw new Error(\"Cannot find square root\");return root}}const Q1div2=(Q+_1n)/_2n;return function(Fp,n){if(Fp.pow(n,legendreC)===Fp.neg(Fp.ONE))throw new Error(\"Cannot find square root\");let r=S,g=Fp.pow(Fp.mul(Fp.ONE,Z),Q),x=Fp.pow(n,Q1div2),b=Fp.pow(n,Q);for(;!Fp.eql(b,Fp.ONE);){if(Fp.eql(b,Fp.ZERO))return Fp.ZERO;let m=1;for(let t2=Fp.sqr(b);m<r&&!Fp.eql(t2,Fp.ONE);m++)t2=Fp.sqr(t2);const ge=Fp.pow(g,_1n<<BigInt(r-m-1));g=Fp.sqr(ge),x=Fp.mul(x,ge),b=Fp.mul(b,g),r=m}return x}}export function FpSqrt(P){if(P%_4n===_3n){const p1div4=(P+_1n)/_4n;return function(Fp,n){const root=Fp.pow(n,p1div4);if(!Fp.eql(Fp.sqr(root),n))throw new Error(\"Cannot find square root\");return root}}if(P%_8n===_5n){const c1=(P-_5n)/_8n;return function(Fp,n){const n2=Fp.mul(n,_2n),v=Fp.pow(n2,c1),nv=Fp.mul(n,v),i=Fp.mul(Fp.mul(nv,_2n),v),root=Fp.mul(nv,Fp.sub(i,Fp.ONE));if(!Fp.eql(Fp.sqr(root),n))throw new Error(\"Cannot find square root\");return root}}return tonelliShanks(P)}export const isNegativeLE=(num,modulo)=>(mod(num,modulo)&_1n)===_1n;const FIELD_FIELDS=[\"create\",\"isValid\",\"is0\",\"neg\",\"inv\",\"sqrt\",\"sqr\",\"eql\",\"add\",\"sub\",\"mul\",\"pow\",\"div\",\"addN\",\"subN\",\"mulN\",\"sqrN\"];export function validateField(field){const opts=FIELD_FIELDS.reduce((map,val)=>(map[val]=\"function\",map),{ORDER:\"bigint\",MASK:\"bigint\",BYTES:\"isSafeInteger\",BITS:\"isSafeInteger\"});return validateObject(field,opts)}export function FpPow(f,num,power){if(power<_0n)throw new Error(\"invalid exponent, negatives unsupported\");if(power===_0n)return f.ONE;if(power===_1n)return num;let p=f.ONE,d=num;for(;power>_0n;)power&_1n&&(p=f.mul(p,d)),d=f.sqr(d),power>>=_1n;return p}export function FpInvertBatch(f,nums){const tmp=new Array(nums.length),lastMultiplied=nums.reduce((acc,num,i)=>f.is0(num)?acc:(tmp[i]=acc,f.mul(acc,num)),f.ONE),inverted=f.inv(lastMultiplied);return nums.reduceRight((acc,num,i)=>f.is0(num)?acc:(tmp[i]=f.mul(acc,tmp[i]),f.mul(acc,num)),inverted),tmp}export function FpDiv(f,lhs,rhs){return f.mul(lhs,\"bigint\"==typeof rhs?invert(rhs,f.ORDER):f.inv(rhs))}export function FpLegendre(order){const legendreConst=(order-_1n)/_2n;return(f,x)=>f.pow(x,legendreConst)}export function FpIsSquare(f){const legendre=FpLegendre(f.ORDER);return x=>{const p=legendre(f,x);return f.eql(p,f.ZERO)||f.eql(p,f.ONE)}}export function nLength(n,nBitLength){const _nBitLength=void 0!==nBitLength?nBitLength:n.toString(2).length;return{nBitLength:_nBitLength,nByteLength:Math.ceil(_nBitLength/8)}}export function Field(ORDER,bitLen,isLE=!1,redef={}){if(ORDER<=_0n)throw new Error(\"invalid field: expected ORDER > 0, got \"+ORDER);const{nBitLength:BITS,nByteLength:BYTES}=nLength(ORDER,bitLen);if(BYTES>2048)throw new Error(\"invalid field: expected ORDER of <= 2048 bytes\");let sqrtP;const f=Object.freeze({ORDER:ORDER,isLE:isLE,BITS:BITS,BYTES:BYTES,MASK:bitMask(BITS),ZERO:_0n,ONE:_1n,create:num=>mod(num,ORDER),isValid:num=>{if(\"bigint\"!=typeof num)throw new Error(\"invalid field element: expected bigint, got \"+typeof num);return _0n<=num&&num<ORDER},is0:num=>num===_0n,isOdd:num=>(num&_1n)===_1n,neg:num=>mod(-num,ORDER),eql:(lhs,rhs)=>lhs===rhs,sqr:num=>mod(num*num,ORDER),add:(lhs,rhs)=>mod(lhs+rhs,ORDER),sub:(lhs,rhs)=>mod(lhs-rhs,ORDER),mul:(lhs,rhs)=>mod(lhs*rhs,ORDER),pow:(num,power)=>FpPow(f,num,power),div:(lhs,rhs)=>mod(lhs*invert(rhs,ORDER),ORDER),sqrN:num=>num*num,addN:(lhs,rhs)=>lhs+rhs,subN:(lhs,rhs)=>lhs-rhs,mulN:(lhs,rhs)=>lhs*rhs,inv:num=>invert(num,ORDER),sqrt:redef.sqrt||(n=>(sqrtP||(sqrtP=FpSqrt(ORDER)),sqrtP(f,n))),invertBatch:lst=>FpInvertBatch(f,lst),cmov:(a,b,c)=>c?b:a,toBytes:num=>isLE?numberToBytesLE(num,BYTES):numberToBytesBE(num,BYTES),fromBytes:bytes=>{if(bytes.length!==BYTES)throw new Error(\"Field.fromBytes: expected \"+BYTES+\" bytes, got \"+bytes.length);return isLE?bytesToNumberLE(bytes):bytesToNumberBE(bytes)}});return Object.freeze(f)}export function FpSqrtOdd(Fp,elm){if(!Fp.isOdd)throw new Error(\"Field doesn't have isOdd\");const root=Fp.sqrt(elm);return Fp.isOdd(root)?root:Fp.neg(root)}export function FpSqrtEven(Fp,elm){if(!Fp.isOdd)throw new Error(\"Field doesn't have isOdd\");const root=Fp.sqrt(elm);return Fp.isOdd(root)?Fp.neg(root):root}export function hashToPrivateScalar(hash,groupOrder,isLE=!1){const hashLen=(hash=ensureBytes(\"privateHash\",hash)).length,minLen=nLength(groupOrder).nByteLength+8;if(minLen<24||hashLen<minLen||hashLen>1024)throw new Error(\"hashToPrivateScalar: expected \"+minLen+\"-1024 bytes of input, got \"+hashLen);return mod(isLE?bytesToNumberLE(hash):bytesToNumberBE(hash),groupOrder-_1n)+_1n}export function getFieldBytesLength(fieldOrder){if(\"bigint\"!=typeof fieldOrder)throw new Error(\"field order must be bigint\");const bitLength=fieldOrder.toString(2).length;return Math.ceil(bitLength/8)}export function getMinHashLength(fieldOrder){const length=getFieldBytesLength(fieldOrder);return length+Math.ceil(length/2)}export function mapHashToField(key,fieldOrder,isLE=!1){const len=key.length,fieldLen=getFieldBytesLength(fieldOrder),minLen=getMinHashLength(fieldOrder);if(len<16||len<minLen||len>1024)throw new Error(\"expected \"+minLen+\"-1024 bytes of input, got \"+len);const reduced=mod(isLE?bytesToNumberLE(key):bytesToNumberBE(key),fieldOrder-_1n)+_1n;return isLE?numberToBytesLE(reduced,fieldLen):numberToBytesBE(reduced,fieldLen)}","import{nLength,validateField}from\"./modular.js\";import{bitLen,validateObject}from\"./utils.js\";const _0n=BigInt(0),_1n=BigInt(1);function constTimeNegate(condition,item){const neg=item.negate();return condition?neg:item}function validateW(W,bits){if(!Number.isSafeInteger(W)||W<=0||W>bits)throw new Error(\"invalid window size, expected [1..\"+bits+\"], got W=\"+W)}function calcWOpts(W,bits){validateW(W,bits);return{windows:Math.ceil(bits/W)+1,windowSize:2**(W-1)}}function validateMSMPoints(points,c){if(!Array.isArray(points))throw new Error(\"array expected\");points.forEach((p,i)=>{if(!(p instanceof c))throw new Error(\"invalid point at index \"+i)})}function validateMSMScalars(scalars,field){if(!Array.isArray(scalars))throw new Error(\"array of scalars expected\");scalars.forEach((s,i)=>{if(!field.isValid(s))throw new Error(\"invalid scalar at index \"+i)})}const pointPrecomputes=new WeakMap,pointWindowSizes=new WeakMap;function getW(P){return pointWindowSizes.get(P)||1}export function wNAF(c,bits){return{constTimeNegate:constTimeNegate,hasPrecomputes:elm=>1!==getW(elm),unsafeLadder(elm,n,p=c.ZERO){let d=elm;for(;n>_0n;)n&_1n&&(p=p.add(d)),d=d.double(),n>>=_1n;return p},precomputeWindow(elm,W){const{windows:windows,windowSize:windowSize}=calcWOpts(W,bits),points=[];let p=elm,base=p;for(let window=0;window<windows;window++){base=p,points.push(base);for(let i=1;i<windowSize;i++)base=base.add(p),points.push(base);p=base.double()}return points},wNAF(W,precomputes,n){const{windows:windows,windowSize:windowSize}=calcWOpts(W,bits);let p=c.ZERO,f=c.BASE;const mask=BigInt(2**W-1),maxNumber=2**W,shiftBy=BigInt(W);for(let window=0;window<windows;window++){const offset=window*windowSize;let wbits=Number(n&mask);n>>=shiftBy,wbits>windowSize&&(wbits-=maxNumber,n+=_1n);const offset1=offset,offset2=offset+Math.abs(wbits)-1,cond1=window%2!=0,cond2=wbits<0;0===wbits?f=f.add(constTimeNegate(cond1,precomputes[offset1])):p=p.add(constTimeNegate(cond2,precomputes[offset2]))}return{p:p,f:f}},wNAFUnsafe(W,precomputes,n,acc=c.ZERO){const{windows:windows,windowSize:windowSize}=calcWOpts(W,bits),mask=BigInt(2**W-1),maxNumber=2**W,shiftBy=BigInt(W);for(let window=0;window<windows;window++){const offset=window*windowSize;if(n===_0n)break;let wbits=Number(n&mask);if(n>>=shiftBy,wbits>windowSize&&(wbits-=maxNumber,n+=_1n),0===wbits)continue;let curr=precomputes[offset+Math.abs(wbits)-1];wbits<0&&(curr=curr.negate()),acc=acc.add(curr)}return acc},getPrecomputes(W,P,transform){let comp=pointPrecomputes.get(P);return comp||(comp=this.precomputeWindow(P,W),1!==W&&pointPrecomputes.set(P,transform(comp))),comp},wNAFCached(P,n,transform){const W=getW(P);return this.wNAF(W,this.getPrecomputes(W,P,transform),n)},wNAFCachedUnsafe(P,n,transform,prev){const W=getW(P);return 1===W?this.unsafeLadder(P,n,prev):this.wNAFUnsafe(W,this.getPrecomputes(W,P,transform),n,prev)},setWindowSize(P,W){validateW(W,bits),pointWindowSizes.set(P,W),pointPrecomputes.delete(P)}}}export function pippenger(c,fieldN,points,scalars){if(validateMSMPoints(points,c),validateMSMScalars(scalars,fieldN),points.length!==scalars.length)throw new Error(\"arrays of points and scalars must have equal length\");const zero=c.ZERO,wbits=bitLen(BigInt(points.length)),windowSize=wbits>12?wbits-3:wbits>4?wbits-2:wbits?2:1,MASK=(1<<windowSize)-1,buckets=new Array(MASK+1).fill(zero);let sum=zero;for(let i=Math.floor((fieldN.BITS-1)/windowSize)*windowSize;i>=0;i-=windowSize){buckets.fill(zero);for(let j=0;j<scalars.length;j++){const scalar=scalars[j],wbits=Number(scalar>>BigInt(i)&BigInt(MASK));buckets[wbits]=buckets[wbits].add(points[j])}let resI=zero;for(let j=buckets.length-1,sumI=zero;j>0;j--)sumI=sumI.add(buckets[j]),resI=resI.add(sumI);if(sum=sum.add(resI),0!==i)for(let j=0;j<windowSize;j++)sum=sum.double()}return sum}export function precomputeMSMUnsafe(c,fieldN,points,windowSize){validateW(windowSize,fieldN.BITS),validateMSMPoints(points,c);const zero=c.ZERO,tableSize=2**windowSize-1,chunks=Math.ceil(fieldN.BITS/windowSize),MASK=BigInt((1<<windowSize)-1),tables=points.map(p=>{const res=[];for(let i=0,acc=p;i<tableSize;i++)res.push(acc),acc=acc.add(p);return res});return scalars=>{if(validateMSMScalars(scalars,fieldN),scalars.length>points.length)throw new Error(\"array of scalars must be smaller than array of points\");let res=zero;for(let i=0;i<chunks;i++){if(res!==zero)for(let j=0;j<windowSize;j++)res=res.double();const shiftBy=BigInt(chunks*windowSize-(i+1)*windowSize);for(let j=0;j<scalars.length;j++){const n=scalars[j],curr=Number(n>>shiftBy&MASK);curr&&(res=res.add(tables[j][curr-1]))}}return res}}export function validateBasic(curve){return validateField(curve.Fp),validateObject(curve,{n:\"bigint\",h:\"bigint\",Gx:\"field\",Gy:\"field\"},{nBitLength:\"isSafeInteger\",nByteLength:\"isSafeInteger\"}),Object.freeze({...nLength(curve.n,curve.nBitLength),...curve,p:curve.Fp.ORDER})}","import{pippenger,validateBasic,wNAF}from\"./curve.js\";import{Field,getMinHashLength,invert,mapHashToField,mod,validateField}from\"./modular.js\";import*as ut from\"./utils.js\";import{abool,ensureBytes,memoized}from\"./utils.js\";function validateSigVerOpts(opts){void 0!==opts.lowS&&abool(\"lowS\",opts.lowS),void 0!==opts.prehash&&abool(\"prehash\",opts.prehash)}function validatePointOpts(curve){const opts=validateBasic(curve);ut.validateObject(opts,{a:\"field\",b:\"field\"},{allowedPrivateKeyLengths:\"array\",wrapPrivateKey:\"boolean\",isTorsionFree:\"function\",clearCofactor:\"function\",allowInfinityPoint:\"boolean\",fromBytes:\"function\",toBytes:\"function\"});const{endo:endo,Fp:Fp,a:a}=opts;if(endo){if(!Fp.eql(a,Fp.ZERO))throw new Error(\"invalid endomorphism, can only be defined for Koblitz curves that have a=0\");if(\"object\"!=typeof endo||\"bigint\"!=typeof endo.beta||\"function\"!=typeof endo.splitScalar)throw new Error(\"invalid endomorphism, expected beta: bigint and splitScalar: function\")}return Object.freeze({...opts})}const{bytesToNumberBE:b2n,hexToBytes:h2b}=ut;export class DERErr extends Error{constructor(m=\"\"){super(m)}}export const DER={Err:DERErr,_tlv:{encode:(tag,data)=>{const{Err:E}=DER;if(tag<0||tag>256)throw new E(\"tlv.encode: wrong tag\");if(1&data.length)throw new E(\"tlv.encode: unpadded data\");const dataLen=data.length/2,len=ut.numberToHexUnpadded(dataLen);if(len.length/2&128)throw new E(\"tlv.encode: long form length too big\");const lenLen=dataLen>127?ut.numberToHexUnpadded(len.length/2|128):\"\";return ut.numberToHexUnpadded(tag)+lenLen+len+data},decode(tag,data){const{Err:E}=DER;let pos=0;if(tag<0||tag>256)throw new E(\"tlv.encode: wrong tag\");if(data.length<2||data[pos++]!==tag)throw new E(\"tlv.decode: wrong tlv\");const first=data[pos++];let length=0;if(!!(128&first)){const lenLen=127&first;if(!lenLen)throw new E(\"tlv.decode(long): indefinite length not supported\");if(lenLen>4)throw new E(\"tlv.decode(long): byte length is too big\");const lengthBytes=data.subarray(pos,pos+lenLen);if(lengthBytes.length!==lenLen)throw new E(\"tlv.decode: length bytes not complete\");if(0===lengthBytes[0])throw new E(\"tlv.decode(long): zero leftmost byte\");for(const b of lengthBytes)length=length<<8|b;if(pos+=lenLen,length<128)throw new E(\"tlv.decode(long): not minimal encoding\")}else length=first;const v=data.subarray(pos,pos+length);if(v.length!==length)throw new E(\"tlv.decode: wrong value length\");return{v:v,l:data.subarray(pos+length)}}},_int:{encode(num){const{Err:E}=DER;if(num<_0n)throw new E(\"integer: negative integers are not allowed\");let hex=ut.numberToHexUnpadded(num);if(8&Number.parseInt(hex[0],16)&&(hex=\"00\"+hex),1&hex.length)throw new E(\"unexpected DER parsing assertion: unpadded hex\");return hex},decode(data){const{Err:E}=DER;if(128&data[0])throw new E(\"invalid signature integer: negative\");if(0===data[0]&&!(128&data[1]))throw new E(\"invalid signature integer: unnecessary leading zero\");return b2n(data)}},toSig(hex){const{Err:E,_int:int,_tlv:tlv}=DER,data=\"string\"==typeof hex?h2b(hex):hex;ut.abytes(data);const{v:seqBytes,l:seqLeftBytes}=tlv.decode(48,data);if(seqLeftBytes.length)throw new E(\"invalid signature: left bytes after parsing\");const{v:rBytes,l:rLeftBytes}=tlv.decode(2,seqBytes),{v:sBytes,l:sLeftBytes}=tlv.decode(2,rLeftBytes);if(sLeftBytes.length)throw new E(\"invalid signature: left bytes after parsing\");return{r:int.decode(rBytes),s:int.decode(sBytes)}},hexFromSig(sig){const{_tlv:tlv,_int:int}=DER,seq=tlv.encode(2,int.encode(sig.r))+tlv.encode(2,int.encode(sig.s));return tlv.encode(48,seq)}};const _0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_3n=BigInt(3),_4n=BigInt(4);export function weierstrassPoints(opts){const CURVE=validatePointOpts(opts),{Fp:Fp}=CURVE,Fn=Field(CURVE.n,CURVE.nBitLength),toBytes=CURVE.toBytes||((_c,point,_isCompressed)=>{const a=point.toAffine();return ut.concatBytes(Uint8Array.from([4]),Fp.toBytes(a.x),Fp.toBytes(a.y))}),fromBytes=CURVE.fromBytes||(bytes=>{const tail=bytes.subarray(1);return{x:Fp.fromBytes(tail.subarray(0,Fp.BYTES)),y:Fp.fromBytes(tail.subarray(Fp.BYTES,2*Fp.BYTES))}});function weierstrassEquation(x){const{a:a,b:b}=CURVE,x2=Fp.sqr(x),x3=Fp.mul(x2,x);return Fp.add(Fp.add(x3,Fp.mul(x,a)),b)}if(!Fp.eql(Fp.sqr(CURVE.Gy),weierstrassEquation(CURVE.Gx)))throw new Error(\"bad generator point: equation left != right\");function normPrivateKeyToScalar(key){const{allowedPrivateKeyLengths:lengths,nByteLength:nByteLength,wrapPrivateKey:wrapPrivateKey,n:N}=CURVE;if(lengths&&\"bigint\"!=typeof key){if(ut.isBytes(key)&&(key=ut.bytesToHex(key)),\"string\"!=typeof key||!lengths.includes(key.length))throw new Error(\"invalid private key\");key=key.padStart(2*nByteLength,\"0\")}let num;try{num=\"bigint\"==typeof key?key:ut.bytesToNumberBE(ensureBytes(\"private key\",key,nByteLength))}catch(error){throw new Error(\"invalid private key, expected hex or \"+nByteLength+\" bytes, got \"+typeof key)}return wrapPrivateKey&&(num=mod(num,N)),ut.aInRange(\"private key\",num,_1n,N),num}function assertPrjPoint(other){if(!(other instanceof Point))throw new Error(\"ProjectivePoint expected\")}const toAffineMemo=memoized((p,iz)=>{const{px:x,py:y,pz:z}=p;if(Fp.eql(z,Fp.ONE))return{x:x,y:y};const is0=p.is0();null==iz&&(iz=is0?Fp.ONE:Fp.inv(z));const ax=Fp.mul(x,iz),ay=Fp.mul(y,iz),zz=Fp.mul(z,iz);if(is0)return{x:Fp.ZERO,y:Fp.ZERO};if(!Fp.eql(zz,Fp.ONE))throw new Error(\"invZ was invalid\");return{x:ax,y:ay}}),assertValidMemo=memoized(p=>{if(p.is0()){if(CURVE.allowInfinityPoint&&!Fp.is0(p.py))return;throw new Error(\"bad point: ZERO\")}const{x:x,y:y}=p.toAffine();if(!Fp.isValid(x)||!Fp.isValid(y))throw new Error(\"bad point: x or y not FE\");const left=Fp.sqr(y),right=weierstrassEquation(x);if(!Fp.eql(left,right))throw new Error(\"bad point: equation left != right\");if(!p.isTorsionFree())throw new Error(\"bad point: not in prime-order subgroup\");return!0});class Point{constructor(px,py,pz){if(this.px=px,this.py=py,this.pz=pz,null==px||!Fp.isValid(px))throw new Error(\"x required\");if(null==py||!Fp.isValid(py))throw new Error(\"y required\");if(null==pz||!Fp.isValid(pz))throw new Error(\"z required\");Object.freeze(this)}static fromAffine(p){const{x:x,y:y}=p||{};if(!p||!Fp.isValid(x)||!Fp.isValid(y))throw new Error(\"invalid affine point\");if(p instanceof Point)throw new Error(\"projective point not allowed\");const is0=i=>Fp.eql(i,Fp.ZERO);return is0(x)&&is0(y)?Point.ZERO:new Point(x,y,Fp.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(points){const toInv=Fp.invertBatch(points.map(p=>p.pz));return points.map((p,i)=>p.toAffine(toInv[i])).map(Point.fromAffine)}static fromHex(hex){const P=Point.fromAffine(fromBytes(ensureBytes(\"pointHex\",hex)));return P.assertValidity(),P}static fromPrivateKey(privateKey){return Point.BASE.multiply(normPrivateKeyToScalar(privateKey))}static msm(points,scalars){return pippenger(Point,Fn,points,scalars)}_setWindowSize(windowSize){wnaf.setWindowSize(this,windowSize)}assertValidity(){assertValidMemo(this)}hasEvenY(){const{y:y}=this.toAffine();if(Fp.isOdd)return!Fp.isOdd(y);throw new Error(\"Field doesn't support isOdd\")}equals(other){assertPrjPoint(other);const{px:X1,py:Y1,pz:Z1}=this,{px:X2,py:Y2,pz:Z2}=other,U1=Fp.eql(Fp.mul(X1,Z2),Fp.mul(X2,Z1)),U2=Fp.eql(Fp.mul(Y1,Z2),Fp.mul(Y2,Z1));return U1&&U2}negate(){return new Point(this.px,Fp.neg(this.py),this.pz)}double(){const{a:a,b:b}=CURVE,b3=Fp.mul(b,_3n),{px:X1,py:Y1,pz:Z1}=this;let X3=Fp.ZERO,Y3=Fp.ZERO,Z3=Fp.ZERO,t0=Fp.mul(X1,X1),t1=Fp.mul(Y1,Y1),t2=Fp.mul(Z1,Z1),t3=Fp.mul(X1,Y1);return t3=Fp.add(t3,t3),Z3=Fp.mul(X1,Z1),Z3=Fp.add(Z3,Z3),X3=Fp.mul(a,Z3),Y3=Fp.mul(b3,t2),Y3=Fp.add(X3,Y3),X3=Fp.sub(t1,Y3),Y3=Fp.add(t1,Y3),Y3=Fp.mul(X3,Y3),X3=Fp.mul(t3,X3),Z3=Fp.mul(b3,Z3),t2=Fp.mul(a,t2),t3=Fp.sub(t0,t2),t3=Fp.mul(a,t3),t3=Fp.add(t3,Z3),Z3=Fp.add(t0,t0),t0=Fp.add(Z3,t0),t0=Fp.add(t0,t2),t0=Fp.mul(t0,t3),Y3=Fp.add(Y3,t0),t2=Fp.mul(Y1,Z1),t2=Fp.add(t2,t2),t0=Fp.mul(t2,t3),X3=Fp.sub(X3,t0),Z3=Fp.mul(t2,t1),Z3=Fp.add(Z3,Z3),Z3=Fp.add(Z3,Z3),new Point(X3,Y3,Z3)}add(other){assertPrjPoint(other);const{px:X1,py:Y1,pz:Z1}=this,{px:X2,py:Y2,pz:Z2}=other;let X3=Fp.ZERO,Y3=Fp.ZERO,Z3=Fp.ZERO;const a=CURVE.a,b3=Fp.mul(CURVE.b,_3n);let t0=Fp.mul(X1,X2),t1=Fp.mul(Y1,Y2),t2=Fp.mul(Z1,Z2),t3=Fp.add(X1,Y1),t4=Fp.add(X2,Y2);t3=Fp.mul(t3,t4),t4=Fp.add(t0,t1),t3=Fp.sub(t3,t4),t4=Fp.add(X1,Z1);let t5=Fp.add(X2,Z2);return t4=Fp.mul(t4,t5),t5=Fp.add(t0,t2),t4=Fp.sub(t4,t5),t5=Fp.add(Y1,Z1),X3=Fp.add(Y2,Z2),t5=Fp.mul(t5,X3),X3=Fp.add(t1,t2),t5=Fp.sub(t5,X3),Z3=Fp.mul(a,t4),X3=Fp.mul(b3,t2),Z3=Fp.add(X3,Z3),X3=Fp.sub(t1,Z3),Z3=Fp.add(t1,Z3),Y3=Fp.mul(X3,Z3),t1=Fp.add(t0,t0),t1=Fp.add(t1,t0),t2=Fp.mul(a,t2),t4=Fp.mul(b3,t4),t1=Fp.add(t1,t2),t2=Fp.sub(t0,t2),t2=Fp.mul(a,t2),t4=Fp.add(t4,t2),t0=Fp.mul(t1,t4),Y3=Fp.add(Y3,t0),t0=Fp.mul(t5,t4),X3=Fp.mul(t3,X3),X3=Fp.sub(X3,t0),t0=Fp.mul(t3,t1),Z3=Fp.mul(t5,Z3),Z3=Fp.add(Z3,t0),new Point(X3,Y3,Z3)}subtract(other){return this.add(other.negate())}is0(){return this.equals(Point.ZERO)}wNAF(n){return wnaf.wNAFCached(this,n,Point.normalizeZ)}multiplyUnsafe(sc){const{endo:endo,n:N}=CURVE;ut.aInRange(\"scalar\",sc,_0n,N);const I=Point.ZERO;if(sc===_0n)return I;if(this.is0()||sc===_1n)return this;if(!endo||wnaf.hasPrecomputes(this))return wnaf.wNAFCachedUnsafe(this,sc,Point.normalizeZ);let{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}=endo.splitScalar(sc),k1p=I,k2p=I,d=this;for(;k1>_0n||k2>_0n;)k1&_1n&&(k1p=k1p.add(d)),k2&_1n&&(k2p=k2p.add(d)),d=d.double(),k1>>=_1n,k2>>=_1n;return k1neg&&(k1p=k1p.negate()),k2neg&&(k2p=k2p.negate()),k2p=new Point(Fp.mul(k2p.px,endo.beta),k2p.py,k2p.pz),k1p.add(k2p)}multiply(scalar){const{endo:endo,n:N}=CURVE;let point,fake;if(ut.aInRange(\"scalar\",scalar,_1n,N),endo){const{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}=endo.splitScalar(scalar);let{p:k1p,f:f1p}=this.wNAF(k1),{p:k2p,f:f2p}=this.wNAF(k2);k1p=wnaf.constTimeNegate(k1neg,k1p),k2p=wnaf.constTimeNegate(k2neg,k2p),k2p=new Point(Fp.mul(k2p.px,endo.beta),k2p.py,k2p.pz),point=k1p.add(k2p),fake=f1p.add(f2p)}else{const{p:p,f:f}=this.wNAF(scalar);point=p,fake=f}return Point.normalizeZ([point,fake])[0]}multiplyAndAddUnsafe(Q,a,b){const G=Point.BASE,mul=(P,a)=>a!==_0n&&a!==_1n&&P.equals(G)?P.multiply(a):P.multiplyUnsafe(a),sum=mul(this,a).add(mul(Q,b));return sum.is0()?void 0:sum}toAffine(iz){return toAffineMemo(this,iz)}isTorsionFree(){const{h:cofactor,isTorsionFree:isTorsionFree}=CURVE;if(cofactor===_1n)return!0;if(isTorsionFree)return isTorsionFree(Point,this);throw new Error(\"isTorsionFree() has not been declared for the elliptic curve\")}clearCofactor(){const{h:cofactor,clearCofactor:clearCofactor}=CURVE;return cofactor===_1n?this:clearCofactor?clearCofactor(Point,this):this.multiplyUnsafe(CURVE.h)}toRawBytes(isCompressed=!0){return abool(\"isCompressed\",isCompressed),this.assertValidity(),toBytes(Point,this,isCompressed)}toHex(isCompressed=!0){return abool(\"isCompressed\",isCompressed),ut.bytesToHex(this.toRawBytes(isCompressed))}}Point.BASE=new Point(CURVE.Gx,CURVE.Gy,Fp.ONE),Point.ZERO=new Point(Fp.ZERO,Fp.ONE,Fp.ZERO);const _bits=CURVE.nBitLength,wnaf=wNAF(Point,CURVE.endo?Math.ceil(_bits/2):_bits);return{CURVE:CURVE,ProjectivePoint:Point,normPrivateKeyToScalar:normPrivateKeyToScalar,weierstrassEquation:weierstrassEquation,isWithinCurveOrder:function(num){return ut.inRange(num,_1n,CURVE.n)}}}function validateOpts(curve){const opts=validateBasic(curve);return ut.validateObject(opts,{hash:\"hash\",hmac:\"function\",randomBytes:\"function\"},{bits2int:\"function\",bits2int_modN:\"function\",lowS:\"boolean\"}),Object.freeze({lowS:!0,...opts})}export function weierstrass(curveDef){const CURVE=validateOpts(curveDef),{Fp:Fp,n:CURVE_ORDER}=CURVE,compressedLen=Fp.BYTES+1,uncompressedLen=2*Fp.BYTES+1;function modN(a){return mod(a,CURVE_ORDER)}function invN(a){return invert(a,CURVE_ORDER)}const{ProjectivePoint:Point,normPrivateKeyToScalar:normPrivateKeyToScalar,weierstrassEquation:weierstrassEquation,isWithinCurveOrder:isWithinCurveOrder}=weierstrassPoints({...CURVE,toBytes(_c,point,isCompressed){const a=point.toAffine(),x=Fp.toBytes(a.x),cat=ut.concatBytes;return abool(\"isCompressed\",isCompressed),isCompressed?cat(Uint8Array.from([point.hasEvenY()?2:3]),x):cat(Uint8Array.from([4]),x,Fp.toBytes(a.y))},fromBytes(bytes){const len=bytes.length,head=bytes[0],tail=bytes.subarray(1);if(len!==compressedLen||2!==head&&3!==head){if(len===uncompressedLen&&4===head){return{x:Fp.fromBytes(tail.subarray(0,Fp.BYTES)),y:Fp.fromBytes(tail.subarray(Fp.BYTES,2*Fp.BYTES))}}throw new Error(\"invalid Point, expected length of \"+compressedLen+\", or uncompressed \"+uncompressedLen+\", got \"+len)}{const x=ut.bytesToNumberBE(tail);if(!ut.inRange(x,_1n,Fp.ORDER))throw new Error(\"Point is not on curve\");const y2=weierstrassEquation(x);let y;try{y=Fp.sqrt(y2)}catch(sqrtError){const suffix=sqrtError instanceof Error?\": \"+sqrtError.message:\"\";throw new Error(\"Point is not on curve\"+suffix)}return!(1&~head)!==((y&_1n)===_1n)&&(y=Fp.neg(y)),{x:x,y:y}}}}),numToNByteStr=num=>ut.bytesToHex(ut.numberToBytesBE(num,CURVE.nByteLength));function isBiggerThanHalfOrder(number){return number>CURVE_ORDER>>_1n}const slcNum=(b,from,to)=>ut.bytesToNumberBE(b.slice(from,to));class Signature{constructor(r,s,recovery){this.r=r,this.s=s,this.recovery=recovery,this.assertValidity()}static fromCompact(hex){const l=CURVE.nByteLength;return hex=ensureBytes(\"compactSignature\",hex,2*l),new Signature(slcNum(hex,0,l),slcNum(hex,l,2*l))}static fromDER(hex){const{r:r,s:s}=DER.toSig(ensureBytes(\"DER\",hex));return new Signature(r,s)}assertValidity(){ut.aInRange(\"r\",this.r,_1n,CURVE_ORDER),ut.aInRange(\"s\",this.s,_1n,CURVE_ORDER)}addRecoveryBit(recovery){return new Signature(this.r,this.s,recovery)}recoverPublicKey(msgHash){const{r:r,s:s,recovery:rec}=this,h=bits2int_modN(ensureBytes(\"msgHash\",msgHash));if(null==rec||![0,1,2,3].includes(rec))throw new Error(\"recovery id invalid\");const radj=2===rec||3===rec?r+CURVE.n:r;if(radj>=Fp.ORDER)throw new Error(\"recovery id 2 or 3 invalid\");const prefix=1&rec?\"03\":\"02\",R=Point.fromHex(prefix+numToNByteStr(radj)),ir=invN(radj),u1=modN(-h*ir),u2=modN(s*ir),Q=Point.BASE.multiplyAndAddUnsafe(R,u1,u2);if(!Q)throw new Error(\"point at infinify\");return Q.assertValidity(),Q}hasHighS(){return isBiggerThanHalfOrder(this.s)}normalizeS(){return this.hasHighS()?new Signature(this.r,modN(-this.s),this.recovery):this}toDERRawBytes(){return ut.hexToBytes(this.toDERHex())}toDERHex(){return DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return ut.hexToBytes(this.toCompactHex())}toCompactHex(){return numToNByteStr(this.r)+numToNByteStr(this.s)}}const utils={isValidPrivateKey(privateKey){try{return normPrivateKeyToScalar(privateKey),!0}catch(error){return!1}},normPrivateKeyToScalar:normPrivateKeyToScalar,randomPrivateKey:()=>{const length=getMinHashLength(CURVE.n);return mapHashToField(CURVE.randomBytes(length),CURVE.n)},precompute:(windowSize=8,point=Point.BASE)=>(point._setWindowSize(windowSize),point.multiply(BigInt(3)),point)};function isProbPub(item){const arr=ut.isBytes(item),str=\"string\"==typeof item,len=(arr||str)&&item.length;return arr?len===compressedLen||len===uncompressedLen:str?len===2*compressedLen||len===2*uncompressedLen:item instanceof Point}const bits2int=CURVE.bits2int||function(bytes){if(bytes.length>8192)throw new Error(\"input is too large\");const num=ut.bytesToNumberBE(bytes),delta=8*bytes.length-CURVE.nBitLength;return delta>0?num>>BigInt(delta):num},bits2int_modN=CURVE.bits2int_modN||function(bytes){return modN(bits2int(bytes))},ORDER_MASK=ut.bitMask(CURVE.nBitLength);function int2octets(num){return ut.aInRange(\"num < 2^\"+CURVE.nBitLength,num,_0n,ORDER_MASK),ut.numberToBytesBE(num,CURVE.nByteLength)}function prepSig(msgHash,privateKey,opts=defaultSigOpts){if([\"recovered\",\"canonical\"].some(k=>k in opts))throw new Error(\"sign() legacy options not supported\");const{hash:hash,randomBytes:randomBytes}=CURVE;let{lowS:lowS,prehash:prehash,extraEntropy:ent}=opts;null==lowS&&(lowS=!0),msgHash=ensureBytes(\"msgHash\",msgHash),validateSigVerOpts(opts),prehash&&(msgHash=ensureBytes(\"prehashed msgHash\",hash(msgHash)));const h1int=bits2int_modN(msgHash),d=normPrivateKeyToScalar(privateKey),seedArgs=[int2octets(d),int2octets(h1int)];if(null!=ent&&!1!==ent){const e=!0===ent?randomBytes(Fp.BYTES):ent;seedArgs.push(ensureBytes(\"extraEntropy\",e))}const seed=ut.concatBytes(...seedArgs),m=h1int;return{seed:seed,k2sig:function(kBytes){const k=bits2int(kBytes);if(!isWithinCurveOrder(k))return;const ik=invN(k),q=Point.BASE.multiply(k).toAffine(),r=modN(q.x);if(r===_0n)return;const s=modN(ik*modN(m+r*d));if(s===_0n)return;let recovery=(q.x===r?0:2)|Number(q.y&_1n),normS=s;return lowS&&isBiggerThanHalfOrder(s)&&(normS=function(s){return isBiggerThanHalfOrder(s)?modN(-s):s}(s),recovery^=1),new Signature(r,normS,recovery)}}}const defaultSigOpts={lowS:CURVE.lowS,prehash:!1},defaultVerOpts={lowS:CURVE.lowS,prehash:!1};return Point.BASE._setWindowSize(8),{CURVE:CURVE,getPublicKey:function(privateKey,isCompressed=!0){return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed)},getSharedSecret:function(privateA,publicB,isCompressed=!0){if(isProbPub(privateA))throw new Error(\"first arg must be private key\");if(!isProbPub(publicB))throw new Error(\"second arg must be public key\");return Point.fromHex(publicB).multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed)},sign:function(msgHash,privKey,opts=defaultSigOpts){const{seed:seed,k2sig:k2sig}=prepSig(msgHash,privKey,opts),C=CURVE;return ut.createHmacDrbg(C.hash.outputLen,C.nByteLength,C.hmac)(seed,k2sig)},verify:function(signature,msgHash,publicKey,opts=defaultVerOpts){const sg=signature;msgHash=ensureBytes(\"msgHash\",msgHash),publicKey=ensureBytes(\"publicKey\",publicKey);const{lowS:lowS,prehash:prehash,format:format}=opts;if(validateSigVerOpts(opts),\"strict\"in opts)throw new Error(\"options.strict was renamed to lowS\");if(void 0!==format&&\"compact\"!==format&&\"der\"!==format)throw new Error(\"format must be compact or der\");const isHex=\"string\"==typeof sg||ut.isBytes(sg),isObj=!isHex&&!format&&\"object\"==typeof sg&&null!==sg&&\"bigint\"==typeof sg.r&&\"bigint\"==typeof sg.s;if(!isHex&&!isObj)throw new Error(\"invalid signature, expected Uint8Array, hex string or Signature instance\");let _sig,P;try{if(isObj&&(_sig=new Signature(sg.r,sg.s)),isHex){try{\"compact\"!==format&&(_sig=Signature.fromDER(sg))}catch(derError){if(!(derError instanceof DER.Err))throw derError}_sig||\"der\"===format||(_sig=Signature.fromCompact(sg))}P=Point.fromHex(publicKey)}catch(error){return!1}if(!_sig)return!1;if(lowS&&_sig.hasHighS())return!1;prehash&&(msgHash=CURVE.hash(msgHash));const{r:r,s:s}=_sig,h=bits2int_modN(msgHash),is=invN(s),u1=modN(h*is),u2=modN(r*is),R=Point.BASE.multiplyAndAddUnsafe(P,u1,u2)?.toAffine();return!!R&&modN(R.x)===r},ProjectivePoint:Point,Signature:Signature,utils:utils}}export function SWUFpSqrtRatio(Fp,Z){const q=Fp.ORDER;let l=_0n;for(let o=q-_1n;o%_2n===_0n;o/=_2n)l+=_1n;const c1=l,_2n_pow_c1_1=_2n<<c1-_1n-_1n,_2n_pow_c1=_2n_pow_c1_1*_2n,c2=(q-_1n)/_2n_pow_c1,c3=(c2-_1n)/_2n,c4=_2n_pow_c1-_1n,c5=_2n_pow_c1_1,c6=Fp.pow(Z,c2),c7=Fp.pow(Z,(c2+_1n)/_2n);let sqrtRatio=(u,v)=>{let tv1=c6,tv2=Fp.pow(v,c4),tv3=Fp.sqr(tv2);tv3=Fp.mul(tv3,v);let tv5=Fp.mul(u,tv3);tv5=Fp.pow(tv5,c3),tv5=Fp.mul(tv5,tv2),tv2=Fp.mul(tv5,v),tv3=Fp.mul(tv5,u);let tv4=Fp.mul(tv3,tv2);tv5=Fp.pow(tv4,c5);let isQR=Fp.eql(tv5,Fp.ONE);tv2=Fp.mul(tv3,c7),tv5=Fp.mul(tv4,tv1),tv3=Fp.cmov(tv2,tv3,isQR),tv4=Fp.cmov(tv5,tv4,isQR);for(let i=c1;i>_1n;i--){let tv5=i-_2n;tv5=_2n<<tv5-_1n;let tvv5=Fp.pow(tv4,tv5);const e1=Fp.eql(tvv5,Fp.ONE);tv2=Fp.mul(tv3,tv1),tv1=Fp.mul(tv1,tv1),tvv5=Fp.mul(tv4,tv1),tv3=Fp.cmov(tv2,tv3,e1),tv4=Fp.cmov(tvv5,tv4,e1)}return{isValid:isQR,value:tv3}};if(Fp.ORDER%_4n===_3n){const c1=(Fp.ORDER-_3n)/_4n,c2=Fp.sqrt(Fp.neg(Z));sqrtRatio=(u,v)=>{let tv1=Fp.sqr(v);const tv2=Fp.mul(u,v);tv1=Fp.mul(tv1,tv2);let y1=Fp.pow(tv1,c1);y1=Fp.mul(y1,tv2);const y2=Fp.mul(y1,c2),tv3=Fp.mul(Fp.sqr(y1),v),isQR=Fp.eql(tv3,u);return{isValid:isQR,value:Fp.cmov(y2,y1,isQR)}}}return sqrtRatio}export function mapToCurveSimpleSWU(Fp,opts){if(validateField(Fp),!Fp.isValid(opts.A)||!Fp.isValid(opts.B)||!Fp.isValid(opts.Z))throw new Error(\"mapToCurveSimpleSWU: invalid opts\");const sqrtRatio=SWUFpSqrtRatio(Fp,opts.Z);if(!Fp.isOdd)throw new Error(\"Fp.isOdd is not implemented!\");return u=>{let tv1,tv2,tv3,tv4,tv5,tv6,x,y;tv1=Fp.sqr(u),tv1=Fp.mul(tv1,opts.Z),tv2=Fp.sqr(tv1),tv2=Fp.add(tv2,tv1),tv3=Fp.add(tv2,Fp.ONE),tv3=Fp.mul(tv3,opts.B),tv4=Fp.cmov(opts.Z,Fp.neg(tv2),!Fp.eql(tv2,Fp.ZERO)),tv4=Fp.mul(tv4,opts.A),tv2=Fp.sqr(tv3),tv6=Fp.sqr(tv4),tv5=Fp.mul(tv6,opts.A),tv2=Fp.add(tv2,tv5),tv2=Fp.mul(tv2,tv3),tv6=Fp.mul(tv6,tv4),tv5=Fp.mul(tv6,opts.B),tv2=Fp.add(tv2,tv5),x=Fp.mul(tv1,tv3);const{isValid:isValid,value:value}=sqrtRatio(tv2,tv6);y=Fp.mul(tv1,u),y=Fp.mul(y,value),x=Fp.cmov(x,tv3,isValid),y=Fp.cmov(y,value,isValid);const e1=Fp.isOdd(u)===Fp.isOdd(y);return y=Fp.cmov(Fp.neg(y),y,e1),x=Fp.div(x,tv4),{x:x,y:y}}}","import{hmac}from\"@noble/hashes/hmac\";import{concatBytes,randomBytes}from\"@noble/hashes/utils\";import{weierstrass}from\"./abstract/weierstrass.js\";export function getHash(hash){return{hash:hash,hmac:(key,...msgs)=>hmac(hash,key,concatBytes(...msgs)),randomBytes:randomBytes}}export function createCurve(curveDef,defHash){const create=hash=>weierstrass({...curveDef,...getHash(hash)});return{...create(defHash),create:create}}","import{mod}from\"./modular.js\";import{abytes,bytesToNumberBE,concatBytes,utf8ToBytes,validateObject}from\"./utils.js\";const os2ip=bytesToNumberBE;function i2osp(value,length){if(anum(value),anum(length),value<0||value>=1<<8*length)throw new Error(\"invalid I2OSP input: \"+value);const res=Array.from({length:length}).fill(0);for(let i=length-1;i>=0;i--)res[i]=255&value,value>>>=8;return new Uint8Array(res)}function strxor(a,b){const arr=new Uint8Array(a.length);for(let i=0;i<a.length;i++)arr[i]=a[i]^b[i];return arr}function anum(item){if(!Number.isSafeInteger(item))throw new Error(\"number expected\")}export function expand_message_xmd(msg,DST,lenInBytes,H){abytes(msg),abytes(DST),anum(lenInBytes),DST.length>255&&(DST=H(concatBytes(utf8ToBytes(\"H2C-OVERSIZE-DST-\"),DST)));const{outputLen:b_in_bytes,blockLen:r_in_bytes}=H,ell=Math.ceil(lenInBytes/b_in_bytes);if(lenInBytes>65535||ell>255)throw new Error(\"expand_message_xmd: invalid lenInBytes\");const DST_prime=concatBytes(DST,i2osp(DST.length,1)),Z_pad=i2osp(0,r_in_bytes),l_i_b_str=i2osp(lenInBytes,2),b=new Array(ell),b_0=H(concatBytes(Z_pad,msg,l_i_b_str,i2osp(0,1),DST_prime));b[0]=H(concatBytes(b_0,i2osp(1,1),DST_prime));for(let i=1;i<=ell;i++){const args=[strxor(b_0,b[i-1]),i2osp(i+1,1),DST_prime];b[i]=H(concatBytes(...args))}return concatBytes(...b).slice(0,lenInBytes)}export function expand_message_xof(msg,DST,lenInBytes,k,H){if(abytes(msg),abytes(DST),anum(lenInBytes),DST.length>255){const dkLen=Math.ceil(2*k/8);DST=H.create({dkLen:dkLen}).update(utf8ToBytes(\"H2C-OVERSIZE-DST-\")).update(DST).digest()}if(lenInBytes>65535||DST.length>255)throw new Error(\"expand_message_xof: invalid lenInBytes\");return H.create({dkLen:lenInBytes}).update(msg).update(i2osp(lenInBytes,2)).update(DST).update(i2osp(DST.length,1)).digest()}export function hash_to_field(msg,count,options){validateObject(options,{DST:\"stringOrUint8Array\",p:\"bigint\",m:\"isSafeInteger\",k:\"isSafeInteger\",hash:\"hash\"});const{p:p,k:k,m:m,hash:hash,expand:expand,DST:_DST}=options;abytes(msg),anum(count);const DST=\"string\"==typeof _DST?utf8ToBytes(_DST):_DST,log2p=p.toString(2).length,L=Math.ceil((log2p+k)/8),len_in_bytes=count*m*L;let prb;if(\"xmd\"===expand)prb=expand_message_xmd(msg,DST,len_in_bytes,hash);else if(\"xof\"===expand)prb=expand_message_xof(msg,DST,len_in_bytes,k,hash);else{if(\"_internal_pass\"!==expand)throw new Error('expand must be \"xmd\" or \"xof\"');prb=msg}const u=new Array(count);for(let i=0;i<count;i++){const e=new Array(m);for(let j=0;j<m;j++){const elm_offset=L*(j+i*m),tv=prb.subarray(elm_offset,elm_offset+L);e[j]=mod(os2ip(tv),p)}u[i]=e}return u}export function isogenyMap(field,map){const COEFF=map.map(i=>Array.from(i).reverse());return(x,y)=>{const[xNum,xDen,yNum,yDen]=COEFF.map(val=>val.reduce((acc,i)=>field.add(field.mul(acc,x),i)));return x=field.div(xNum,xDen),y=field.mul(y,field.div(yNum,yDen)),{x:x,y:y}}}export function createHasher(Point,mapToCurve,def){if(\"function\"!=typeof mapToCurve)throw new Error(\"mapToCurve() must be defined\");return{hashToCurve(msg,options){const u=hash_to_field(msg,2,{...def,DST:def.DST,...options}),u0=Point.fromAffine(mapToCurve(u[0])),u1=Point.fromAffine(mapToCurve(u[1])),P=u0.add(u1).clearCofactor();return P.assertValidity(),P},encodeToCurve(msg,options){const u=hash_to_field(msg,1,{...def,DST:def.encodeDST,...options}),P=Point.fromAffine(mapToCurve(u[0])).clearCofactor();return P.assertValidity(),P},mapToCurve(scalars){if(!Array.isArray(scalars))throw new Error(\"mapToCurve: expected array of bigints\");for(const i of scalars)if(\"bigint\"!=typeof i)throw new Error(\"mapToCurve: expected array of bigints\");const P=Point.fromAffine(mapToCurve(scalars)).clearCofactor();return P.assertValidity(),P}}}","import{sha256}from\"@noble/hashes/sha256\";import{randomBytes}from\"@noble/hashes/utils\";import{createCurve}from\"./_shortw_utils.js\";import{createHasher,isogenyMap}from\"./abstract/hash-to-curve.js\";import{Field,mod,pow2}from\"./abstract/modular.js\";import{aInRange,bytesToNumberBE,concatBytes,ensureBytes,inRange,numberToBytesBE}from\"./abstract/utils.js\";import{mapToCurveSimpleSWU}from\"./abstract/weierstrass.js\";const secp256k1P=BigInt(\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\"),secp256k1N=BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\"),_1n=BigInt(1),_2n=BigInt(2),divNearest=(a,b)=>(a+b/_2n)/b;function sqrtMod(y){const P=secp256k1P,_3n=BigInt(3),_6n=BigInt(6),_11n=BigInt(11),_22n=BigInt(22),_23n=BigInt(23),_44n=BigInt(44),_88n=BigInt(88),b2=y*y*y%P,b3=b2*b2*y%P,b6=pow2(b3,_3n,P)*b3%P,b9=pow2(b6,_3n,P)*b3%P,b11=pow2(b9,_2n,P)*b2%P,b22=pow2(b11,_11n,P)*b11%P,b44=pow2(b22,_22n,P)*b22%P,b88=pow2(b44,_44n,P)*b44%P,b176=pow2(b88,_88n,P)*b88%P,b220=pow2(b176,_44n,P)*b44%P,b223=pow2(b220,_3n,P)*b3%P,t1=pow2(b223,_23n,P)*b22%P,t2=pow2(t1,_6n,P)*b2%P,root=pow2(t2,_2n,P);if(!Fpk1.eql(Fpk1.sqr(root),y))throw new Error(\"Cannot find square root\");return root}const Fpk1=Field(secp256k1P,void 0,void 0,{sqrt:sqrtMod});export const secp256k1=createCurve({a:BigInt(0),b:BigInt(7),Fp:Fpk1,n:secp256k1N,Gx:BigInt(\"55066263022277343669578718895168534326250603453777594175500187360389116729240\"),Gy:BigInt(\"32670510020758816978083085130507043184471273380659243275938904335757337482424\"),h:BigInt(1),lowS:!0,endo:{beta:BigInt(\"0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\"),splitScalar:k=>{const n=secp256k1N,a1=BigInt(\"0x3086d221a7d46bcde86c90e49284eb15\"),b1=-_1n*BigInt(\"0xe4437ed6010e88286f547fa90abfe4c3\"),a2=BigInt(\"0x114ca50f7a8e2f3f657c1108d9d44cfd8\"),b2=a1,POW_2_128=BigInt(\"0x100000000000000000000000000000000\"),c1=divNearest(b2*k,n),c2=divNearest(-b1*k,n);let k1=mod(k-c1*a1-c2*a2,n),k2=mod(-c1*b1-c2*b2,n);const k1neg=k1>POW_2_128,k2neg=k2>POW_2_128;if(k1neg&&(k1=n-k1),k2neg&&(k2=n-k2),k1>POW_2_128||k2>POW_2_128)throw new Error(\"splitScalar: Endomorphism failed, k=\"+k);return{k1neg:k1neg,k1:k1,k2neg:k2neg,k2:k2}}}},sha256);const _0n=BigInt(0),TAGGED_HASH_PREFIXES={};function taggedHash(tag,...messages){let tagP=TAGGED_HASH_PREFIXES[tag];if(void 0===tagP){const tagH=sha256(Uint8Array.from(tag,c=>c.charCodeAt(0)));tagP=concatBytes(tagH,tagH),TAGGED_HASH_PREFIXES[tag]=tagP}return sha256(concatBytes(tagP,...messages))}const pointToBytes=point=>point.toRawBytes(!0).slice(1),numTo32b=n=>numberToBytesBE(n,32),modP=x=>mod(x,secp256k1P),modN=x=>mod(x,secp256k1N),Point=secp256k1.ProjectivePoint,GmulAdd=(Q,a,b)=>Point.BASE.multiplyAndAddUnsafe(Q,a,b);function schnorrGetExtPubKey(priv){let d_=secp256k1.utils.normPrivateKeyToScalar(priv),p=Point.fromPrivateKey(d_);return{scalar:p.hasEvenY()?d_:modN(-d_),bytes:pointToBytes(p)}}function lift_x(x){aInRange(\"x\",x,_1n,secp256k1P);const xx=modP(x*x);let y=sqrtMod(modP(xx*x+BigInt(7)));y%_2n!==_0n&&(y=modP(-y));const p=new Point(x,y,_1n);return p.assertValidity(),p}const num=bytesToNumberBE;function challenge(...args){return modN(num(taggedHash(\"BIP0340/challenge\",...args)))}function schnorrGetPublicKey(privateKey){return schnorrGetExtPubKey(privateKey).bytes}function schnorrSign(message,privateKey,auxRand=randomBytes(32)){const m=ensureBytes(\"message\",message),{bytes:px,scalar:d}=schnorrGetExtPubKey(privateKey),a=ensureBytes(\"auxRand\",auxRand,32),t=numTo32b(d^num(taggedHash(\"BIP0340/aux\",a))),rand=taggedHash(\"BIP0340/nonce\",t,px,m),k_=modN(num(rand));if(k_===_0n)throw new Error(\"sign failed: k is zero\");const{bytes:rx,scalar:k}=schnorrGetExtPubKey(k_),e=challenge(rx,px,m),sig=new Uint8Array(64);if(sig.set(rx,0),sig.set(numTo32b(modN(k+e*d)),32),!schnorrVerify(sig,m,px))throw new Error(\"sign: Invalid signature produced\");return sig}function schnorrVerify(signature,message,publicKey){const sig=ensureBytes(\"signature\",signature,64),m=ensureBytes(\"message\",message),pub=ensureBytes(\"publicKey\",publicKey,32);try{const P=lift_x(num(pub)),r=num(sig.subarray(0,32));if(!inRange(r,_1n,secp256k1P))return!1;const s=num(sig.subarray(32,64));if(!inRange(s,_1n,secp256k1N))return!1;const e=challenge(numTo32b(r),pointToBytes(P),m),R=GmulAdd(P,s,modN(-e));return!(!R||!R.hasEvenY()||R.toAffine().x!==r)}catch(error){return!1}}export const schnorr=(()=>({getPublicKey:schnorrGetPublicKey,sign:schnorrSign,verify:schnorrVerify,utils:{randomPrivateKey:secp256k1.utils.randomPrivateKey,lift_x:lift_x,pointToBytes:pointToBytes,numberToBytesBE:numberToBytesBE,bytesToNumberBE:bytesToNumberBE,taggedHash:taggedHash,mod:mod}}))();const isoMap=(()=>isogenyMap(Fpk1,[[\"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7\",\"0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581\",\"0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262\",\"0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c\"],[\"0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b\",\"0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"],[\"0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c\",\"0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3\",\"0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931\",\"0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84\"],[\"0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b\",\"0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573\",\"0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f\",\"0x0000000000000000000000000000000000000000000000000000000000000001\"]].map(i=>i.map(j=>BigInt(j)))))(),mapSWU=(()=>mapToCurveSimpleSWU(Fpk1,{A:BigInt(\"0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533\"),B:BigInt(\"1771\"),Z:Fpk1.create(BigInt(\"-11\"))}))(),htf=(()=>createHasher(secp256k1.ProjectivePoint,scalars=>{const{x:x,y:y}=mapSWU(Fpk1.create(scalars[0]));return isoMap(x,y)},{DST:\"secp256k1_XMD:SHA-256_SSWU_RO_\",encodeDST:\"secp256k1_XMD:SHA-256_SSWU_NU_\",p:Fpk1.ORDER,m:1,k:128,expand:\"xmd\",hash:sha256}))();export const hashToCurve=(()=>htf.hashToCurve)();export const encodeToCurve=(()=>htf.encodeToCurve)();"],"names":["anumber","n","Number","isSafeInteger","Error","b","lengths","a","Uint8Array","ArrayBuffer","isView","constructor","name","length","includes","aexists","instance","checkFinished","destroyed","finished","globalThis","crypto","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","Uint32Array","Array","from","_","i","toString","padStart","toBytes","data","str","TextEncoder","encode","utf8ToBytes","Hash","clone","this","_cloneInto","wrapConstructor","hashCons","hashC","msg","update","digest","tmp","outputLen","blockLen","create","randomBytes","bytesLength","getRandomValues","Chi","c","Maj","HashMD","padOffset","isLE","super","pos","view","len","take","Math","min","dataView","process","set","subarray","roundClean","digestInto","out","aoutput","fill","value","setBigUint64","_32n","BigInt","_u32_max","wh","wl","h","l","setUint32","oview","outLen","state","get","res","slice","destroy","to","SHA256_K","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","offset","getUint32","W15","W2","s0","s1","T1","T2","SHA224","sha256","HMAC","hash","_key","ahash","key","iHash","pad","oHash","buf","Object","getPrototypeOf","hmac","message","_0n","_1n","_2n","item","abool","title","bytes","hex","numberToHexUnpadded","num","hexToNumber","_0","_9","f","ch","hl","al","array","ai","hi","n1","charCodeAt","n2","char","reverse","numberToBytesBE","numberToBytesLE","expectedLength","e","arrays","sum","isPosBig","inRange","max","aInRange","bitLen","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","v","k","reset","reseed","seed","gen","sl","push","pred","validatorFns","bigint","val","function","boolean","string","stringOrUint8Array","isArray","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","type","isOptional","checkVal","String","entries","memoized","fn","map","WeakMap","arg","args","computed","_3n","_4n","_5n","_8n","mod","result","pow","power","modulo","pow2","x","invert","number","y","u","q","r","m","FpSqrt","P","p1div4","root","eql","sqr","c1","mul","nv","sub","ONE","legendreC","Q","S","Z","Q1div2","neg","g","ZERO","t2","ge","tonelliShanks","FIELD_FIELDS","validateField","reduce","ORDER","MASK","BYTES","BITS","nLength","nBitLength","_nBitLength","nByteLength","ceil","Field","redef","sqrtP","freeze","is0","isOdd","lhs","rhs","add","p","d","FpPow","div","sqrN","addN","subN","mulN","inv","sqrt","invertBatch","lst","nums","lastMultiplied","acc","inverted","reduceRight","FpInvertBatch","cmov","fromBytes","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","constTimeNegate","condition","negate","validateW","W","bits","calcWOpts","windows","windowSize","validateMSMPoints","points","forEach","validateMSMScalars","scalars","s","pointPrecomputes","pointWindowSizes","getW","validateBasic","curve","Gx","Gy","validateSigVerOpts","opts","lowS","prehash","b2n","h2b","DERErr","DER","Err","_tlv","tag","dataLen","lenLen","decode","first","lengthBytes","_int","parseInt","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","sig","seq","weierstrassPoints","CURVE","allowedPrivateKeyLengths","wrapPrivateKey","isTorsionFree","clearCofactor","allowInfinityPoint","endo","beta","splitScalar","validatePointOpts","Fn","_c","point","_isCompressed","toAffine","tail","weierstrassEquation","x2","x3","normPrivateKeyToScalar","N","error","assertPrjPoint","other","Point","toAffineMemo","iz","px","py","pz","z","ax","ay","zz","assertValidMemo","left","right","fromAffine","normalizeZ","toInv","fromHex","assertValidity","fromPrivateKey","privateKey","BASE","multiply","msm","fieldN","zero","wbits","buckets","floor","j","scalar","resI","sumI","double","pippenger","_setWindowSize","wnaf","setWindowSize","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t3","t4","t5","subtract","wNAF","wNAFCached","multiplyUnsafe","sc","I","hasPrecomputes","wNAFCachedUnsafe","k1neg","k1","k2neg","k2","k1p","k2p","fake","f1p","f2p","multiplyAndAddUnsafe","cofactor","toRawBytes","isCompressed","toHex","_bits","elm","unsafeLadder","precomputeWindow","base","window","precomputes","mask","maxNumber","shiftBy","offset1","offset2","abs","cond1","cond2","wNAFUnsafe","curr","getPrecomputes","transform","comp","prev","delete","ProjectivePoint","isWithinCurveOrder","weierstrass","curveDef","bits2int","bits2int_modN","validateOpts","CURVE_ORDER","compressedLen","uncompressedLen","modN","invN","cat","head","y2","sqrtError","suffix","numToNByteStr","isBiggerThanHalfOrder","slcNum","Signature","recovery","fromCompact","fromDER","addRecoveryBit","recoverPublicKey","msgHash","rec","radj","prefix","R","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","mapHashToField","precompute","isProbPub","delta","ORDER_MASK","int2octets","defaultSigOpts","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","k2sig","some","extraEntropy","ent","h1int","seedArgs","kBytes","ik","normS","prepSig","verify","signature","publicKey","sg","format","isHex","isObj","_sig","derError","is","mapToCurveSimpleSWU","sqrtRatio","o","_2n_pow_c1_1","_2n_pow_c1","c2","c3","c4","c5","c6","c7","tv1","tv2","tv3","tv5","tv4","isQR","tvv5","e1","y1","SWUFpSqrtRatio","tv6","getHash","msgs","concatBytes","os2ip","i2osp","anum","strxor","hash_to_field","count","options","DST","expand","_DST","log2p","L","len_in_bytes","prb","lenInBytes","b_in_bytes","r_in_bytes","ell","DST_prime","Z_pad","l_i_b_str","b_0","expand_message_xmd","dkLen","expand_message_xof","elm_offset","tv","secp256k1P","secp256k1N","divNearest","sqrtMod","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","Fpk1","secp256k1","defHash","createCurve","a1","b1","a2","POW_2_128","TAGGED_HASH_PREFIXES","taggedHash","messages","tagP","tagH","pointToBytes","numTo32b","modP","schnorrGetExtPubKey","priv","d_","lift_x","xx","challenge","schnorrGetPublicKey","schnorrSign","auxRand","t","rand","k_","rx","schnorrVerify","pub","isoMap","COEFF","xNum","xDen","yNum","yDen","isogenyMap","mapSWU","htf","mapToCurve","def","hashToCurve","u0","encodeToCurve","encodeDST","createHasher"],"sourceRoot":""}