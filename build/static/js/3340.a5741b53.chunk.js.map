{"version":3,"file":"static/js/3340.a5741b53.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/minus.js","components/InputStepCounter/InputStepCounter.tsx","components/RangeSelector/index.tsx","hooks/useIsArgentWallet.ts","pages/AddLiquidity/styled.tsx","utils/getTickToPrice.ts","state/mint/v3/utils.ts","state/mint/v3/hooks.tsx"],"sourcesContent":["function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=_objectWithoutPropertiesLoose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}import React,{forwardRef}from\"react\";import PropTypes from\"prop-types\";var Minus=forwardRef((function(_ref,ref){var _ref$color=_ref.color,color=void 0===_ref$color?\"currentColor\":_ref$color,_ref$size=_ref.size,size=void 0===_ref$size?24:_ref$size,rest=_objectWithoutProperties(_ref,[\"color\",\"size\"]);return React.createElement(\"svg\",_extends({ref:ref,xmlns:\"http://www.w3.org/2000/svg\",width:size,height:size,viewBox:\"0 0 24 24\",fill:\"none\",stroke:color,strokeWidth:\"2\",strokeLinecap:\"round\",strokeLinejoin:\"round\"},rest),React.createElement(\"line\",{x1:\"5\",y1:\"12\",x2:\"19\",y2:\"12\"}))}));Minus.propTypes={color:PropTypes.string,size:PropTypes.oneOfType([PropTypes.string,PropTypes.number])},Minus.displayName=\"Minus\";export default Minus;","import { Trans } from '@lingui/macro'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { ButtonGray } from 'components/Button'\nimport { OutlineCard } from 'components/Card'\nimport { AutoColumn } from 'components/Column'\nimport { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { Minus, Plus } from 'react-feather'\nimport styled, { keyframes } from 'styled-components'\nimport { ThemedText } from 'theme/components'\n\nimport { Input as NumericalInput } from '../NumericalInput'\n\nconst pulse = (color: string) => keyframes`\n  0% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n\n  70% {\n    box-shadow: 0 0 0 2px ${color};\n  }\n\n  100% {\n    box-shadow: 0 0 0 0 ${color};\n  }\n`\n\nconst InputRow = styled.div`\n  display: flex;\n`\n\nconst SmallButton = styled(ButtonGray)`\n  border-radius: 8px;\n  padding: 4px;\n`\n\nconst FocusedOutlineCard = styled(OutlineCard)<{ active?: boolean; pulsing?: boolean }>`\n  border-color: ${({ active, theme }) => active && theme.deprecated_stateOverlayPressed};\n  padding: 12px;\n  animation: ${({ pulsing, theme }) => pulsing && pulse(theme.accent1)} 0.8s linear;\n`\n\nconst StyledInput = styled(NumericalInput)<{ usePercent?: boolean }>`\n  background-color: transparent;\n  font-weight: 535;\n  text-align: left;\n  width: 100%;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToSmall`\n    font-size: 16px;\n  `};\n`\n\nconst InputColumn = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst InputTitle = styled(ThemedText.DeprecatedSmall)`\n  color: ${({ theme }) => theme.neutral2};\n  font-size: 12px;\n  font-weight: 535;\n`\n\nconst ButtonLabel = styled(ThemedText.DeprecatedWhite)<{ disabled: boolean }>`\n  color: ${({ theme, disabled }) => (disabled ? theme.neutral2 : theme.neutral1)} !important;\n  display: flex;\n`\n\ninterface StepCounterProps {\n  value: string\n  onUserInput: (value: string) => void\n  decrement: () => string\n  increment: () => string\n  decrementDisabled?: boolean\n  incrementDisabled?: boolean\n  feeAmount?: FeeAmount\n  label?: string\n  width?: string\n  locked?: boolean // disable input\n  title: ReactNode\n  tokenA?: string\n  tokenB?: string\n}\n\nconst StepCounter = ({\n  value,\n  decrement,\n  increment,\n  decrementDisabled = false,\n  incrementDisabled = false,\n  width,\n  locked,\n  onUserInput,\n  title,\n  tokenA,\n  tokenB,\n}: StepCounterProps) => {\n  //  for focus state, styled components doesnt let you select input parent container\n  const [active, setActive] = useState(false)\n\n  // let user type value and only update parent value on blur\n  const [localValue, setLocalValue] = useState('')\n  const [useLocalValue, setUseLocalValue] = useState(false)\n\n  // animation if parent value updates local value\n  const [pulsing, setPulsing] = useState<boolean>(false)\n\n  const handleOnFocus = () => {\n    setUseLocalValue(true)\n    setActive(true)\n  }\n\n  const handleOnBlur = useCallback(() => {\n    setUseLocalValue(false)\n    setActive(false)\n    onUserInput(localValue) // trigger update on parent value\n  }, [localValue, onUserInput])\n\n  // for button clicks\n  const handleDecrement = useCallback(() => {\n    setUseLocalValue(false)\n    onUserInput(decrement())\n  }, [decrement, onUserInput])\n\n  const handleIncrement = useCallback(() => {\n    setUseLocalValue(false)\n    onUserInput(increment())\n  }, [increment, onUserInput])\n\n  useEffect(() => {\n    if (localValue !== value && !useLocalValue) {\n      setTimeout(() => {\n        setLocalValue(value) // reset local value to match parent\n        setPulsing(true) // trigger animation\n        setTimeout(function () {\n          setPulsing(false)\n        }, 1800)\n      }, 0)\n    }\n  }, [localValue, useLocalValue, value])\n\n  return (\n    <FocusedOutlineCard pulsing={pulsing} active={active} onFocus={handleOnFocus} onBlur={handleOnBlur} width={width}>\n      <InputRow>\n        <InputColumn justify=\"flex-start\">\n          <InputTitle fontSize={12} textAlign=\"center\">\n            {title}\n          </InputTitle>\n          <StyledInput\n            className=\"rate-input-0\"\n            value={localValue}\n            fontSize=\"20px\"\n            disabled={locked}\n            onUserInput={(val) => {\n              setLocalValue(val)\n            }}\n          />\n          <InputTitle fontSize={12} textAlign=\"left\">\n            <Trans>\n              {tokenB} per {tokenA}\n            </Trans>\n          </InputTitle>\n        </InputColumn>\n\n        <AutoColumn gap=\"8px\">\n          {!locked && (\n            <SmallButton data-testid=\"increment-price-range\" onClick={handleIncrement} disabled={incrementDisabled}>\n              <ButtonLabel disabled={incrementDisabled} fontSize=\"12px\">\n                <Plus size={18} />\n              </ButtonLabel>\n            </SmallButton>\n          )}\n          {!locked && (\n            <SmallButton data-testid=\"decrement-price-range\" onClick={handleDecrement} disabled={decrementDisabled}>\n              <ButtonLabel disabled={decrementDisabled} fontSize=\"12px\">\n                <Minus size={18} />\n              </ButtonLabel>\n            </SmallButton>\n          )}\n        </AutoColumn>\n      </InputRow>\n    </FocusedOutlineCard>\n  )\n}\n\nexport default StepCounter\n","import { Trans } from '@lingui/macro'\nimport { Currency, Price, Token } from '@vanadex/sdk-core'\nimport StepCounter from 'components/InputStepCounter/InputStepCounter'\nimport { AutoRow } from 'components/Row'\nimport { Bound } from 'state/mint/v3/actions'\n\n// currencyA is the base token\nexport default function RangeSelector({\n  priceLower,\n  priceUpper,\n  onLeftRangeInput,\n  onRightRangeInput,\n  getDecrementLower,\n  getIncrementLower,\n  getDecrementUpper,\n  getIncrementUpper,\n  currencyA,\n  currencyB,\n  feeAmount,\n  ticksAtLimit,\n}: {\n  priceLower?: Price<Token, Token>\n  priceUpper?: Price<Token, Token>\n  getDecrementLower: () => string\n  getIncrementLower: () => string\n  getDecrementUpper: () => string\n  getIncrementUpper: () => string\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  currencyA?: Currency | null\n  currencyB?: Currency | null\n  feeAmount?: number\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n}) {\n  const tokenA = (currencyA ?? undefined)?.wrapped\n  const tokenB = (currencyB ?? undefined)?.wrapped\n  const isSorted = tokenA && tokenB && tokenA.sortsBefore(tokenB)\n\n  const leftPrice = isSorted ? priceLower : priceUpper?.invert()\n  const rightPrice = isSorted ? priceUpper : priceLower?.invert()\n\n  return (\n    <AutoRow gap=\"md\">\n      <StepCounter\n        value={ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER] ? '0' : leftPrice?.toSignificant(8) ?? ''}\n        onUserInput={onLeftRangeInput}\n        decrement={isSorted ? getDecrementLower : getIncrementUpper}\n        increment={isSorted ? getIncrementLower : getDecrementUpper}\n        decrementDisabled={leftPrice === undefined || ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n        incrementDisabled={leftPrice === undefined || ticksAtLimit[isSorted ? Bound.LOWER : Bound.UPPER]}\n        feeAmount={feeAmount}\n        label={leftPrice ? `${currencyB?.symbol}` : '-'}\n        title={<Trans>Low price</Trans>}\n        tokenA={currencyA?.symbol}\n        tokenB={currencyB?.symbol}\n      />\n      <StepCounter\n        value={ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER] ? '∞' : rightPrice?.toSignificant(8) ?? ''}\n        onUserInput={onRightRangeInput}\n        decrement={isSorted ? getDecrementUpper : getIncrementLower}\n        increment={isSorted ? getIncrementUpper : getDecrementLower}\n        incrementDisabled={rightPrice === undefined || ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n        decrementDisabled={rightPrice === undefined || ticksAtLimit[isSorted ? Bound.UPPER : Bound.LOWER]}\n        feeAmount={feeAmount}\n        label={rightPrice ? `${currencyB?.symbol}` : '-'}\n        tokenA={currencyA?.symbol}\n        tokenB={currencyB?.symbol}\n        title={<Trans>High price</Trans>}\n      />\n    </AutoRow>\n  )\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { NEVER_RELOAD, useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useArgentWalletDetectorContract } from './useContract'\n\nexport default function useIsArgentWallet(): boolean {\n  const { account } = useWeb3React()\n  const argentWalletDetector = useArgentWalletDetectorContract()\n  const inputs = useMemo(() => [account ?? undefined], [account])\n  const call = useSingleCallResult(argentWalletDetector, 'isArgentWallet', inputs, NEVER_RELOAD)\n  return Boolean(call?.result?.[0])\n}\n","import { AutoColumn } from 'components/Column'\nimport { Input } from 'components/NumericalInput'\nimport styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 26px 16px;\n`\n\nexport const ScrollablePage = styled.div`\n  padding: 20px 8px 0px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    margin: 0 auto;\n  `};\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    padding: 48px 8px 0px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    padding-top: 20px;\n  }\n`\n\nexport const DynamicSection = styled(AutoColumn)<{ disabled?: boolean }>`\n  opacity: ${({ disabled }) => (disabled ? '0.2' : '1')};\n  pointer-events: ${({ disabled }) => (disabled ? 'none' : 'initial')};\n`\n\nexport const StyledInput = styled(Input)`\n  background-color: ${({ theme }) => theme.surface1};\n  text-align: left;\n  font-size: 18px;\n  width: 100%;\n`\n\n/* two-column layout where DepositAmount is moved at the very end on mobile. */\nexport const ResponsiveTwoColumns = styled.div<{ wide: boolean }>`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding-top: 20px;\n\n  border-top: 1px solid ${({ theme }) => theme.surface3};\n\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    margin-top: 0;\n  `};\n`\n\nexport const MediumOnly = styled.div`\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    display: none;\n  `};\n`\n","import { Price, Token } from '@uniswap/sdk-core'\nimport { tickToPrice } from '@uniswap/v3-sdk'\n\nexport function getTickToPrice(baseToken?: Token, quoteToken?: Token, tick?: number): Price<Token, Token> | undefined {\n  if (!baseToken || !quoteToken || typeof tick !== 'number') {\n    return undefined\n  }\n  return tickToPrice(baseToken, quoteToken, tick)\n}\n","import { Price } from '@uniswap/sdk-core'\nimport {\n  encodeSqrtRatioX96,\n  FeeAmount,\n  nearestUsableTick,\n  priceToClosestTick,\n  TICK_SPACINGS,\n  TickMath,\n} from '@uniswap/v3-sdk'\nimport { Token } from '@vanadex/sdk-core'\nimport JSBI from 'jsbi'\n\nexport function tryParsePrice(baseToken?: Token, quoteToken?: Token, value?: string) {\n  if (!baseToken || !quoteToken || !value) {\n    return undefined\n  }\n\n  if (!value.match(/^\\d*\\.?\\d+$/)) {\n    return undefined\n  }\n\n  const [whole, fraction] = value.split('.')\n\n  const decimals = fraction?.length ?? 0\n  const withoutDecimals = JSBI.BigInt((whole ?? '') + (fraction ?? ''))\n\n  return new Price(\n    baseToken,\n    quoteToken,\n    JSBI.multiply(JSBI.BigInt(10 ** decimals), JSBI.BigInt(10 ** baseToken.decimals)),\n    JSBI.multiply(withoutDecimals, JSBI.BigInt(10 ** quoteToken.decimals))\n  )\n}\n\nexport function tryParseTick(\n  baseToken?: Token,\n  quoteToken?: Token,\n  feeAmount?: FeeAmount,\n  value?: string\n): number | undefined {\n  if (!baseToken || !quoteToken || !feeAmount || !value) {\n    return undefined\n  }\n\n  const price = tryParsePrice(baseToken, quoteToken, value)\n\n  if (!price) {\n    return undefined\n  }\n\n  let tick: number\n\n  // check price is within min/max bounds, if outside return min/max\n  const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator)\n\n  if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\n    tick = TickMath.MAX_TICK\n  } else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\n    tick = TickMath.MIN_TICK\n  } else {\n    // this function is agnostic to the base, will always return the correct tick\n    tick = priceToClosestTick(price)\n  }\n\n  return nearestUsableTick(tick, TICK_SPACINGS[feeAmount])\n}\n","import { Trans } from '@lingui/macro'\nimport {\n  encodeSqrtRatioX96,\n  FeeAmount,\n  nearestUsableTick,\n  Pool,\n  Position,\n  priceToClosestTick,\n  TICK_SPACINGS,\n  TickMath,\n  tickToPrice,\n} from '@uniswap/v3-sdk'\nimport { Currency, CurrencyAmount, Price as VanadexPrice, Rounding, Token } from '@vanadex/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePool } from 'hooks/usePools'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { getTickToPrice } from 'utils/getTickToPrice'\n\nimport { BIG_INT_ZERO } from '../../../constants/misc'\nimport { PoolState } from '../../../hooks/usePools'\nimport { useCurrencyBalances } from '../../connection/hooks'\nimport { AppState } from '../../reducer'\nimport {\n  Bound,\n  Field,\n  setFullRange,\n  typeInput,\n  typeLeftRangeInput,\n  typeRightRangeInput,\n  typeStartPriceInput,\n} from './actions'\nimport { tryParseTick } from './utils'\n\nexport function useV3MintState(): AppState['mintV3'] {\n  return useAppSelector((state) => state.mintV3)\n}\n\nexport function useV3MintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n  onLeftRangeInput: (typedValue: string) => void\n  onRightRangeInput: (typedValue: string) => void\n  onStartPriceInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const onLeftRangeInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeLeftRangeInput({ typedValue }))\n      const paramMinPrice = searchParams.get('minPrice')\n      if (!paramMinPrice || (paramMinPrice && paramMinPrice !== typedValue)) {\n        searchParams.set('minPrice', typedValue)\n        setSearchParams(searchParams)\n      }\n    },\n    [dispatch, searchParams, setSearchParams]\n  )\n\n  const onRightRangeInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeRightRangeInput({ typedValue }))\n      const paramMaxPrice = searchParams.get('maxPrice')\n      if (!paramMaxPrice || (paramMaxPrice && paramMaxPrice !== typedValue)) {\n        searchParams.set('maxPrice', typedValue)\n        setSearchParams(searchParams)\n      }\n    },\n    [dispatch, searchParams, setSearchParams]\n  )\n\n  const onStartPriceInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeStartPriceInput({ typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n    onLeftRangeInput,\n    onRightRangeInput,\n    onStartPriceInput,\n  }\n}\n\nexport function useV3DerivedMintInfo(\n  currencyA?: Currency,\n  currencyB?: Currency,\n  feeAmount?: FeeAmount,\n  baseCurrency?: Currency,\n  // override for existing position\n  existingPosition?: Position\n): {\n  pool?: Pool | null\n  poolState: PoolState\n  ticks: { [bound in Bound]?: number | undefined }\n  price?: VanadexPrice<Token, Token>\n  pricesAtTicks: {\n    [bound in Bound]?: VanadexPrice<Token, Token> | undefined\n  }\n  pricesAtLimit: {\n    [bound in Bound]?: VanadexPrice<Token, Token> | undefined\n  }\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  dependentField: Field\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  position?: Position\n  noLiquidity?: boolean\n  errorMessage?: ReactNode\n  invalidPool: boolean\n  outOfRange: boolean\n  invalidRange: boolean\n  depositADisabled: boolean\n  depositBDisabled: boolean\n  invertPrice: boolean\n  ticksAtLimit: { [bound in Bound]?: boolean | undefined }\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue, leftRangeTypedValue, rightRangeTypedValue, startPriceTypedValue } =\n    useV3MintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // currencies\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA,\n      [Field.CURRENCY_B]: currencyB,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // formatted with tokens\n  const [tokenA, tokenB, baseToken] = useMemo(\n    () => [currencyA?.wrapped, currencyB?.wrapped, baseCurrency?.wrapped],\n    [currencyA, currencyB, baseCurrency]\n  )\n\n  const [token0, token1] = useMemo(\n    () =>\n      tokenA && tokenB ? (tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]) : [undefined, undefined],\n    [tokenA, tokenB]\n  )\n\n  // balances\n  const balances = useCurrencyBalances(\n    account ?? undefined,\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies])\n  )\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // pool\n  const [poolState, pool] = usePool(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B], feeAmount)\n  const noLiquidity = poolState === PoolState.NOT_EXISTS\n\n  // note to parse inputs in reverse\n  const invertPrice = Boolean(baseToken && token0 && !baseToken.equals(token0))\n\n  // always returns the price with 0 as base token\n  const price: VanadexPrice<Token, Token> | undefined = useMemo(() => {\n    // if no liquidity use typed value\n    if (noLiquidity) {\n      const parsedQuoteAmount = tryParseCurrencyAmount(startPriceTypedValue, invertPrice ? token0 : token1)\n      if (parsedQuoteAmount && token0 && token1) {\n        const baseAmount = tryParseCurrencyAmount('1', invertPrice ? token1 : token0)\n        const price =\n          baseAmount && parsedQuoteAmount\n            ? new VanadexPrice(\n                baseAmount.currency,\n                parsedQuoteAmount.currency,\n                baseAmount.quotient,\n                parsedQuoteAmount.quotient\n              )\n            : undefined\n        return (invertPrice ? price?.invert() : price) ?? undefined\n      }\n      return undefined\n    } else {\n      // get the amount of quote currency\n      return pool && token0 ? pool.priceOf(token0) : undefined\n    }\n  }, [noLiquidity, startPriceTypedValue, invertPrice, token1, token0, pool])\n\n  // check for invalid price input (converts to invalid ratio)\n  const invalidPrice = useMemo(() => {\n    const sqrtRatioX96 = price ? encodeSqrtRatioX96(price.numerator, price.denominator) : undefined\n    return (\n      price &&\n      sqrtRatioX96 &&\n      !(\n        JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO) &&\n        JSBI.lessThan(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)\n      )\n    )\n  }, [price])\n\n  // used for ratio calculation when pool not initialized\n  const mockPool = useMemo(() => {\n    if (tokenA && tokenB && feeAmount && price && !invalidPrice) {\n      const currentTick = priceToClosestTick(price)\n      const currentSqrt = TickMath.getSqrtRatioAtTick(currentTick)\n      return new Pool(tokenA, tokenB, feeAmount, currentSqrt, JSBI.BigInt(0), currentTick, [])\n    } else {\n      return undefined\n    }\n  }, [feeAmount, invalidPrice, price, tokenA, tokenB])\n\n  // if pool exists use it, if not use the mock pool\n  const poolForPosition: Pool | undefined = pool ?? mockPool\n\n  // lower and upper limits in the tick space for `feeAmoun<Trans>\n  const tickSpaceLimits = useMemo(\n    () => ({\n      [Bound.LOWER]: feeAmount ? nearestUsableTick(TickMath.MIN_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n      [Bound.UPPER]: feeAmount ? nearestUsableTick(TickMath.MAX_TICK, TICK_SPACINGS[feeAmount]) : undefined,\n    }),\n    [feeAmount]\n  )\n\n  // parse typed range values and determine closest ticks\n  // lower should always be a smaller tick\n  const ticks = useMemo(() => {\n    return {\n      [Bound.LOWER]:\n        typeof existingPosition?.tickLower === 'number'\n          ? existingPosition.tickLower\n          : (invertPrice && typeof rightRangeTypedValue === 'boolean') ||\n            (!invertPrice && typeof leftRangeTypedValue === 'boolean')\n          ? tickSpaceLimits[Bound.LOWER]\n          : invertPrice\n          ? tryParseTick(token1, token0, feeAmount, rightRangeTypedValue.toString())\n          : tryParseTick(token0, token1, feeAmount, leftRangeTypedValue.toString()),\n      [Bound.UPPER]:\n        typeof existingPosition?.tickUpper === 'number'\n          ? existingPosition.tickUpper\n          : (!invertPrice && typeof rightRangeTypedValue === 'boolean') ||\n            (invertPrice && typeof leftRangeTypedValue === 'boolean')\n          ? tickSpaceLimits[Bound.UPPER]\n          : invertPrice\n          ? tryParseTick(token1, token0, feeAmount, leftRangeTypedValue.toString())\n          : tryParseTick(token0, token1, feeAmount, rightRangeTypedValue.toString()),\n    }\n  }, [\n    existingPosition,\n    feeAmount,\n    invertPrice,\n    leftRangeTypedValue,\n    rightRangeTypedValue,\n    token0,\n    token1,\n    tickSpaceLimits,\n  ])\n\n  const { [Bound.LOWER]: tickLower, [Bound.UPPER]: tickUpper } = ticks || {}\n\n  // specifies whether the lower and upper ticks is at the exteme bounds\n  const ticksAtLimit = useMemo(\n    () => ({\n      [Bound.LOWER]: feeAmount && tickLower === tickSpaceLimits.LOWER,\n      [Bound.UPPER]: feeAmount && tickUpper === tickSpaceLimits.UPPER,\n    }),\n    [tickSpaceLimits, tickLower, tickUpper, feeAmount]\n  )\n\n  // mark invalid range\n  const invalidRange = Boolean(typeof tickLower === 'number' && typeof tickUpper === 'number' && tickLower >= tickUpper)\n\n  const pricesAtLimit = useMemo(() => {\n    return {\n      [Bound.LOWER]: getTickToPrice(token0, token1, tickSpaceLimits.LOWER),\n      [Bound.UPPER]: getTickToPrice(token0, token1, tickSpaceLimits.UPPER),\n    }\n  }, [token0, token1, tickSpaceLimits.LOWER, tickSpaceLimits.UPPER])\n\n  // always returns the price with 0 as base token\n  const pricesAtTicks = useMemo(() => {\n    return {\n      [Bound.LOWER]: getTickToPrice(token0, token1, ticks[Bound.LOWER]),\n      [Bound.UPPER]: getTickToPrice(token0, token1, ticks[Bound.UPPER]),\n    }\n  }, [token0, token1, ticks])\n  const { [Bound.LOWER]: lowerPrice, [Bound.UPPER]: upperPrice } = pricesAtTicks\n\n  // liquidity range warning\n  const outOfRange = Boolean(\n    !invalidRange && price && lowerPrice && upperPrice && (price.lessThan(lowerPrice) || price.greaterThan(upperPrice))\n  )\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseCurrencyAmount(\n    typedValue,\n    currencies[independentField]\n  )\n\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    // we wrap the currencies just to get the price in terms of the other token\n    const wrappedIndependentAmount = independentAmount?.wrapped\n    const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n    if (\n      independentAmount &&\n      wrappedIndependentAmount &&\n      typeof tickLower === 'number' &&\n      typeof tickUpper === 'number' &&\n      poolForPosition\n    ) {\n      // if price is out of range or invalid range - return 0 (single deposit will be independent)\n      if (outOfRange || invalidRange) {\n        return undefined\n      }\n\n      const position: Position | undefined = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n        ? Position.fromAmount0({\n            pool: poolForPosition,\n            tickLower,\n            tickUpper,\n            amount0: independentAmount.quotient,\n            useFullPrecision: true, // we want full precision for the theoretical position\n          })\n        : Position.fromAmount1({\n            pool: poolForPosition,\n            tickLower,\n            tickUpper,\n            amount1: independentAmount.quotient,\n          })\n\n      const dependentTokenAmount = wrappedIndependentAmount.currency.equals(poolForPosition.token0)\n        ? position.amount1\n        : position.amount0\n      return dependentCurrency && CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n    }\n\n    return undefined\n  }, [\n    independentAmount,\n    outOfRange,\n    dependentField,\n    currencyB,\n    currencyA,\n    tickLower,\n    tickUpper,\n    poolForPosition,\n    invalidRange,\n  ])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  // single deposit only if price is out of range\n  const deposit0Disabled = Boolean(\n    typeof tickUpper === 'number' && poolForPosition && poolForPosition.tickCurrent >= tickUpper\n  )\n  const deposit1Disabled = Boolean(\n    typeof tickLower === 'number' && poolForPosition && poolForPosition.tickCurrent <= tickLower\n  )\n\n  // sorted for token order\n  const depositADisabled =\n    invalidRange ||\n    Boolean(\n      (deposit0Disabled && poolForPosition && tokenA && poolForPosition.token0.equals(tokenA)) ||\n        (deposit1Disabled && poolForPosition && tokenA && poolForPosition.token1.equals(tokenA))\n    )\n  const depositBDisabled =\n    invalidRange ||\n    Boolean(\n      (deposit0Disabled && poolForPosition && tokenB && poolForPosition.token0.equals(tokenB)) ||\n        (deposit1Disabled && poolForPosition && tokenB && poolForPosition.token1.equals(tokenB))\n    )\n\n  // create position entity based on users selection\n  const position: Position | undefined = useMemo(() => {\n    if (\n      !poolForPosition ||\n      !tokenA ||\n      !tokenB ||\n      typeof tickLower !== 'number' ||\n      typeof tickUpper !== 'number' ||\n      invalidRange\n    ) {\n      return undefined\n    }\n\n    // mark as 0 if disabled because out of range\n    const amount0 = !deposit0Disabled\n      ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? Field.CURRENCY_A : Field.CURRENCY_B]?.quotient\n      : BIG_INT_ZERO\n    const amount1 = !deposit1Disabled\n      ? parsedAmounts?.[tokenA.equals(poolForPosition.token0) ? Field.CURRENCY_B : Field.CURRENCY_A]?.quotient\n      : BIG_INT_ZERO\n\n    if (amount0 !== undefined && amount1 !== undefined) {\n      return Position.fromAmounts({\n        pool: poolForPosition,\n        tickLower,\n        tickUpper,\n        amount0,\n        amount1,\n        useFullPrecision: true, // we want full precision for the theoretical position\n      })\n    } else {\n      return undefined\n    }\n  }, [\n    parsedAmounts,\n    poolForPosition,\n    tokenA,\n    tokenB,\n    deposit0Disabled,\n    deposit1Disabled,\n    invalidRange,\n    tickLower,\n    tickUpper,\n  ])\n\n  let errorMessage: ReactNode | undefined\n  if (!account) {\n    errorMessage = <Trans>Connect wallet</Trans>\n  }\n\n  if (poolState === PoolState.INVALID) {\n    errorMessage = errorMessage ?? <Trans>Invalid pair</Trans>\n  }\n\n  if (invalidPrice) {\n    errorMessage = errorMessage ?? <Trans>Invalid price input</Trans>\n  }\n\n  if (\n    (!parsedAmounts[Field.CURRENCY_A] && !depositADisabled) ||\n    (!parsedAmounts[Field.CURRENCY_B] && !depositBDisabled)\n  ) {\n    errorMessage = errorMessage ?? <Trans>Enter an amount</Trans>\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    errorMessage = <Trans>Insufficient {currencies[Field.CURRENCY_A]?.symbol} balance</Trans>\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    errorMessage = <Trans>Insufficient {currencies[Field.CURRENCY_B]?.symbol} balance</Trans>\n  }\n\n  const invalidPool = poolState === PoolState.INVALID\n\n  return {\n    dependentField,\n    currencies,\n    pool,\n    poolState,\n    currencyBalances,\n    parsedAmounts,\n    ticks,\n    price,\n    pricesAtTicks,\n    pricesAtLimit,\n    position,\n    noLiquidity,\n    errorMessage,\n    invalidPool,\n    invalidRange,\n    outOfRange,\n    depositADisabled,\n    depositBDisabled,\n    invertPrice,\n    ticksAtLimit,\n  }\n}\n\nexport function useRangeHopCallbacks(\n  baseCurrency: Currency | undefined,\n  quoteCurrency: Currency | undefined,\n  feeAmount: FeeAmount | undefined,\n  tickLower: number | undefined,\n  tickUpper: number | undefined,\n  pool?: Pool | undefined | null\n) {\n  const dispatch = useAppDispatch()\n\n  const baseToken = useMemo(() => baseCurrency?.wrapped, [baseCurrency])\n  const quoteToken = useMemo(() => quoteCurrency?.wrapped, [quoteCurrency])\n\n  const getDecrementLower = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickLower === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickLower - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickLower === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickLower, feeAmount, pool])\n\n  const getIncrementLower = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickLower === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickLower + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickLower === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickLower, feeAmount, pool])\n\n  const getDecrementUpper = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickUpper === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickUpper - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickUpper === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent - TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickUpper, feeAmount, pool])\n\n  const getIncrementUpper = useCallback(() => {\n    if (baseToken && quoteToken && typeof tickUpper === 'number' && feeAmount) {\n      const newPrice = tickToPrice(baseToken, quoteToken, tickUpper + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    // use pool current tick as starting tick if we have pool but no tick input\n    if (!(typeof tickUpper === 'number') && baseToken && quoteToken && feeAmount && pool) {\n      const newPrice = tickToPrice(baseToken, quoteToken, pool.tickCurrent + TICK_SPACINGS[feeAmount])\n      return newPrice.toSignificant(5, undefined, Rounding.ROUND_UP)\n    }\n    return ''\n  }, [baseToken, quoteToken, tickUpper, feeAmount, pool])\n\n  const getSetFullRange = useCallback(() => {\n    dispatch(setFullRange())\n  }, [dispatch])\n\n  return { getDecrementLower, getIncrementLower, getDecrementUpper, getIncrementUpper, getSetFullRange }\n}\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Minus","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","propTypes","displayName","InputRow","styled","div","SmallButton","ButtonGray","FocusedOutlineCard","OutlineCard","active","theme","deprecated_stateOverlayPressed","pulsing","accent1","keyframes","StyledInput","NumericalInput","deprecated_mediaWidth","deprecated_upToSmall","InputColumn","AutoColumn","InputTitle","ThemedText","DeprecatedSmall","neutral2","ButtonLabel","DeprecatedWhite","disabled","neutral1","value","decrement","increment","decrementDisabled","incrementDisabled","locked","onUserInput","title","tokenA","tokenB","setActive","useState","localValue","setLocalValue","useLocalValue","setUseLocalValue","setPulsing","handleOnBlur","useCallback","handleDecrement","handleIncrement","useEffect","setTimeout","onFocus","onBlur","justify","fontSize","textAlign","className","val","gap","data-testid","onClick","Plus","RangeSelector","priceLower","priceUpper","onLeftRangeInput","onRightRangeInput","getDecrementLower","getIncrementLower","getDecrementUpper","getIncrementUpper","currencyA","currencyB","feeAmount","ticksAtLimit","undefined","wrapped","isSorted","sortsBefore","leftPrice","invert","rightPrice","AutoRow","StepCounter","Bound","LOWER","UPPER","toSignificant","label","symbol","useIsArgentWallet","account","useWeb3React","argentWalletDetector","useArgentWalletDetectorContract","inputs","useMemo","useSingleCallResult","NEVER_RELOAD","Boolean","result","Wrapper","ScrollablePage","deprecated_upToMedium","breakpoint","md","sm","DynamicSection","Input","surface1","ResponsiveTwoColumns","surface3","MediumOnly","getTickToPrice","baseToken","quoteToken","tick","tickToPrice","tryParseTick","price","match","whole","fraction","split","decimals","withoutDecimals","JSBI","Price","tryParsePrice","sqrtRatioX96","encodeSqrtRatioX96","numerator","denominator","TickMath","MAX_SQRT_RATIO","MAX_TICK","MIN_SQRT_RATIO","MIN_TICK","priceToClosestTick","nearestUsableTick","TICK_SPACINGS","useV3MintState","useAppSelector","state","mintV3","useV3MintActionHandlers","noLiquidity","dispatch","useAppDispatch","onFieldAInput","typedValue","typeInput","field","Field","CURRENCY_A","onFieldBInput","CURRENCY_B","searchParams","setSearchParams","useSearchParams","typeLeftRangeInput","paramMinPrice","get","set","typeRightRangeInput","paramMaxPrice","onStartPriceInput","typeStartPriceInput","useV3DerivedMintInfo","baseCurrency","existingPosition","independentField","leftRangeTypedValue","rightRangeTypedValue","startPriceTypedValue","dependentField","currencies","token0","token1","balances","useCurrencyBalances","currencyBalances","poolState","pool","usePool","PoolState","NOT_EXISTS","invertPrice","equals","priceOf","parsedQuoteAmount","tryParseCurrencyAmount","baseAmount","VanadexPrice","currency","quotient","invalidPrice","mockPool","currentTick","currentSqrt","getSqrtRatioAtTick","Pool","poolForPosition","tickSpaceLimits","ticks","tickLower","toString","tickUpper","invalidRange","pricesAtLimit","pricesAtTicks","lowerPrice","upperPrice","outOfRange","lessThan","greaterThan","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","position","Position","fromAmount0","amount0","useFullPrecision","fromAmount1","amount1","dependentTokenAmount","CurrencyAmount","fromRawAmount","parsedAmounts","deposit0Disabled","tickCurrent","deposit1Disabled","depositADisabled","depositBDisabled","BIG_INT_ZERO","fromAmounts","errorMessage","INVALID","currencyAAmount","currencyBAmount","invalidPool","useRangeHopCallbacks","quoteCurrency","Rounding","ROUND_UP","getSetFullRange","setFullRange"],"sourceRoot":""}