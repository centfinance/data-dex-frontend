{"version":3,"file":"static/js/4129.12b4a814.chunk.js","mappings":"8MAMe,SAASA,IAA6B,IAADC,EAAAC,EAClD,MAAM,YAAEC,EAAW,YAAEC,IAAgBC,EAAAA,EAAAA,MAE/B,QAAEC,IAAYC,EAAAA,EAAAA,gBAGdC,EACY,QAAhBL,QAAsCM,IAAZH,GAAyBH,KAAgD,QAArCF,EAAKS,EAAAA,GAAwBJ,UAAQ,IAAAL,OAAA,EAAhCA,EAAkCU,SACjGC,EACY,QAAhBR,QAAsCK,IAAZH,GAAyBF,KAAgD,QAArCF,EAAKQ,EAAAA,GAAwBJ,UAAQ,IAAAJ,OAAA,EAAhCA,EAAkCS,SAEvG,OACER,GACAC,IACCD,EAAYU,gBAAkBT,EAAYS,eAAkBL,GAAgBI,IAEtEE,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAI,QAAQb,IAAec,SAAO,KAE9CH,EAAAA,EAAAA,KAACI,EAAAA,QAAY,GACtB,C","sources":["pages/AddLiquidity/redirects.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { Navigate, useParams } from 'react-router-dom'\n\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport AddLiquidity from './index'\n\nexport default function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string; feeAmount?: string }>()\n\n  const { chainId } = useWeb3React()\n\n  // prevent weth + eth\n  const isETHOrWETHA =\n    currencyIdA === 'ETH' || (chainId !== undefined && currencyIdA === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n  const isETHOrWETHB =\n    currencyIdB === 'ETH' || (chainId !== undefined && currencyIdB === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n\n  if (\n    currencyIdA &&\n    currencyIdB &&\n    (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || (isETHOrWETHA && isETHOrWETHB))\n  ) {\n    return <Navigate to={`/add/${currencyIdA}`} replace />\n  }\n  return <AddLiquidity />\n}\n"],"names":["RedirectDuplicateTokenIds","_WRAPPED_NATIVE_CURRE","_WRAPPED_NATIVE_CURRE2","currencyIdA","currencyIdB","useParams","chainId","useWeb3React","isETHOrWETHA","undefined","WRAPPED_NATIVE_CURRENCY","address","isETHOrWETHB","toLowerCase","_jsx","Navigate","to","replace","AddLiquidity"],"sourceRoot":""}